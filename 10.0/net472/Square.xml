<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Square</name>
    </assembly>
    <members>
        <member name="T:Square.Apis.ApplePayApi">
            <summary>
            ApplePayApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ApplePayApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.ApplePayApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.ApplePayApi.RegisterDomain(Square.Models.RegisterDomainRequest)">
            <summary>
            Activates a domain for use with Apple Pay on the Web and Square. A validation.
            is performed on this domain by Apple to ensure that it is properly set up as.
            an Apple Pay enabled domain..
            This endpoint provides an easy way for platform developers to bulk activate.
            Apple Pay on the Web with Square for merchants using their platform..
            To learn more about Web Apple Pay, see.
            [Add the Apple Pay on the Web Button](https://developer.squareup.com/docs/payment-form/add-digital-wallets/apple-pay)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.RegisterDomainResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ApplePayApi.RegisterDomainAsync(Square.Models.RegisterDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Activates a domain for use with Apple Pay on the Web and Square. A validation.
            is performed on this domain by Apple to ensure that it is properly set up as.
            an Apple Pay enabled domain..
            This endpoint provides an easy way for platform developers to bulk activate.
            Apple Pay on the Web with Square for merchants using their platform..
            To learn more about Web Apple Pay, see.
            [Add the Apple Pay on the Web Button](https://developer.squareup.com/docs/payment-form/add-digital-wallets/apple-pay)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RegisterDomainResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.BankAccountsApi">
            <summary>
            BankAccountsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.BankAccountsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.BankAccountsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.BankAccountsApi.ListBankAccounts(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a list of [BankAccount]($m/BankAccount) objects linked to a Square account..
            </summary>
            <param name="cursor">Optional parameter: The pagination cursor returned by a previous call to this endpoint. Use it in the next `ListBankAccounts` request to retrieve the next set  of results.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <param name="limit">Optional parameter: Upper limit on the number of bank accounts to return in the response.  Currently, 1000 is the largest supported limit. You can specify a limit  of up to 1000 bank accounts. This is also the default limit..</param>
            <param name="locationId">Optional parameter: Location ID. You can specify this optional filter  to retrieve only the linked bank accounts belonging to a specific location..</param>
            <returns>Returns the Models.ListBankAccountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BankAccountsApi.ListBankAccountsAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of [BankAccount]($m/BankAccount) objects linked to a Square account..
            </summary>
            <param name="cursor">Optional parameter: The pagination cursor returned by a previous call to this endpoint. Use it in the next `ListBankAccounts` request to retrieve the next set  of results.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <param name="limit">Optional parameter: Upper limit on the number of bank accounts to return in the response.  Currently, 1000 is the largest supported limit. You can specify a limit  of up to 1000 bank accounts. This is also the default limit..</param>
            <param name="locationId">Optional parameter: Location ID. You can specify this optional filter  to retrieve only the linked bank accounts belonging to a specific location..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListBankAccountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BankAccountsApi.GetBankAccountByV1Id(System.String)">
            <summary>
            Returns details of a [BankAccount]($m/BankAccount) identified by V1 bank account ID..
            </summary>
            <param name="v1BankAccountId">Required parameter: Connect V1 ID of the desired `BankAccount`. For more information, see  [Retrieve a bank account by using an ID issued by V1 Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-v1-bank-accounts-api)..</param>
            <returns>Returns the Models.GetBankAccountByV1IdResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BankAccountsApi.GetBankAccountByV1IdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details of a [BankAccount]($m/BankAccount) identified by V1 bank account ID..
            </summary>
            <param name="v1BankAccountId">Required parameter: Connect V1 ID of the desired `BankAccount`. For more information, see  [Retrieve a bank account by using an ID issued by V1 Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-v1-bank-accounts-api)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetBankAccountByV1IdResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BankAccountsApi.GetBankAccount(System.String)">
            <summary>
            Returns details of a [BankAccount]($m/BankAccount).
            linked to a Square account..
            </summary>
            <param name="bankAccountId">Required parameter: Square-issued ID of the desired `BankAccount`..</param>
            <returns>Returns the Models.GetBankAccountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BankAccountsApi.GetBankAccountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details of a [BankAccount]($m/BankAccount).
            linked to a Square account..
            </summary>
            <param name="bankAccountId">Required parameter: Square-issued ID of the desired `BankAccount`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetBankAccountResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.BaseApi">
            <summary>
            The base class for all controller classes.
            </summary>
        </member>
        <member name="F:Square.Apis.BaseApi.httpClient">
            <summary>
            HttpClient instance.
            </summary>
        </member>
        <member name="M:Square.Apis.BaseApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.BaseApi"/> class.
            </summary>
            <param name="config">Configuration for the API.</param>
            <param name="httpCallBack">HTTP callback to catch before/after HTTP request/response events.</param>
            <param name="httpClient">HttpClient for the API.</param>
            <param name="authManagers">AuthManagers for the API.</param>
        </member>
        <member name="P:Square.Apis.BaseApi.AuthManagers">
            <summary>
            Gets AuthManager instance.
            </summary>
        </member>
        <member name="P:Square.Apis.BaseApi.HttpCallBack">
            <summary>
            Gets HttpCallBack instance.
            </summary>
        </member>
        <member name="P:Square.Apis.BaseApi.ArrayDeserializationFormat">
            <summary>
            Gets array deserialization format.
            </summary>
        </member>
        <member name="P:Square.Apis.BaseApi.Config">
            <summary>
            Gets configuration instance.
            </summary>
        </member>
        <member name="P:Square.Apis.BaseApi.UserAgent">
            <summary>
             Gets User-Agent header value.
            </summary>
        </member>
        <member name="M:Square.Apis.BaseApi.CreateJsonEncodedMultipartContent(System.Object,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})">
            <summary>
            Create JSON-encoded multipart content from input.
            </summary>
            <param name="input"> input object. </param>
            <param name="headers"> Headers dictionary. </param>
            <returns> MultipartContent. </returns>
        </member>
        <member name="M:Square.Apis.BaseApi.CreateFileMultipartContent(Square.Http.Client.FileStreamInfo,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})">
            <summary>
            Create binary multipart content from file.
            </summary>
            <param name="input"> FileStreamInfo object. </param>
            <param name="headers"> Headers dictionary. </param>
            <returns> MultipartContent. </returns>
        </member>
        <member name="M:Square.Apis.BaseApi.GetClientInstance">
            <summary>
            Get default HTTP client instance.
            </summary>
            <returns> IHttpClient. </returns>
        </member>
        <member name="M:Square.Apis.BaseApi.ValidateResponse(Square.Http.Response.HttpResponse,Square.Http.Client.HttpContext)">
            <summary>
            Validates the response against HTTP errors defined at the API level.
            </summary>
            <param name="response">The response recieved.</param>
            <param name="context">Context of the request and the recieved response.</param>
        </member>
        <member name="T:Square.Apis.BookingsApi">
            <summary>
            BookingsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.BookingsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.BookingsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.BookingsApi.CreateBooking(Square.Models.CreateBookingRequest)">
            <summary>
            Creates a booking..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.CreateBookingAsync(Square.Models.CreateBookingRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a booking..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.SearchAvailability(Square.Models.SearchAvailabilityRequest)">
            <summary>
            Searches for availabilities for booking..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchAvailabilityResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.SearchAvailabilityAsync(Square.Models.SearchAvailabilityRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for availabilities for booking..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchAvailabilityResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.RetrieveBusinessBookingProfile">
            <summary>
            Retrieves a seller's booking profile..
            </summary>
            <returns>Returns the Models.RetrieveBusinessBookingProfileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.RetrieveBusinessBookingProfileAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves a seller's booking profile..
            </summary>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveBusinessBookingProfileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.ListTeamMemberBookingProfiles(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Lists booking profiles for team members..
            </summary>
            <param name="bookableOnly">Optional parameter: Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`)..</param>
            <param name="limit">Optional parameter: The maximum number of results to return..</param>
            <param name="cursor">Optional parameter: The cursor for paginating through the results..</param>
            <param name="locationId">Optional parameter: Indicates whether to include only team members enabled at the given location in the returned result..</param>
            <returns>Returns the Models.ListTeamMemberBookingProfilesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.ListTeamMemberBookingProfilesAsync(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists booking profiles for team members..
            </summary>
            <param name="bookableOnly">Optional parameter: Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`)..</param>
            <param name="limit">Optional parameter: The maximum number of results to return..</param>
            <param name="cursor">Optional parameter: The cursor for paginating through the results..</param>
            <param name="locationId">Optional parameter: Indicates whether to include only team members enabled at the given location in the returned result..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListTeamMemberBookingProfilesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.RetrieveTeamMemberBookingProfile(System.String)">
            <summary>
            Retrieves a team member's booking profile..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve..</param>
            <returns>Returns the Models.RetrieveTeamMemberBookingProfileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.RetrieveTeamMemberBookingProfileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a team member's booking profile..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveTeamMemberBookingProfileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.RetrieveBooking(System.String)">
            <summary>
            Retrieves a booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-retrieved booking..</param>
            <returns>Returns the Models.RetrieveBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.RetrieveBookingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-retrieved booking..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.UpdateBooking(System.String,Square.Models.UpdateBookingRequest)">
            <summary>
            Updates a booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-updated booking..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.UpdateBookingAsync(System.String,Square.Models.UpdateBookingRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-updated booking..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.CancelBooking(System.String,Square.Models.CancelBookingRequest)">
            <summary>
            Cancels an existing booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-cancelled booking..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CancelBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.BookingsApi.CancelBookingAsync(System.String,Square.Models.CancelBookingRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels an existing booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-cancelled booking..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelBookingResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.CashDrawersApi">
            <summary>
            CashDrawersApi.
            </summary>
        </member>
        <member name="M:Square.Apis.CashDrawersApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.CashDrawersApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.CashDrawersApi.ListCashDrawerShifts(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Provides the details for all of the cash drawer shifts for a location.
            in a date range..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to query for a list of cash drawer shifts..</param>
            <param name="sortOrder">Optional parameter: The order in which cash drawer shifts are listed in the response, based on their opened_at field. Default value: ASC.</param>
            <param name="beginTime">Optional parameter: The inclusive start time of the query on opened_at, in ISO 8601 format..</param>
            <param name="endTime">Optional parameter: The exclusive end date of the query on opened_at, in ISO 8601 format..</param>
            <param name="limit">Optional parameter: Number of cash drawer shift events in a page of results (200 by default, 1000 max)..</param>
            <param name="cursor">Optional parameter: Opaque cursor for fetching the next page of results..</param>
            <returns>Returns the Models.ListCashDrawerShiftsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CashDrawersApi.ListCashDrawerShiftsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Provides the details for all of the cash drawer shifts for a location.
            in a date range..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to query for a list of cash drawer shifts..</param>
            <param name="sortOrder">Optional parameter: The order in which cash drawer shifts are listed in the response, based on their opened_at field. Default value: ASC.</param>
            <param name="beginTime">Optional parameter: The inclusive start time of the query on opened_at, in ISO 8601 format..</param>
            <param name="endTime">Optional parameter: The exclusive end date of the query on opened_at, in ISO 8601 format..</param>
            <param name="limit">Optional parameter: Number of cash drawer shift events in a page of results (200 by default, 1000 max)..</param>
            <param name="cursor">Optional parameter: Opaque cursor for fetching the next page of results..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCashDrawerShiftsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CashDrawersApi.RetrieveCashDrawerShift(System.String,System.String)">
            <summary>
            Provides the summary details for a single cash drawer shift. See.
            [ListCashDrawerShiftEvents]($e/CashDrawers/ListCashDrawerShiftEvents) for a list of cash drawer shift events..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to retrieve cash drawer shifts from..</param>
            <param name="shiftId">Required parameter: The shift ID..</param>
            <returns>Returns the Models.RetrieveCashDrawerShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CashDrawersApi.RetrieveCashDrawerShiftAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Provides the summary details for a single cash drawer shift. See.
            [ListCashDrawerShiftEvents]($e/CashDrawers/ListCashDrawerShiftEvents) for a list of cash drawer shift events..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to retrieve cash drawer shifts from..</param>
            <param name="shiftId">Required parameter: The shift ID..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveCashDrawerShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CashDrawersApi.ListCashDrawerShiftEvents(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Provides a paginated list of events for a single cash drawer shift..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list cash drawer shifts for..</param>
            <param name="shiftId">Required parameter: The shift ID..</param>
            <param name="limit">Optional parameter: Number of resources to be returned in a page of results (200 by default, 1000 max)..</param>
            <param name="cursor">Optional parameter: Opaque cursor for fetching the next page of results..</param>
            <returns>Returns the Models.ListCashDrawerShiftEventsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CashDrawersApi.ListCashDrawerShiftEventsAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Provides a paginated list of events for a single cash drawer shift..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list cash drawer shifts for..</param>
            <param name="shiftId">Required parameter: The shift ID..</param>
            <param name="limit">Optional parameter: Number of resources to be returned in a page of results (200 by default, 1000 max)..</param>
            <param name="cursor">Optional parameter: Opaque cursor for fetching the next page of results..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCashDrawerShiftEventsResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.CatalogApi">
            <summary>
            CatalogApi.
            </summary>
        </member>
        <member name="M:Square.Apis.CatalogApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.CatalogApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.CatalogApi.BatchDeleteCatalogObjects(Square.Models.BatchDeleteCatalogObjectsRequest)">
            <summary>
            Deletes a set of [CatalogItem]($m/CatalogItem)s based on the.
            provided list of target IDs and returns a set of successfully deleted IDs in.
            the response. Deletion is a cascading event such that all children of the.
            targeted object are also deleted. For example, deleting a CatalogItem will.
            also delete all of its [CatalogItemVariation]($m/CatalogItemVariation).
            children..
            `BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted.
            IDs can be deleted. The response will only include IDs that were.
            actually deleted..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchDeleteCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.BatchDeleteCatalogObjectsAsync(Square.Models.BatchDeleteCatalogObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a set of [CatalogItem]($m/CatalogItem)s based on the.
            provided list of target IDs and returns a set of successfully deleted IDs in.
            the response. Deletion is a cascading event such that all children of the.
            targeted object are also deleted. For example, deleting a CatalogItem will.
            also delete all of its [CatalogItemVariation]($m/CatalogItemVariation).
            children..
            `BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted.
            IDs can be deleted. The response will only include IDs that were.
            actually deleted..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchDeleteCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.BatchRetrieveCatalogObjects(Square.Models.BatchRetrieveCatalogObjectsRequest)">
            <summary>
            Returns a set of objects based on the provided ID..
            Each [CatalogItem]($m/CatalogItem) returned in the set includes all of its.
            child information including: all of its.
            [CatalogItemVariation]($m/CatalogItemVariation) objects, references to.
            its [CatalogModifierList]($m/CatalogModifierList) objects, and the ids of.
            any [CatalogTax]($m/CatalogTax) objects that apply to it..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchRetrieveCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.BatchRetrieveCatalogObjectsAsync(Square.Models.BatchRetrieveCatalogObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a set of objects based on the provided ID..
            Each [CatalogItem]($m/CatalogItem) returned in the set includes all of its.
            child information including: all of its.
            [CatalogItemVariation]($m/CatalogItemVariation) objects, references to.
            its [CatalogModifierList]($m/CatalogModifierList) objects, and the ids of.
            any [CatalogTax]($m/CatalogTax) objects that apply to it..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchRetrieveCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.BatchUpsertCatalogObjects(Square.Models.BatchUpsertCatalogObjectsRequest)">
            <summary>
            Creates or updates up to 10,000 target objects based on the provided.
            list of objects. The target objects are grouped into batches and each batch is.
            inserted/updated in an all-or-nothing manner. If an object within a batch is.
            malformed in some way, or violates a database constraint, the entire batch.
            containing that item will be disregarded. However, other batches in the same.
            request may still succeed. Each batch may contain up to 1,000 objects, and.
            batches will be processed in order as long as the total object count for the.
            request (items, variations, modifier lists, discounts, and taxes) is no more.
            than 10,000..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchUpsertCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.BatchUpsertCatalogObjectsAsync(Square.Models.BatchUpsertCatalogObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates up to 10,000 target objects based on the provided.
            list of objects. The target objects are grouped into batches and each batch is.
            inserted/updated in an all-or-nothing manner. If an object within a batch is.
            malformed in some way, or violates a database constraint, the entire batch.
            containing that item will be disregarded. However, other batches in the same.
            request may still succeed. Each batch may contain up to 1,000 objects, and.
            batches will be processed in order as long as the total object count for the.
            request (items, variations, modifier lists, discounts, and taxes) is no more.
            than 10,000..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchUpsertCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.CreateCatalogImage(Square.Models.CreateCatalogImageRequest,Square.Http.Client.FileStreamInfo)">
            <summary>
            Uploads an image file to be represented by a [CatalogImage]($m/CatalogImage) object linked to an existing.
            [CatalogObject]($m/CatalogObject) instance. A call to this endpoint can upload an image, link an image to.
            a catalog object, or do both..
            This `CreateCatalogImage` endpoint accepts HTTP multipart/form-data requests with a JSON part and an image file part in.
            JPEG, PJPEG, PNG, or GIF format. The maximum file size is 15MB..
            </summary>
            <param name="request">Optional parameter: Example: .</param>
            <param name="imageFile">Optional parameter: Example: .</param>
            <returns>Returns the Models.CreateCatalogImageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.CreateCatalogImageAsync(Square.Models.CreateCatalogImageRequest,Square.Http.Client.FileStreamInfo,System.Threading.CancellationToken)">
            <summary>
            Uploads an image file to be represented by a [CatalogImage]($m/CatalogImage) object linked to an existing.
            [CatalogObject]($m/CatalogObject) instance. A call to this endpoint can upload an image, link an image to.
            a catalog object, or do both..
            This `CreateCatalogImage` endpoint accepts HTTP multipart/form-data requests with a JSON part and an image file part in.
            JPEG, PJPEG, PNG, or GIF format. The maximum file size is 15MB..
            </summary>
            <param name="request">Optional parameter: Example: .</param>
            <param name="imageFile">Optional parameter: Example: .</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateCatalogImageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.CatalogInfo">
            <summary>
            Retrieves information about the Square Catalog API, such as batch size.
            limits that can be used by the `BatchUpsertCatalogObjects` endpoint..
            </summary>
            <returns>Returns the Models.CatalogInfoResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.CatalogInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves information about the Square Catalog API, such as batch size.
            limits that can be used by the `BatchUpsertCatalogObjects` endpoint..
            </summary>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CatalogInfoResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.ListCatalog(System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Returns a list of [CatalogObject]($m/CatalogObject)s that includes.
            all objects of a set of desired types (for example, all [CatalogItem]($m/CatalogItem).
            and [CatalogTax]($m/CatalogTax) objects) in the catalog. The `types` parameter.
            is specified as a comma-separated list of valid [CatalogObject]($m/CatalogObject) types:.
            `ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`, `IMAGE`..
            __Important:__ ListCatalog does not return deleted catalog items. To retrieve.
            deleted catalog items, use [SearchCatalogObjects]($e/Catalog/SearchCatalogObjects).
            and set the `include_deleted_objects` attribute value to `true`..
            </summary>
            <param name="cursor">Optional parameter: The pagination cursor returned in the previous response. Leave unset for an initial request. The page size is currently set to be 100. See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information..</param>
            <param name="types">Optional parameter: An optional case-insensitive, comma-separated list of object types to retrieve, for example `ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.  The legal values are taken from the CatalogObjectType enum: `ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`, `MODIFIER`, `MODIFIER_LIST`, or `IMAGE`..</param>
            <param name="catalogVersion">Optional parameter: The specific version of the catalog objects to be included in the response.  This allows you to retrieve historical versions of objects. The specified version value is matched against the [CatalogObject]($m/CatalogObject)s' `version` attribute..</param>
            <returns>Returns the Models.ListCatalogResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.ListCatalogAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a list of [CatalogObject]($m/CatalogObject)s that includes.
            all objects of a set of desired types (for example, all [CatalogItem]($m/CatalogItem).
            and [CatalogTax]($m/CatalogTax) objects) in the catalog. The `types` parameter.
            is specified as a comma-separated list of valid [CatalogObject]($m/CatalogObject) types:.
            `ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`, `IMAGE`..
            __Important:__ ListCatalog does not return deleted catalog items. To retrieve.
            deleted catalog items, use [SearchCatalogObjects]($e/Catalog/SearchCatalogObjects).
            and set the `include_deleted_objects` attribute value to `true`..
            </summary>
            <param name="cursor">Optional parameter: The pagination cursor returned in the previous response. Leave unset for an initial request. The page size is currently set to be 100. See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information..</param>
            <param name="types">Optional parameter: An optional case-insensitive, comma-separated list of object types to retrieve, for example `ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.  The legal values are taken from the CatalogObjectType enum: `ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`, `MODIFIER`, `MODIFIER_LIST`, or `IMAGE`..</param>
            <param name="catalogVersion">Optional parameter: The specific version of the catalog objects to be included in the response.  This allows you to retrieve historical versions of objects. The specified version value is matched against the [CatalogObject]($m/CatalogObject)s' `version` attribute..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCatalogResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.UpsertCatalogObject(Square.Models.UpsertCatalogObjectRequest)">
            <summary>
            Creates or updates the target [CatalogObject]($m/CatalogObject)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpsertCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.UpsertCatalogObjectAsync(Square.Models.UpsertCatalogObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the target [CatalogObject]($m/CatalogObject)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpsertCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.DeleteCatalogObject(System.String)">
            <summary>
            Deletes a single [CatalogObject]($m/CatalogObject) based on the.
            provided ID and returns the set of successfully deleted IDs in the response..
            Deletion is a cascading event such that all children of the targeted object.
            are also deleted. For example, deleting a [CatalogItem]($m/CatalogItem).
            will also delete all of its.
            [CatalogItemVariation]($m/CatalogItemVariation) children..
            </summary>
            <param name="objectId">Required parameter: The ID of the catalog object to be deleted. When an object is deleted, other objects in the graph that depend on that object will be deleted as well (for example, deleting a catalog item will delete its catalog item variations)..</param>
            <returns>Returns the Models.DeleteCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.DeleteCatalogObjectAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a single [CatalogObject]($m/CatalogObject) based on the.
            provided ID and returns the set of successfully deleted IDs in the response..
            Deletion is a cascading event such that all children of the targeted object.
            are also deleted. For example, deleting a [CatalogItem]($m/CatalogItem).
            will also delete all of its.
            [CatalogItemVariation]($m/CatalogItemVariation) children..
            </summary>
            <param name="objectId">Required parameter: The ID of the catalog object to be deleted. When an object is deleted, other objects in the graph that depend on that object will be deleted as well (for example, deleting a catalog item will delete its catalog item variations)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.RetrieveCatalogObject(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Returns a single [CatalogItem]($m/CatalogItem) as a.
            [CatalogObject]($m/CatalogObject) based on the provided ID. The returned.
            object includes all of the relevant [CatalogItem]($m/CatalogItem).
            information including: [CatalogItemVariation]($m/CatalogItemVariation).
            children, references to its.
            [CatalogModifierList]($m/CatalogModifierList) objects, and the ids of.
            any [CatalogTax]($m/CatalogTax) objects that apply to it..
            </summary>
            <param name="objectId">Required parameter: The object ID of any type of catalog objects to be retrieved..</param>
            <param name="includeRelatedObjects">Optional parameter: If `true`, the response will include additional objects that are related to the requested object, as follows:  If the `object` field of the response contains a `CatalogItem`, its associated `CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will be returned in the `related_objects` field of the response. If the `object` field of the response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned in the `related_objects` field of the response.  Default value: `false`.</param>
            <param name="catalogVersion">Optional parameter: Requests objects as of a specific version of the catalog. This allows you to retrieve historical versions of objects. The value to retrieve a specific version of an object can be found in the version field of [CatalogObject]($m/CatalogObject)s..</param>
            <returns>Returns the Models.RetrieveCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.RetrieveCatalogObjectAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a single [CatalogItem]($m/CatalogItem) as a.
            [CatalogObject]($m/CatalogObject) based on the provided ID. The returned.
            object includes all of the relevant [CatalogItem]($m/CatalogItem).
            information including: [CatalogItemVariation]($m/CatalogItemVariation).
            children, references to its.
            [CatalogModifierList]($m/CatalogModifierList) objects, and the ids of.
            any [CatalogTax]($m/CatalogTax) objects that apply to it..
            </summary>
            <param name="objectId">Required parameter: The object ID of any type of catalog objects to be retrieved..</param>
            <param name="includeRelatedObjects">Optional parameter: If `true`, the response will include additional objects that are related to the requested object, as follows:  If the `object` field of the response contains a `CatalogItem`, its associated `CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will be returned in the `related_objects` field of the response. If the `object` field of the response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned in the `related_objects` field of the response.  Default value: `false`.</param>
            <param name="catalogVersion">Optional parameter: Requests objects as of a specific version of the catalog. This allows you to retrieve historical versions of objects. The value to retrieve a specific version of an object can be found in the version field of [CatalogObject]($m/CatalogObject)s..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.SearchCatalogObjects(Square.Models.SearchCatalogObjectsRequest)">
            <summary>
            Searches for [CatalogObject]($m/CatalogObject) of any type by matching supported search attribute values,.
            excluding custom attribute values on items or item variations, against one or more of the specified query expressions..
            This (`SearchCatalogObjects`) endpoint differs from the [SearchCatalogItems]($e/Catalog/SearchCatalogItems).
            endpoint in the following aspects:.
            - `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects..
            - `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not..
            - `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does..
            - The both endpoints have different call conventions, including the query filter formats..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.SearchCatalogObjectsAsync(Square.Models.SearchCatalogObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for [CatalogObject]($m/CatalogObject) of any type by matching supported search attribute values,.
            excluding custom attribute values on items or item variations, against one or more of the specified query expressions..
            This (`SearchCatalogObjects`) endpoint differs from the [SearchCatalogItems]($e/Catalog/SearchCatalogItems).
            endpoint in the following aspects:.
            - `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects..
            - `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not..
            - `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does..
            - The both endpoints have different call conventions, including the query filter formats..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.SearchCatalogItems(Square.Models.SearchCatalogItemsRequest)">
            <summary>
            Searches for catalog items or item variations by matching supported search attribute values, including.
            custom attribute values, against one or more of the specified query expressions..
            This (`SearchCatalogItems`) endpoint differs from the [SearchCatalogObjects]($e/Catalog/SearchCatalogObjects).
            endpoint in the following aspects:.
            - `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects..
            - `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not..
            - `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does..
            - The both endpoints use different call conventions, including the query filter formats..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchCatalogItemsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.SearchCatalogItemsAsync(Square.Models.SearchCatalogItemsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for catalog items or item variations by matching supported search attribute values, including.
            custom attribute values, against one or more of the specified query expressions..
            This (`SearchCatalogItems`) endpoint differs from the [SearchCatalogObjects]($e/Catalog/SearchCatalogObjects).
            endpoint in the following aspects:.
            - `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects..
            - `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not..
            - `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does..
            - The both endpoints use different call conventions, including the query filter formats..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchCatalogItemsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.UpdateItemModifierLists(Square.Models.UpdateItemModifierListsRequest)">
            <summary>
            Updates the [CatalogModifierList]($m/CatalogModifierList) objects.
            that apply to the targeted [CatalogItem]($m/CatalogItem) without having.
            to perform an upsert on the entire item..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateItemModifierListsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.UpdateItemModifierListsAsync(Square.Models.UpdateItemModifierListsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the [CatalogModifierList]($m/CatalogModifierList) objects.
            that apply to the targeted [CatalogItem]($m/CatalogItem) without having.
            to perform an upsert on the entire item..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateItemModifierListsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.UpdateItemTaxes(Square.Models.UpdateItemTaxesRequest)">
            <summary>
            Updates the [CatalogTax]($m/CatalogTax) objects that apply to the.
            targeted [CatalogItem]($m/CatalogItem) without having to perform an.
            upsert on the entire item..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateItemTaxesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CatalogApi.UpdateItemTaxesAsync(Square.Models.UpdateItemTaxesRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the [CatalogTax]($m/CatalogTax) objects that apply to the.
            targeted [CatalogItem]($m/CatalogItem) without having to perform an.
            upsert on the entire item..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateItemTaxesResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.CheckoutApi">
            <summary>
            CheckoutApi.
            </summary>
        </member>
        <member name="M:Square.Apis.CheckoutApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.CheckoutApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.CheckoutApi.CreateCheckout(System.String,Square.Models.CreateCheckoutRequest)">
            <summary>
            Links a `checkoutId` to a `checkout_page_url` that customers are.
            directed to in order to provide their payment information using a.
            payment processing workflow hosted on connect.squareup.com..
            </summary>
            <param name="locationId">Required parameter: The ID of the business location to associate the checkout with..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CheckoutApi.CreateCheckoutAsync(System.String,Square.Models.CreateCheckoutRequest,System.Threading.CancellationToken)">
            <summary>
            Links a `checkoutId` to a `checkout_page_url` that customers are.
            directed to in order to provide their payment information using a.
            payment processing workflow hosted on connect.squareup.com..
            </summary>
            <param name="locationId">Required parameter: The ID of the business location to associate the checkout with..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateCheckoutResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.CustomerGroupsApi">
            <summary>
            CustomerGroupsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.CustomerGroupsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.ListCustomerGroups(System.String)">
            <summary>
            Retrieves the list of customer groups of a business..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <returns>Returns the Models.ListCustomerGroupsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.ListCustomerGroupsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of customer groups of a business..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCustomerGroupsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.CreateCustomerGroup(Square.Models.CreateCustomerGroupRequest)">
            <summary>
            Creates a new customer group for a business..
            The request must include the `name` value of the group..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.CreateCustomerGroupAsync(Square.Models.CreateCustomerGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new customer group for a business..
            The request must include the `name` value of the group..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.DeleteCustomerGroup(System.String)">
            <summary>
            Deletes a customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to delete..</param>
            <returns>Returns the Models.DeleteCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.DeleteCustomerGroupAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to delete..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.RetrieveCustomerGroup(System.String)">
            <summary>
            Retrieves a specific customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to retrieve..</param>
            <returns>Returns the Models.RetrieveCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.RetrieveCustomerGroupAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a specific customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.UpdateCustomerGroup(System.String,Square.Models.UpdateCustomerGroupRequest)">
            <summary>
            Updates a customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerGroupsApi.UpdateCustomerGroupAsync(System.String,Square.Models.UpdateCustomerGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.CustomersApi">
            <summary>
            CustomersApi.
            </summary>
        </member>
        <member name="M:Square.Apis.CustomersApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.CustomersApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.CustomersApi.ListCustomers(System.String,System.String,System.String)">
            <summary>
            Lists customer profiles associated with a Square account..
            Under normal operating conditions, newly created or updated customer profiles become available.
            for the listing operation in well under 30 seconds. Occasionally, propagation of the new or updated.
            profiles can take closer to one minute or longer, especially during network incidents and outages..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="sortField">Optional parameter: Indicates how customers should be sorted.  Default: `DEFAULT`..</param>
            <param name="sortOrder">Optional parameter: Indicates whether customers should be sorted in ascending (`ASC`) or descending (`DESC`) order.  Default: `ASC`..</param>
            <returns>Returns the Models.ListCustomersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.ListCustomersAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists customer profiles associated with a Square account..
            Under normal operating conditions, newly created or updated customer profiles become available.
            for the listing operation in well under 30 seconds. Occasionally, propagation of the new or updated.
            profiles can take closer to one minute or longer, especially during network incidents and outages..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="sortField">Optional parameter: Indicates how customers should be sorted.  Default: `DEFAULT`..</param>
            <param name="sortOrder">Optional parameter: Indicates whether customers should be sorted in ascending (`ASC`) or descending (`DESC`) order.  Default: `ASC`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCustomersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.CreateCustomer(Square.Models.CreateCustomerRequest)">
            <summary>
            Creates a new customer for a business, which can have associated cards on file..
            You must provide at least one of the following values in your request to this.
            endpoint:.
            - `given_name`.
            - `family_name`.
            - `company_name`.
            - `email_address`.
            - `phone_number`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.CreateCustomerAsync(Square.Models.CreateCustomerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new customer for a business, which can have associated cards on file..
            You must provide at least one of the following values in your request to this.
            endpoint:.
            - `given_name`.
            - `family_name`.
            - `company_name`.
            - `email_address`.
            - `phone_number`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.SearchCustomers(Square.Models.SearchCustomersRequest)">
            <summary>
            Searches the customer profiles associated with a Square account using a supported query filter..
            Calling `SearchCustomers` without any explicit query filter returns all.
            customer profiles ordered alphabetically based on `given_name` and.
            `family_name`..
            Under normal operating conditions, newly created or updated customer profiles become available.
            for the search operation in well under 30 seconds. Occasionally, propagation of the new or updated.
            profiles can take closer to one minute or longer, especially during network incidents and outages..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchCustomersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.SearchCustomersAsync(Square.Models.SearchCustomersRequest,System.Threading.CancellationToken)">
            <summary>
            Searches the customer profiles associated with a Square account using a supported query filter..
            Calling `SearchCustomers` without any explicit query filter returns all.
            customer profiles ordered alphabetically based on `given_name` and.
            `family_name`..
            Under normal operating conditions, newly created or updated customer profiles become available.
            for the search operation in well under 30 seconds. Occasionally, propagation of the new or updated.
            profiles can take closer to one minute or longer, especially during network incidents and outages..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchCustomersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.DeleteCustomer(System.String,System.Nullable{System.Int64})">
            <summary>
            Deletes a customer profile from a business, including any linked cards on file. .
            As a best practice, you should include the `version` field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. The value must be set to the current version of the customer profile. .
            To delete a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to delete..</param>
            <param name="version">Optional parameter: The current version of the customer profile.   As a best practice, you should include this parameter to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control.  For more information, see [Delete a customer profile](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#delete-customer-profile)..</param>
            <returns>Returns the Models.DeleteCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.DeleteCustomerAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Deletes a customer profile from a business, including any linked cards on file. .
            As a best practice, you should include the `version` field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. The value must be set to the current version of the customer profile. .
            To delete a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to delete..</param>
            <param name="version">Optional parameter: The current version of the customer profile.   As a best practice, you should include this parameter to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control.  For more information, see [Delete a customer profile](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#delete-customer-profile)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.RetrieveCustomer(System.String)">
            <summary>
            Returns details for a single customer..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to retrieve..</param>
            <returns>Returns the Models.RetrieveCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.RetrieveCustomerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details for a single customer..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.UpdateCustomer(System.String,Square.Models.UpdateCustomerRequest)">
            <summary>
            Updates a customer profile. To change an attribute, specify the new value. To remove an attribute, specify the value as an empty string or empty object..
            As a best practice, you should include the `version` field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. The value must be set to the current version of the customer profile..
            To update a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile..
            You cannot use this endpoint to change cards on file. To change a card on file, call [DeleteCustomerCard]($e/Customers/DeleteCustomerCard) to delete the existing card and then call [CreateCustomerCard]($e/Customers/CreateCustomerCard) to create a new card..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.UpdateCustomerAsync(System.String,Square.Models.UpdateCustomerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a customer profile. To change an attribute, specify the new value. To remove an attribute, specify the value as an empty string or empty object..
            As a best practice, you should include the `version` field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. The value must be set to the current version of the customer profile..
            To update a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile..
            You cannot use this endpoint to change cards on file. To change a card on file, call [DeleteCustomerCard]($e/Customers/DeleteCustomerCard) to delete the existing card and then call [CreateCustomerCard]($e/Customers/CreateCustomerCard) to create a new card..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.CreateCustomerCard(System.String,Square.Models.CreateCustomerCardRequest)">
            <summary>
            Adds a card on file to an existing customer..
            As with charges, calls to `CreateCustomerCard` are idempotent. Multiple.
            calls with the same card nonce return the same card record that was created.
            with the provided nonce during the _first_ call..
            </summary>
            <param name="customerId">Required parameter: The Square ID of the customer profile the card is linked to..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateCustomerCardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.CreateCustomerCardAsync(System.String,Square.Models.CreateCustomerCardRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a card on file to an existing customer..
            As with charges, calls to `CreateCustomerCard` are idempotent. Multiple.
            calls with the same card nonce return the same card record that was created.
            with the provided nonce during the _first_ call..
            </summary>
            <param name="customerId">Required parameter: The Square ID of the customer profile the card is linked to..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateCustomerCardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.DeleteCustomerCard(System.String,System.String)">
            <summary>
            Removes a card on file from a customer..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer that the card on file belongs to..</param>
            <param name="cardId">Required parameter: The ID of the card on file to delete..</param>
            <returns>Returns the Models.DeleteCustomerCardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.DeleteCustomerCardAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a card on file from a customer..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer that the card on file belongs to..</param>
            <param name="cardId">Required parameter: The ID of the card on file to delete..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteCustomerCardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.RemoveGroupFromCustomer(System.String,System.String)">
            <summary>
            Removes a group membership from a customer..
            The customer is identified by the `customer_id` value.
            and the customer group is identified by the `group_id` value..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to remove from the group..</param>
            <param name="groupId">Required parameter: The ID of the customer group to remove the customer from..</param>
            <returns>Returns the Models.RemoveGroupFromCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.RemoveGroupFromCustomerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a group membership from a customer..
            The customer is identified by the `customer_id` value.
            and the customer group is identified by the `group_id` value..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to remove from the group..</param>
            <param name="groupId">Required parameter: The ID of the customer group to remove the customer from..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RemoveGroupFromCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.AddGroupToCustomer(System.String,System.String)">
            <summary>
            Adds a group membership to a customer..
            The customer is identified by the `customer_id` value.
            and the customer group is identified by the `group_id` value..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to add to a group..</param>
            <param name="groupId">Required parameter: The ID of the customer group to add the customer to..</param>
            <returns>Returns the Models.AddGroupToCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomersApi.AddGroupToCustomerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a group membership to a customer..
            The customer is identified by the `customer_id` value.
            and the customer group is identified by the `group_id` value..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to add to a group..</param>
            <param name="groupId">Required parameter: The ID of the customer group to add the customer to..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.AddGroupToCustomerResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.CustomerSegmentsApi">
            <summary>
            CustomerSegmentsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.CustomerSegmentsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.CustomerSegmentsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.CustomerSegmentsApi.ListCustomerSegments(System.String)">
            <summary>
            Retrieves the list of customer segments of a business..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by previous calls to `ListCustomerSegments`. This cursor is used to retrieve the next set of query results.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <returns>Returns the Models.ListCustomerSegmentsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerSegmentsApi.ListCustomerSegmentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of customer segments of a business..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by previous calls to `ListCustomerSegments`. This cursor is used to retrieve the next set of query results.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCustomerSegmentsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerSegmentsApi.RetrieveCustomerSegment(System.String)">
            <summary>
            Retrieves a specific customer segment as identified by the `segment_id` value..
            </summary>
            <param name="segmentId">Required parameter: The Square-issued ID of the customer segment..</param>
            <returns>Returns the Models.RetrieveCustomerSegmentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.CustomerSegmentsApi.RetrieveCustomerSegmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a specific customer segment as identified by the `segment_id` value..
            </summary>
            <param name="segmentId">Required parameter: The Square-issued ID of the customer segment..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveCustomerSegmentResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.DevicesApi">
            <summary>
            DevicesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.DevicesApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.DevicesApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.DevicesApi.ListDeviceCodes(System.String,System.String,System.String,System.String)">
            <summary>
            Lists all DeviceCodes associated with the merchant..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <param name="locationId">Optional parameter: If specified, only returns DeviceCodes of the specified location. Returns DeviceCodes of all locations if empty..</param>
            <param name="productType">Optional parameter: If specified, only returns DeviceCodes targeting the specified product type. Returns DeviceCodes of all product types if empty..</param>
            <param name="status">Optional parameter: If specified, returns DeviceCodes with the specified statuses. Returns DeviceCodes of status `PAIRED` and `UNPAIRED` if empty..</param>
            <returns>Returns the Models.ListDeviceCodesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DevicesApi.ListDeviceCodesAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all DeviceCodes associated with the merchant..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <param name="locationId">Optional parameter: If specified, only returns DeviceCodes of the specified location. Returns DeviceCodes of all locations if empty..</param>
            <param name="productType">Optional parameter: If specified, only returns DeviceCodes targeting the specified product type. Returns DeviceCodes of all product types if empty..</param>
            <param name="status">Optional parameter: If specified, returns DeviceCodes with the specified statuses. Returns DeviceCodes of status `PAIRED` and `UNPAIRED` if empty..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListDeviceCodesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DevicesApi.CreateDeviceCode(Square.Models.CreateDeviceCodeRequest)">
            <summary>
            Creates a DeviceCode that can be used to login to a Square Terminal device to enter the connected.
            terminal mode..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateDeviceCodeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DevicesApi.CreateDeviceCodeAsync(Square.Models.CreateDeviceCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a DeviceCode that can be used to login to a Square Terminal device to enter the connected.
            terminal mode..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateDeviceCodeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DevicesApi.GetDeviceCode(System.String)">
            <summary>
            Retrieves DeviceCode with the associated ID..
            </summary>
            <param name="id">Required parameter: The unique identifier for the device code..</param>
            <returns>Returns the Models.GetDeviceCodeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DevicesApi.GetDeviceCodeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves DeviceCode with the associated ID..
            </summary>
            <param name="id">Required parameter: The unique identifier for the device code..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetDeviceCodeResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.DisputesApi">
            <summary>
            DisputesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.DisputesApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.DisputesApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.DisputesApi.ListDisputes(System.String,System.String,System.String)">
            <summary>
            Returns a list of disputes associated with a particular account..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query. For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="states">Optional parameter: The dispute states to filter the result. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`)..</param>
            <param name="locationId">Optional parameter: The ID of the location for which to return a list of disputes. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations..</param>
            <returns>Returns the Models.ListDisputesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.ListDisputesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of disputes associated with a particular account..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query. For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="states">Optional parameter: The dispute states to filter the result. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`)..</param>
            <param name="locationId">Optional parameter: The ID of the location for which to return a list of disputes. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListDisputesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.RetrieveDispute(System.String)">
            <summary>
            Returns details about a specific dispute..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want more details about..</param>
            <returns>Returns the Models.RetrieveDisputeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.RetrieveDisputeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details about a specific dispute..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want more details about..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveDisputeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.AcceptDispute(System.String)">
            <summary>
            Accepts the loss on a dispute. Square returns the disputed amount to the cardholder and.
            updates the dispute state to ACCEPTED..
            Square debits the disputed amount from the seller’s Square account. If the Square account.
            does not have sufficient funds, Square debits the associated bank account..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to accept..</param>
            <returns>Returns the Models.AcceptDisputeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.AcceptDisputeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Accepts the loss on a dispute. Square returns the disputed amount to the cardholder and.
            updates the dispute state to ACCEPTED..
            Square debits the disputed amount from the seller’s Square account. If the Square account.
            does not have sufficient funds, Square debits the associated bank account..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to accept..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.AcceptDisputeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.ListDisputeEvidence(System.String)">
            <summary>
            Returns a list of evidence associated with a dispute..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute..</param>
            <returns>Returns the Models.ListDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.ListDisputeEvidenceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of evidence associated with a dispute..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.RemoveDisputeEvidence(System.String,System.String)">
            <summary>
            Removes specified evidence from a dispute..
            Square does not send the bank any evidence that is removed. Also, you cannot remove evidence after.
            submitting it to the bank using [SubmitEvidence]($e/Disputes/SubmitEvidence)..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to remove evidence from..</param>
            <param name="evidenceId">Required parameter: The ID of the evidence you want to remove..</param>
            <returns>Returns the Models.RemoveDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.RemoveDisputeEvidenceAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes specified evidence from a dispute..
            Square does not send the bank any evidence that is removed. Also, you cannot remove evidence after.
            submitting it to the bank using [SubmitEvidence]($e/Disputes/SubmitEvidence)..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to remove evidence from..</param>
            <param name="evidenceId">Required parameter: The ID of the evidence you want to remove..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RemoveDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.RetrieveDisputeEvidence(System.String,System.String)">
            <summary>
            Returns the specific evidence metadata associated with a specific dispute..
            You must maintain a copy of the evidence you upload if you want to reference it later. You cannot.
            download the evidence after you upload it..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute that you want to retrieve evidence from..</param>
            <param name="evidenceId">Required parameter: The ID of the evidence to retrieve..</param>
            <returns>Returns the Models.RetrieveDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.RetrieveDisputeEvidenceAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the specific evidence metadata associated with a specific dispute..
            You must maintain a copy of the evidence you upload if you want to reference it later. You cannot.
            download the evidence after you upload it..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute that you want to retrieve evidence from..</param>
            <param name="evidenceId">Required parameter: The ID of the evidence to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.CreateDisputeEvidenceFile(System.String,Square.Models.CreateDisputeEvidenceFileRequest,Square.Http.Client.FileStreamInfo)">
            <summary>
            Uploads a file to use as evidence in a dispute challenge. The endpoint accepts HTTP.
            multipart/form-data file uploads in HEIC, HEIF, JPEG, PDF, PNG, and TIFF formats..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to upload evidence for..</param>
            <param name="request">Optional parameter: Defines the parameters for a `CreateDisputeEvidenceFile` request..</param>
            <param name="imageFile">Optional parameter: Example: .</param>
            <returns>Returns the Models.CreateDisputeEvidenceFileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.CreateDisputeEvidenceFileAsync(System.String,Square.Models.CreateDisputeEvidenceFileRequest,Square.Http.Client.FileStreamInfo,System.Threading.CancellationToken)">
            <summary>
            Uploads a file to use as evidence in a dispute challenge. The endpoint accepts HTTP.
            multipart/form-data file uploads in HEIC, HEIF, JPEG, PDF, PNG, and TIFF formats..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to upload evidence for..</param>
            <param name="request">Optional parameter: Defines the parameters for a `CreateDisputeEvidenceFile` request..</param>
            <param name="imageFile">Optional parameter: Example: .</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateDisputeEvidenceFileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.CreateDisputeEvidenceText(System.String,Square.Models.CreateDisputeEvidenceTextRequest)">
            <summary>
            Uploads text to use as evidence for a dispute challenge..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to upload evidence for..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateDisputeEvidenceTextResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.CreateDisputeEvidenceTextAsync(System.String,Square.Models.CreateDisputeEvidenceTextRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads text to use as evidence for a dispute challenge..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to upload evidence for..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateDisputeEvidenceTextResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.SubmitEvidence(System.String)">
            <summary>
            Submits evidence to the cardholder's bank..
            Before submitting evidence, Square compiles all available evidence. This includes evidence uploaded.
            using the [CreateDisputeEvidenceFile]($e/Disputes/CreateDisputeEvidenceFile) and.
            [CreateDisputeEvidenceText]($e/Disputes/CreateDisputeEvidenceText) endpoints and.
            evidence automatically provided by Square, when available..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute that you want to submit evidence for..</param>
            <returns>Returns the Models.SubmitEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.DisputesApi.SubmitEvidenceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Submits evidence to the cardholder's bank..
            Before submitting evidence, Square compiles all available evidence. This includes evidence uploaded.
            using the [CreateDisputeEvidenceFile]($e/Disputes/CreateDisputeEvidenceFile) and.
            [CreateDisputeEvidenceText]($e/Disputes/CreateDisputeEvidenceText) endpoints and.
            evidence automatically provided by Square, when available..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute that you want to submit evidence for..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SubmitEvidenceResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.EmployeesApi">
            <summary>
            EmployeesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.EmployeesApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.EmployeesApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.EmployeesApi.ListEmployees(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            ListEmployees.
            </summary>
            <param name="locationId">Optional parameter: Example: .</param>
            <param name="status">Optional parameter: Specifies the EmployeeStatus to filter the employee by..</param>
            <param name="limit">Optional parameter: The number of employees to be returned on each page..</param>
            <param name="cursor">Optional parameter: The token required to retrieve the specified page of results..</param>
            <returns>Returns the Models.ListEmployeesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.EmployeesApi.ListEmployeesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            ListEmployees.
            </summary>
            <param name="locationId">Optional parameter: Example: .</param>
            <param name="status">Optional parameter: Specifies the EmployeeStatus to filter the employee by..</param>
            <param name="limit">Optional parameter: The number of employees to be returned on each page..</param>
            <param name="cursor">Optional parameter: The token required to retrieve the specified page of results..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListEmployeesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.EmployeesApi.RetrieveEmployee(System.String)">
            <summary>
            RetrieveEmployee.
            </summary>
            <param name="id">Required parameter: UUID for the employee that was requested..</param>
            <returns>Returns the Models.RetrieveEmployeeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.EmployeesApi.RetrieveEmployeeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            RetrieveEmployee.
            </summary>
            <param name="id">Required parameter: UUID for the employee that was requested..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveEmployeeResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IApplePayApi">
            <summary>
            IApplePayApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IApplePayApi.RegisterDomain(Square.Models.RegisterDomainRequest)">
            <summary>
            Activates a domain for use with Apple Pay on the Web and Square. A validation.
            is performed on this domain by Apple to ensure that it is properly set up as.
            an Apple Pay enabled domain..
            This endpoint provides an easy way for platform developers to bulk activate.
            Apple Pay on the Web with Square for merchants using their platform..
            To learn more about Web Apple Pay, see.
            [Add the Apple Pay on the Web Button](https://developer.squareup.com/docs/payment-form/add-digital-wallets/apple-pay)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.RegisterDomainResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IApplePayApi.RegisterDomainAsync(Square.Models.RegisterDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Activates a domain for use with Apple Pay on the Web and Square. A validation.
            is performed on this domain by Apple to ensure that it is properly set up as.
            an Apple Pay enabled domain..
            This endpoint provides an easy way for platform developers to bulk activate.
            Apple Pay on the Web with Square for merchants using their platform..
            To learn more about Web Apple Pay, see.
            [Add the Apple Pay on the Web Button](https://developer.squareup.com/docs/payment-form/add-digital-wallets/apple-pay)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RegisterDomainResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IBankAccountsApi">
            <summary>
            IBankAccountsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IBankAccountsApi.ListBankAccounts(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a list of [BankAccount]($m/BankAccount) objects linked to a Square account..
            </summary>
            <param name="cursor">Optional parameter: The pagination cursor returned by a previous call to this endpoint. Use it in the next `ListBankAccounts` request to retrieve the next set  of results.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <param name="limit">Optional parameter: Upper limit on the number of bank accounts to return in the response.  Currently, 1000 is the largest supported limit. You can specify a limit  of up to 1000 bank accounts. This is also the default limit..</param>
            <param name="locationId">Optional parameter: Location ID. You can specify this optional filter  to retrieve only the linked bank accounts belonging to a specific location..</param>
            <returns>Returns the Models.ListBankAccountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBankAccountsApi.ListBankAccountsAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of [BankAccount]($m/BankAccount) objects linked to a Square account..
            </summary>
            <param name="cursor">Optional parameter: The pagination cursor returned by a previous call to this endpoint. Use it in the next `ListBankAccounts` request to retrieve the next set  of results.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <param name="limit">Optional parameter: Upper limit on the number of bank accounts to return in the response.  Currently, 1000 is the largest supported limit. You can specify a limit  of up to 1000 bank accounts. This is also the default limit..</param>
            <param name="locationId">Optional parameter: Location ID. You can specify this optional filter  to retrieve only the linked bank accounts belonging to a specific location..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListBankAccountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBankAccountsApi.GetBankAccountByV1Id(System.String)">
            <summary>
            Returns details of a [BankAccount]($m/BankAccount) identified by V1 bank account ID..
            </summary>
            <param name="v1BankAccountId">Required parameter: Connect V1 ID of the desired `BankAccount`. For more information, see  [Retrieve a bank account by using an ID issued by V1 Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-v1-bank-accounts-api)..</param>
            <returns>Returns the Models.GetBankAccountByV1IdResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBankAccountsApi.GetBankAccountByV1IdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details of a [BankAccount]($m/BankAccount) identified by V1 bank account ID..
            </summary>
            <param name="v1BankAccountId">Required parameter: Connect V1 ID of the desired `BankAccount`. For more information, see  [Retrieve a bank account by using an ID issued by V1 Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api#retrieve-a-bank-account-by-using-an-id-issued-by-v1-bank-accounts-api)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetBankAccountByV1IdResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBankAccountsApi.GetBankAccount(System.String)">
            <summary>
            Returns details of a [BankAccount]($m/BankAccount).
            linked to a Square account..
            </summary>
            <param name="bankAccountId">Required parameter: Square-issued ID of the desired `BankAccount`..</param>
            <returns>Returns the Models.GetBankAccountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBankAccountsApi.GetBankAccountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details of a [BankAccount]($m/BankAccount).
            linked to a Square account..
            </summary>
            <param name="bankAccountId">Required parameter: Square-issued ID of the desired `BankAccount`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetBankAccountResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IBookingsApi">
            <summary>
            IBookingsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IBookingsApi.CreateBooking(Square.Models.CreateBookingRequest)">
            <summary>
            Creates a booking..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.CreateBookingAsync(Square.Models.CreateBookingRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a booking..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.SearchAvailability(Square.Models.SearchAvailabilityRequest)">
            <summary>
            Searches for availabilities for booking..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchAvailabilityResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.SearchAvailabilityAsync(Square.Models.SearchAvailabilityRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for availabilities for booking..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchAvailabilityResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.RetrieveBusinessBookingProfile">
            <summary>
            Retrieves a seller's booking profile..
            </summary>
            <returns>Returns the Models.RetrieveBusinessBookingProfileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.RetrieveBusinessBookingProfileAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves a seller's booking profile..
            </summary>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveBusinessBookingProfileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.ListTeamMemberBookingProfiles(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Lists booking profiles for team members..
            </summary>
            <param name="bookableOnly">Optional parameter: Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`)..</param>
            <param name="limit">Optional parameter: The maximum number of results to return..</param>
            <param name="cursor">Optional parameter: The cursor for paginating through the results..</param>
            <param name="locationId">Optional parameter: Indicates whether to include only team members enabled at the given location in the returned result..</param>
            <returns>Returns the Models.ListTeamMemberBookingProfilesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.ListTeamMemberBookingProfilesAsync(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists booking profiles for team members..
            </summary>
            <param name="bookableOnly">Optional parameter: Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`)..</param>
            <param name="limit">Optional parameter: The maximum number of results to return..</param>
            <param name="cursor">Optional parameter: The cursor for paginating through the results..</param>
            <param name="locationId">Optional parameter: Indicates whether to include only team members enabled at the given location in the returned result..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListTeamMemberBookingProfilesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.RetrieveTeamMemberBookingProfile(System.String)">
            <summary>
            Retrieves a team member's booking profile..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve..</param>
            <returns>Returns the Models.RetrieveTeamMemberBookingProfileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.RetrieveTeamMemberBookingProfileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a team member's booking profile..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveTeamMemberBookingProfileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.RetrieveBooking(System.String)">
            <summary>
            Retrieves a booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-retrieved booking..</param>
            <returns>Returns the Models.RetrieveBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.RetrieveBookingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-retrieved booking..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.UpdateBooking(System.String,Square.Models.UpdateBookingRequest)">
            <summary>
            Updates a booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-updated booking..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.UpdateBookingAsync(System.String,Square.Models.UpdateBookingRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-updated booking..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.CancelBooking(System.String,Square.Models.CancelBookingRequest)">
            <summary>
            Cancels an existing booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-cancelled booking..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CancelBookingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IBookingsApi.CancelBookingAsync(System.String,Square.Models.CancelBookingRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels an existing booking..
            </summary>
            <param name="bookingId">Required parameter: The ID of the [Booking]($m/Booking) object representing the to-be-cancelled booking..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelBookingResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ICashDrawersApi">
            <summary>
            ICashDrawersApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ICashDrawersApi.ListCashDrawerShifts(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Provides the details for all of the cash drawer shifts for a location.
            in a date range..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to query for a list of cash drawer shifts..</param>
            <param name="sortOrder">Optional parameter: The order in which cash drawer shifts are listed in the response, based on their opened_at field. Default value: ASC.</param>
            <param name="beginTime">Optional parameter: The inclusive start time of the query on opened_at, in ISO 8601 format..</param>
            <param name="endTime">Optional parameter: The exclusive end date of the query on opened_at, in ISO 8601 format..</param>
            <param name="limit">Optional parameter: Number of cash drawer shift events in a page of results (200 by default, 1000 max)..</param>
            <param name="cursor">Optional parameter: Opaque cursor for fetching the next page of results..</param>
            <returns>Returns the Models.ListCashDrawerShiftsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICashDrawersApi.ListCashDrawerShiftsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Provides the details for all of the cash drawer shifts for a location.
            in a date range..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to query for a list of cash drawer shifts..</param>
            <param name="sortOrder">Optional parameter: The order in which cash drawer shifts are listed in the response, based on their opened_at field. Default value: ASC.</param>
            <param name="beginTime">Optional parameter: The inclusive start time of the query on opened_at, in ISO 8601 format..</param>
            <param name="endTime">Optional parameter: The exclusive end date of the query on opened_at, in ISO 8601 format..</param>
            <param name="limit">Optional parameter: Number of cash drawer shift events in a page of results (200 by default, 1000 max)..</param>
            <param name="cursor">Optional parameter: Opaque cursor for fetching the next page of results..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCashDrawerShiftsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICashDrawersApi.RetrieveCashDrawerShift(System.String,System.String)">
            <summary>
            Provides the summary details for a single cash drawer shift. See.
            [ListCashDrawerShiftEvents]($e/CashDrawers/ListCashDrawerShiftEvents) for a list of cash drawer shift events..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to retrieve cash drawer shifts from..</param>
            <param name="shiftId">Required parameter: The shift ID..</param>
            <returns>Returns the Models.RetrieveCashDrawerShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICashDrawersApi.RetrieveCashDrawerShiftAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Provides the summary details for a single cash drawer shift. See.
            [ListCashDrawerShiftEvents]($e/CashDrawers/ListCashDrawerShiftEvents) for a list of cash drawer shift events..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to retrieve cash drawer shifts from..</param>
            <param name="shiftId">Required parameter: The shift ID..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveCashDrawerShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICashDrawersApi.ListCashDrawerShiftEvents(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Provides a paginated list of events for a single cash drawer shift..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list cash drawer shifts for..</param>
            <param name="shiftId">Required parameter: The shift ID..</param>
            <param name="limit">Optional parameter: Number of resources to be returned in a page of results (200 by default, 1000 max)..</param>
            <param name="cursor">Optional parameter: Opaque cursor for fetching the next page of results..</param>
            <returns>Returns the Models.ListCashDrawerShiftEventsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICashDrawersApi.ListCashDrawerShiftEventsAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Provides a paginated list of events for a single cash drawer shift..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list cash drawer shifts for..</param>
            <param name="shiftId">Required parameter: The shift ID..</param>
            <param name="limit">Optional parameter: Number of resources to be returned in a page of results (200 by default, 1000 max)..</param>
            <param name="cursor">Optional parameter: Opaque cursor for fetching the next page of results..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCashDrawerShiftEventsResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ICatalogApi">
            <summary>
            ICatalogApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ICatalogApi.BatchDeleteCatalogObjects(Square.Models.BatchDeleteCatalogObjectsRequest)">
            <summary>
            Deletes a set of [CatalogItem]($m/CatalogItem)s based on the.
            provided list of target IDs and returns a set of successfully deleted IDs in.
            the response. Deletion is a cascading event such that all children of the.
            targeted object are also deleted. For example, deleting a CatalogItem will.
            also delete all of its [CatalogItemVariation]($m/CatalogItemVariation).
            children..
            `BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted.
            IDs can be deleted. The response will only include IDs that were.
            actually deleted..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchDeleteCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.BatchDeleteCatalogObjectsAsync(Square.Models.BatchDeleteCatalogObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a set of [CatalogItem]($m/CatalogItem)s based on the.
            provided list of target IDs and returns a set of successfully deleted IDs in.
            the response. Deletion is a cascading event such that all children of the.
            targeted object are also deleted. For example, deleting a CatalogItem will.
            also delete all of its [CatalogItemVariation]($m/CatalogItemVariation).
            children..
            `BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted.
            IDs can be deleted. The response will only include IDs that were.
            actually deleted..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchDeleteCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.BatchRetrieveCatalogObjects(Square.Models.BatchRetrieveCatalogObjectsRequest)">
            <summary>
            Returns a set of objects based on the provided ID..
            Each [CatalogItem]($m/CatalogItem) returned in the set includes all of its.
            child information including: all of its.
            [CatalogItemVariation]($m/CatalogItemVariation) objects, references to.
            its [CatalogModifierList]($m/CatalogModifierList) objects, and the ids of.
            any [CatalogTax]($m/CatalogTax) objects that apply to it..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchRetrieveCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.BatchRetrieveCatalogObjectsAsync(Square.Models.BatchRetrieveCatalogObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a set of objects based on the provided ID..
            Each [CatalogItem]($m/CatalogItem) returned in the set includes all of its.
            child information including: all of its.
            [CatalogItemVariation]($m/CatalogItemVariation) objects, references to.
            its [CatalogModifierList]($m/CatalogModifierList) objects, and the ids of.
            any [CatalogTax]($m/CatalogTax) objects that apply to it..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchRetrieveCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.BatchUpsertCatalogObjects(Square.Models.BatchUpsertCatalogObjectsRequest)">
            <summary>
            Creates or updates up to 10,000 target objects based on the provided.
            list of objects. The target objects are grouped into batches and each batch is.
            inserted/updated in an all-or-nothing manner. If an object within a batch is.
            malformed in some way, or violates a database constraint, the entire batch.
            containing that item will be disregarded. However, other batches in the same.
            request may still succeed. Each batch may contain up to 1,000 objects, and.
            batches will be processed in order as long as the total object count for the.
            request (items, variations, modifier lists, discounts, and taxes) is no more.
            than 10,000..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchUpsertCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.BatchUpsertCatalogObjectsAsync(Square.Models.BatchUpsertCatalogObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates up to 10,000 target objects based on the provided.
            list of objects. The target objects are grouped into batches and each batch is.
            inserted/updated in an all-or-nothing manner. If an object within a batch is.
            malformed in some way, or violates a database constraint, the entire batch.
            containing that item will be disregarded. However, other batches in the same.
            request may still succeed. Each batch may contain up to 1,000 objects, and.
            batches will be processed in order as long as the total object count for the.
            request (items, variations, modifier lists, discounts, and taxes) is no more.
            than 10,000..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchUpsertCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.CreateCatalogImage(Square.Models.CreateCatalogImageRequest,Square.Http.Client.FileStreamInfo)">
            <summary>
            Uploads an image file to be represented by a [CatalogImage]($m/CatalogImage) object linked to an existing.
            [CatalogObject]($m/CatalogObject) instance. A call to this endpoint can upload an image, link an image to.
            a catalog object, or do both..
            This `CreateCatalogImage` endpoint accepts HTTP multipart/form-data requests with a JSON part and an image file part in.
            JPEG, PJPEG, PNG, or GIF format. The maximum file size is 15MB..
            </summary>
            <param name="request">Optional parameter: Example: .</param>
            <param name="imageFile">Optional parameter: Example: .</param>
            <returns>Returns the Models.CreateCatalogImageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.CreateCatalogImageAsync(Square.Models.CreateCatalogImageRequest,Square.Http.Client.FileStreamInfo,System.Threading.CancellationToken)">
            <summary>
            Uploads an image file to be represented by a [CatalogImage]($m/CatalogImage) object linked to an existing.
            [CatalogObject]($m/CatalogObject) instance. A call to this endpoint can upload an image, link an image to.
            a catalog object, or do both..
            This `CreateCatalogImage` endpoint accepts HTTP multipart/form-data requests with a JSON part and an image file part in.
            JPEG, PJPEG, PNG, or GIF format. The maximum file size is 15MB..
            </summary>
            <param name="request">Optional parameter: Example: .</param>
            <param name="imageFile">Optional parameter: Example: .</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateCatalogImageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.CatalogInfo">
            <summary>
            Retrieves information about the Square Catalog API, such as batch size.
            limits that can be used by the `BatchUpsertCatalogObjects` endpoint..
            </summary>
            <returns>Returns the Models.CatalogInfoResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.CatalogInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves information about the Square Catalog API, such as batch size.
            limits that can be used by the `BatchUpsertCatalogObjects` endpoint..
            </summary>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CatalogInfoResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.ListCatalog(System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Returns a list of [CatalogObject]($m/CatalogObject)s that includes.
            all objects of a set of desired types (for example, all [CatalogItem]($m/CatalogItem).
            and [CatalogTax]($m/CatalogTax) objects) in the catalog. The `types` parameter.
            is specified as a comma-separated list of valid [CatalogObject]($m/CatalogObject) types:.
            `ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`, `IMAGE`..
            __Important:__ ListCatalog does not return deleted catalog items. To retrieve.
            deleted catalog items, use [SearchCatalogObjects]($e/Catalog/SearchCatalogObjects).
            and set the `include_deleted_objects` attribute value to `true`..
            </summary>
            <param name="cursor">Optional parameter: The pagination cursor returned in the previous response. Leave unset for an initial request. The page size is currently set to be 100. See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information..</param>
            <param name="types">Optional parameter: An optional case-insensitive, comma-separated list of object types to retrieve, for example `ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.  The legal values are taken from the CatalogObjectType enum: `ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`, `MODIFIER`, `MODIFIER_LIST`, or `IMAGE`..</param>
            <param name="catalogVersion">Optional parameter: The specific version of the catalog objects to be included in the response.  This allows you to retrieve historical versions of objects. The specified version value is matched against the [CatalogObject]($m/CatalogObject)s' `version` attribute..</param>
            <returns>Returns the Models.ListCatalogResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.ListCatalogAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a list of [CatalogObject]($m/CatalogObject)s that includes.
            all objects of a set of desired types (for example, all [CatalogItem]($m/CatalogItem).
            and [CatalogTax]($m/CatalogTax) objects) in the catalog. The `types` parameter.
            is specified as a comma-separated list of valid [CatalogObject]($m/CatalogObject) types:.
            `ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`, `IMAGE`..
            __Important:__ ListCatalog does not return deleted catalog items. To retrieve.
            deleted catalog items, use [SearchCatalogObjects]($e/Catalog/SearchCatalogObjects).
            and set the `include_deleted_objects` attribute value to `true`..
            </summary>
            <param name="cursor">Optional parameter: The pagination cursor returned in the previous response. Leave unset for an initial request. The page size is currently set to be 100. See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information..</param>
            <param name="types">Optional parameter: An optional case-insensitive, comma-separated list of object types to retrieve, for example `ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.  The legal values are taken from the CatalogObjectType enum: `ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`, `MODIFIER`, `MODIFIER_LIST`, or `IMAGE`..</param>
            <param name="catalogVersion">Optional parameter: The specific version of the catalog objects to be included in the response.  This allows you to retrieve historical versions of objects. The specified version value is matched against the [CatalogObject]($m/CatalogObject)s' `version` attribute..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCatalogResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.UpsertCatalogObject(Square.Models.UpsertCatalogObjectRequest)">
            <summary>
            Creates or updates the target [CatalogObject]($m/CatalogObject)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpsertCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.UpsertCatalogObjectAsync(Square.Models.UpsertCatalogObjectRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the target [CatalogObject]($m/CatalogObject)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpsertCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.DeleteCatalogObject(System.String)">
            <summary>
            Deletes a single [CatalogObject]($m/CatalogObject) based on the.
            provided ID and returns the set of successfully deleted IDs in the response..
            Deletion is a cascading event such that all children of the targeted object.
            are also deleted. For example, deleting a [CatalogItem]($m/CatalogItem).
            will also delete all of its.
            [CatalogItemVariation]($m/CatalogItemVariation) children..
            </summary>
            <param name="objectId">Required parameter: The ID of the catalog object to be deleted. When an object is deleted, other objects in the graph that depend on that object will be deleted as well (for example, deleting a catalog item will delete its catalog item variations)..</param>
            <returns>Returns the Models.DeleteCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.DeleteCatalogObjectAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a single [CatalogObject]($m/CatalogObject) based on the.
            provided ID and returns the set of successfully deleted IDs in the response..
            Deletion is a cascading event such that all children of the targeted object.
            are also deleted. For example, deleting a [CatalogItem]($m/CatalogItem).
            will also delete all of its.
            [CatalogItemVariation]($m/CatalogItemVariation) children..
            </summary>
            <param name="objectId">Required parameter: The ID of the catalog object to be deleted. When an object is deleted, other objects in the graph that depend on that object will be deleted as well (for example, deleting a catalog item will delete its catalog item variations)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.RetrieveCatalogObject(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Returns a single [CatalogItem]($m/CatalogItem) as a.
            [CatalogObject]($m/CatalogObject) based on the provided ID. The returned.
            object includes all of the relevant [CatalogItem]($m/CatalogItem).
            information including: [CatalogItemVariation]($m/CatalogItemVariation).
            children, references to its.
            [CatalogModifierList]($m/CatalogModifierList) objects, and the ids of.
            any [CatalogTax]($m/CatalogTax) objects that apply to it..
            </summary>
            <param name="objectId">Required parameter: The object ID of any type of catalog objects to be retrieved..</param>
            <param name="includeRelatedObjects">Optional parameter: If `true`, the response will include additional objects that are related to the requested object, as follows:  If the `object` field of the response contains a `CatalogItem`, its associated `CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will be returned in the `related_objects` field of the response. If the `object` field of the response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned in the `related_objects` field of the response.  Default value: `false`.</param>
            <param name="catalogVersion">Optional parameter: Requests objects as of a specific version of the catalog. This allows you to retrieve historical versions of objects. The value to retrieve a specific version of an object can be found in the version field of [CatalogObject]($m/CatalogObject)s..</param>
            <returns>Returns the Models.RetrieveCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.RetrieveCatalogObjectAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Returns a single [CatalogItem]($m/CatalogItem) as a.
            [CatalogObject]($m/CatalogObject) based on the provided ID. The returned.
            object includes all of the relevant [CatalogItem]($m/CatalogItem).
            information including: [CatalogItemVariation]($m/CatalogItemVariation).
            children, references to its.
            [CatalogModifierList]($m/CatalogModifierList) objects, and the ids of.
            any [CatalogTax]($m/CatalogTax) objects that apply to it..
            </summary>
            <param name="objectId">Required parameter: The object ID of any type of catalog objects to be retrieved..</param>
            <param name="includeRelatedObjects">Optional parameter: If `true`, the response will include additional objects that are related to the requested object, as follows:  If the `object` field of the response contains a `CatalogItem`, its associated `CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will be returned in the `related_objects` field of the response. If the `object` field of the response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned in the `related_objects` field of the response.  Default value: `false`.</param>
            <param name="catalogVersion">Optional parameter: Requests objects as of a specific version of the catalog. This allows you to retrieve historical versions of objects. The value to retrieve a specific version of an object can be found in the version field of [CatalogObject]($m/CatalogObject)s..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveCatalogObjectResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.SearchCatalogObjects(Square.Models.SearchCatalogObjectsRequest)">
            <summary>
            Searches for [CatalogObject]($m/CatalogObject) of any type by matching supported search attribute values,.
            excluding custom attribute values on items or item variations, against one or more of the specified query expressions..
            This (`SearchCatalogObjects`) endpoint differs from the [SearchCatalogItems]($e/Catalog/SearchCatalogItems).
            endpoint in the following aspects:.
            - `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects..
            - `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not..
            - `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does..
            - The both endpoints have different call conventions, including the query filter formats..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.SearchCatalogObjectsAsync(Square.Models.SearchCatalogObjectsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for [CatalogObject]($m/CatalogObject) of any type by matching supported search attribute values,.
            excluding custom attribute values on items or item variations, against one or more of the specified query expressions..
            This (`SearchCatalogObjects`) endpoint differs from the [SearchCatalogItems]($e/Catalog/SearchCatalogItems).
            endpoint in the following aspects:.
            - `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects..
            - `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not..
            - `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does..
            - The both endpoints have different call conventions, including the query filter formats..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchCatalogObjectsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.SearchCatalogItems(Square.Models.SearchCatalogItemsRequest)">
            <summary>
            Searches for catalog items or item variations by matching supported search attribute values, including.
            custom attribute values, against one or more of the specified query expressions..
            This (`SearchCatalogItems`) endpoint differs from the [SearchCatalogObjects]($e/Catalog/SearchCatalogObjects).
            endpoint in the following aspects:.
            - `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects..
            - `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not..
            - `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does..
            - The both endpoints use different call conventions, including the query filter formats..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchCatalogItemsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.SearchCatalogItemsAsync(Square.Models.SearchCatalogItemsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for catalog items or item variations by matching supported search attribute values, including.
            custom attribute values, against one or more of the specified query expressions..
            This (`SearchCatalogItems`) endpoint differs from the [SearchCatalogObjects]($e/Catalog/SearchCatalogObjects).
            endpoint in the following aspects:.
            - `SearchCatalogItems` can only search for items or item variations, whereas `SearchCatalogObjects` can search for any type of catalog objects..
            - `SearchCatalogItems` supports the custom attribute query filters to return items or item variations that contain custom attribute values, where `SearchCatalogObjects` does not..
            - `SearchCatalogItems` does not support the `include_deleted_objects` filter to search for deleted items or item variations, whereas `SearchCatalogObjects` does..
            - The both endpoints use different call conventions, including the query filter formats..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchCatalogItemsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.UpdateItemModifierLists(Square.Models.UpdateItemModifierListsRequest)">
            <summary>
            Updates the [CatalogModifierList]($m/CatalogModifierList) objects.
            that apply to the targeted [CatalogItem]($m/CatalogItem) without having.
            to perform an upsert on the entire item..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateItemModifierListsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.UpdateItemModifierListsAsync(Square.Models.UpdateItemModifierListsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the [CatalogModifierList]($m/CatalogModifierList) objects.
            that apply to the targeted [CatalogItem]($m/CatalogItem) without having.
            to perform an upsert on the entire item..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateItemModifierListsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.UpdateItemTaxes(Square.Models.UpdateItemTaxesRequest)">
            <summary>
            Updates the [CatalogTax]($m/CatalogTax) objects that apply to the.
            targeted [CatalogItem]($m/CatalogItem) without having to perform an.
            upsert on the entire item..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateItemTaxesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICatalogApi.UpdateItemTaxesAsync(Square.Models.UpdateItemTaxesRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the [CatalogTax]($m/CatalogTax) objects that apply to the.
            targeted [CatalogItem]($m/CatalogItem) without having to perform an.
            upsert on the entire item..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateItemTaxesResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ICheckoutApi">
            <summary>
            ICheckoutApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ICheckoutApi.CreateCheckout(System.String,Square.Models.CreateCheckoutRequest)">
            <summary>
            Links a `checkoutId` to a `checkout_page_url` that customers are.
            directed to in order to provide their payment information using a.
            payment processing workflow hosted on connect.squareup.com..
            </summary>
            <param name="locationId">Required parameter: The ID of the business location to associate the checkout with..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICheckoutApi.CreateCheckoutAsync(System.String,Square.Models.CreateCheckoutRequest,System.Threading.CancellationToken)">
            <summary>
            Links a `checkoutId` to a `checkout_page_url` that customers are.
            directed to in order to provide their payment information using a.
            payment processing workflow hosted on connect.squareup.com..
            </summary>
            <param name="locationId">Required parameter: The ID of the business location to associate the checkout with..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateCheckoutResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ICustomerGroupsApi">
            <summary>
            ICustomerGroupsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ICustomerGroupsApi.ListCustomerGroups(System.String)">
            <summary>
            Retrieves the list of customer groups of a business..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <returns>Returns the Models.ListCustomerGroupsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerGroupsApi.ListCustomerGroupsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of customer groups of a business..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCustomerGroupsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerGroupsApi.CreateCustomerGroup(Square.Models.CreateCustomerGroupRequest)">
            <summary>
            Creates a new customer group for a business..
            The request must include the `name` value of the group..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerGroupsApi.CreateCustomerGroupAsync(Square.Models.CreateCustomerGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new customer group for a business..
            The request must include the `name` value of the group..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerGroupsApi.DeleteCustomerGroup(System.String)">
            <summary>
            Deletes a customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to delete..</param>
            <returns>Returns the Models.DeleteCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerGroupsApi.DeleteCustomerGroupAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to delete..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerGroupsApi.RetrieveCustomerGroup(System.String)">
            <summary>
            Retrieves a specific customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to retrieve..</param>
            <returns>Returns the Models.RetrieveCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerGroupsApi.RetrieveCustomerGroupAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a specific customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerGroupsApi.UpdateCustomerGroup(System.String,Square.Models.UpdateCustomerGroupRequest)">
            <summary>
            Updates a customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerGroupsApi.UpdateCustomerGroupAsync(System.String,Square.Models.UpdateCustomerGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a customer group as identified by the `group_id` value..
            </summary>
            <param name="groupId">Required parameter: The ID of the customer group to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateCustomerGroupResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ICustomersApi">
            <summary>
            ICustomersApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ICustomersApi.ListCustomers(System.String,System.String,System.String)">
            <summary>
            Lists customer profiles associated with a Square account..
            Under normal operating conditions, newly created or updated customer profiles become available.
            for the listing operation in well under 30 seconds. Occasionally, propagation of the new or updated.
            profiles can take closer to one minute or longer, especially during network incidents and outages..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="sortField">Optional parameter: Indicates how customers should be sorted.  Default: `DEFAULT`..</param>
            <param name="sortOrder">Optional parameter: Indicates whether customers should be sorted in ascending (`ASC`) or descending (`DESC`) order.  Default: `ASC`..</param>
            <returns>Returns the Models.ListCustomersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.ListCustomersAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists customer profiles associated with a Square account..
            Under normal operating conditions, newly created or updated customer profiles become available.
            for the listing operation in well under 30 seconds. Occasionally, propagation of the new or updated.
            profiles can take closer to one minute or longer, especially during network incidents and outages..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="sortField">Optional parameter: Indicates how customers should be sorted.  Default: `DEFAULT`..</param>
            <param name="sortOrder">Optional parameter: Indicates whether customers should be sorted in ascending (`ASC`) or descending (`DESC`) order.  Default: `ASC`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCustomersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.CreateCustomer(Square.Models.CreateCustomerRequest)">
            <summary>
            Creates a new customer for a business, which can have associated cards on file..
            You must provide at least one of the following values in your request to this.
            endpoint:.
            - `given_name`.
            - `family_name`.
            - `company_name`.
            - `email_address`.
            - `phone_number`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.CreateCustomerAsync(Square.Models.CreateCustomerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new customer for a business, which can have associated cards on file..
            You must provide at least one of the following values in your request to this.
            endpoint:.
            - `given_name`.
            - `family_name`.
            - `company_name`.
            - `email_address`.
            - `phone_number`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.SearchCustomers(Square.Models.SearchCustomersRequest)">
            <summary>
            Searches the customer profiles associated with a Square account using a supported query filter..
            Calling `SearchCustomers` without any explicit query filter returns all.
            customer profiles ordered alphabetically based on `given_name` and.
            `family_name`..
            Under normal operating conditions, newly created or updated customer profiles become available.
            for the search operation in well under 30 seconds. Occasionally, propagation of the new or updated.
            profiles can take closer to one minute or longer, especially during network incidents and outages..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchCustomersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.SearchCustomersAsync(Square.Models.SearchCustomersRequest,System.Threading.CancellationToken)">
            <summary>
            Searches the customer profiles associated with a Square account using a supported query filter..
            Calling `SearchCustomers` without any explicit query filter returns all.
            customer profiles ordered alphabetically based on `given_name` and.
            `family_name`..
            Under normal operating conditions, newly created or updated customer profiles become available.
            for the search operation in well under 30 seconds. Occasionally, propagation of the new or updated.
            profiles can take closer to one minute or longer, especially during network incidents and outages..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchCustomersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.DeleteCustomer(System.String,System.Nullable{System.Int64})">
            <summary>
            Deletes a customer profile from a business, including any linked cards on file. .
            As a best practice, you should include the `version` field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. The value must be set to the current version of the customer profile. .
            To delete a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to delete..</param>
            <param name="version">Optional parameter: The current version of the customer profile.   As a best practice, you should include this parameter to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control.  For more information, see [Delete a customer profile](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#delete-customer-profile)..</param>
            <returns>Returns the Models.DeleteCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.DeleteCustomerAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Deletes a customer profile from a business, including any linked cards on file. .
            As a best practice, you should include the `version` field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. The value must be set to the current version of the customer profile. .
            To delete a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to delete..</param>
            <param name="version">Optional parameter: The current version of the customer profile.   As a best practice, you should include this parameter to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control.  For more information, see [Delete a customer profile](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#delete-customer-profile)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.RetrieveCustomer(System.String)">
            <summary>
            Returns details for a single customer..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to retrieve..</param>
            <returns>Returns the Models.RetrieveCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.RetrieveCustomerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details for a single customer..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.UpdateCustomer(System.String,Square.Models.UpdateCustomerRequest)">
            <summary>
            Updates a customer profile. To change an attribute, specify the new value. To remove an attribute, specify the value as an empty string or empty object..
            As a best practice, you should include the `version` field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. The value must be set to the current version of the customer profile..
            To update a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile..
            You cannot use this endpoint to change cards on file. To change a card on file, call [DeleteCustomerCard]($e/Customers/DeleteCustomerCard) to delete the existing card and then call [CreateCustomerCard]($e/Customers/CreateCustomerCard) to create a new card..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.UpdateCustomerAsync(System.String,Square.Models.UpdateCustomerRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a customer profile. To change an attribute, specify the new value. To remove an attribute, specify the value as an empty string or empty object..
            As a best practice, you should include the `version` field in the request to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. The value must be set to the current version of the customer profile..
            To update a customer profile that was created by merging existing profiles, you must use the ID of the newly created profile..
            You cannot use this endpoint to change cards on file. To change a card on file, call [DeleteCustomerCard]($e/Customers/DeleteCustomerCard) to delete the existing card and then call [CreateCustomerCard]($e/Customers/CreateCustomerCard) to create a new card..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.CreateCustomerCard(System.String,Square.Models.CreateCustomerCardRequest)">
            <summary>
            Adds a card on file to an existing customer..
            As with charges, calls to `CreateCustomerCard` are idempotent. Multiple.
            calls with the same card nonce return the same card record that was created.
            with the provided nonce during the _first_ call..
            </summary>
            <param name="customerId">Required parameter: The Square ID of the customer profile the card is linked to..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateCustomerCardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.CreateCustomerCardAsync(System.String,Square.Models.CreateCustomerCardRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a card on file to an existing customer..
            As with charges, calls to `CreateCustomerCard` are idempotent. Multiple.
            calls with the same card nonce return the same card record that was created.
            with the provided nonce during the _first_ call..
            </summary>
            <param name="customerId">Required parameter: The Square ID of the customer profile the card is linked to..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateCustomerCardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.DeleteCustomerCard(System.String,System.String)">
            <summary>
            Removes a card on file from a customer..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer that the card on file belongs to..</param>
            <param name="cardId">Required parameter: The ID of the card on file to delete..</param>
            <returns>Returns the Models.DeleteCustomerCardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.DeleteCustomerCardAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a card on file from a customer..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer that the card on file belongs to..</param>
            <param name="cardId">Required parameter: The ID of the card on file to delete..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteCustomerCardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.RemoveGroupFromCustomer(System.String,System.String)">
            <summary>
            Removes a group membership from a customer..
            The customer is identified by the `customer_id` value.
            and the customer group is identified by the `group_id` value..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to remove from the group..</param>
            <param name="groupId">Required parameter: The ID of the customer group to remove the customer from..</param>
            <returns>Returns the Models.RemoveGroupFromCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.RemoveGroupFromCustomerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes a group membership from a customer..
            The customer is identified by the `customer_id` value.
            and the customer group is identified by the `group_id` value..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to remove from the group..</param>
            <param name="groupId">Required parameter: The ID of the customer group to remove the customer from..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RemoveGroupFromCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.AddGroupToCustomer(System.String,System.String)">
            <summary>
            Adds a group membership to a customer..
            The customer is identified by the `customer_id` value.
            and the customer group is identified by the `group_id` value..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to add to a group..</param>
            <param name="groupId">Required parameter: The ID of the customer group to add the customer to..</param>
            <returns>Returns the Models.AddGroupToCustomerResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomersApi.AddGroupToCustomerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a group membership to a customer..
            The customer is identified by the `customer_id` value.
            and the customer group is identified by the `group_id` value..
            </summary>
            <param name="customerId">Required parameter: The ID of the customer to add to a group..</param>
            <param name="groupId">Required parameter: The ID of the customer group to add the customer to..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.AddGroupToCustomerResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ICustomerSegmentsApi">
            <summary>
            ICustomerSegmentsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ICustomerSegmentsApi.ListCustomerSegments(System.String)">
            <summary>
            Retrieves the list of customer segments of a business..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by previous calls to `ListCustomerSegments`. This cursor is used to retrieve the next set of query results.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <returns>Returns the Models.ListCustomerSegmentsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerSegmentsApi.ListCustomerSegmentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of customer segments of a business..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by previous calls to `ListCustomerSegments`. This cursor is used to retrieve the next set of query results.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListCustomerSegmentsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerSegmentsApi.RetrieveCustomerSegment(System.String)">
            <summary>
            Retrieves a specific customer segment as identified by the `segment_id` value..
            </summary>
            <param name="segmentId">Required parameter: The Square-issued ID of the customer segment..</param>
            <returns>Returns the Models.RetrieveCustomerSegmentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ICustomerSegmentsApi.RetrieveCustomerSegmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a specific customer segment as identified by the `segment_id` value..
            </summary>
            <param name="segmentId">Required parameter: The Square-issued ID of the customer segment..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveCustomerSegmentResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IDevicesApi">
            <summary>
            IDevicesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IDevicesApi.ListDeviceCodes(System.String,System.String,System.String,System.String)">
            <summary>
            Lists all DeviceCodes associated with the merchant..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <param name="locationId">Optional parameter: If specified, only returns DeviceCodes of the specified location. Returns DeviceCodes of all locations if empty..</param>
            <param name="productType">Optional parameter: If specified, only returns DeviceCodes targeting the specified product type. Returns DeviceCodes of all product types if empty..</param>
            <param name="status">Optional parameter: If specified, returns DeviceCodes with the specified statuses. Returns DeviceCodes of status `PAIRED` and `UNPAIRED` if empty..</param>
            <returns>Returns the Models.ListDeviceCodesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDevicesApi.ListDeviceCodesAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all DeviceCodes associated with the merchant..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <param name="locationId">Optional parameter: If specified, only returns DeviceCodes of the specified location. Returns DeviceCodes of all locations if empty..</param>
            <param name="productType">Optional parameter: If specified, only returns DeviceCodes targeting the specified product type. Returns DeviceCodes of all product types if empty..</param>
            <param name="status">Optional parameter: If specified, returns DeviceCodes with the specified statuses. Returns DeviceCodes of status `PAIRED` and `UNPAIRED` if empty..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListDeviceCodesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDevicesApi.CreateDeviceCode(Square.Models.CreateDeviceCodeRequest)">
            <summary>
            Creates a DeviceCode that can be used to login to a Square Terminal device to enter the connected.
            terminal mode..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateDeviceCodeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDevicesApi.CreateDeviceCodeAsync(Square.Models.CreateDeviceCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a DeviceCode that can be used to login to a Square Terminal device to enter the connected.
            terminal mode..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateDeviceCodeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDevicesApi.GetDeviceCode(System.String)">
            <summary>
            Retrieves DeviceCode with the associated ID..
            </summary>
            <param name="id">Required parameter: The unique identifier for the device code..</param>
            <returns>Returns the Models.GetDeviceCodeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDevicesApi.GetDeviceCodeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves DeviceCode with the associated ID..
            </summary>
            <param name="id">Required parameter: The unique identifier for the device code..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetDeviceCodeResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IDisputesApi">
            <summary>
            IDisputesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IDisputesApi.ListDisputes(System.String,System.String,System.String)">
            <summary>
            Returns a list of disputes associated with a particular account..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query. For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="states">Optional parameter: The dispute states to filter the result. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`)..</param>
            <param name="locationId">Optional parameter: The ID of the location for which to return a list of disputes. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations..</param>
            <returns>Returns the Models.ListDisputesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.ListDisputesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of disputes associated with a particular account..
            </summary>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query. For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="states">Optional parameter: The dispute states to filter the result. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`)..</param>
            <param name="locationId">Optional parameter: The ID of the location for which to return a list of disputes. If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListDisputesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.RetrieveDispute(System.String)">
            <summary>
            Returns details about a specific dispute..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want more details about..</param>
            <returns>Returns the Models.RetrieveDisputeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.RetrieveDisputeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns details about a specific dispute..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want more details about..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveDisputeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.AcceptDispute(System.String)">
            <summary>
            Accepts the loss on a dispute. Square returns the disputed amount to the cardholder and.
            updates the dispute state to ACCEPTED..
            Square debits the disputed amount from the seller’s Square account. If the Square account.
            does not have sufficient funds, Square debits the associated bank account..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to accept..</param>
            <returns>Returns the Models.AcceptDisputeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.AcceptDisputeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Accepts the loss on a dispute. Square returns the disputed amount to the cardholder and.
            updates the dispute state to ACCEPTED..
            Square debits the disputed amount from the seller’s Square account. If the Square account.
            does not have sufficient funds, Square debits the associated bank account..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to accept..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.AcceptDisputeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.ListDisputeEvidence(System.String)">
            <summary>
            Returns a list of evidence associated with a dispute..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute..</param>
            <returns>Returns the Models.ListDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.ListDisputeEvidenceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of evidence associated with a dispute..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.RemoveDisputeEvidence(System.String,System.String)">
            <summary>
            Removes specified evidence from a dispute..
            Square does not send the bank any evidence that is removed. Also, you cannot remove evidence after.
            submitting it to the bank using [SubmitEvidence]($e/Disputes/SubmitEvidence)..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to remove evidence from..</param>
            <param name="evidenceId">Required parameter: The ID of the evidence you want to remove..</param>
            <returns>Returns the Models.RemoveDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.RemoveDisputeEvidenceAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Removes specified evidence from a dispute..
            Square does not send the bank any evidence that is removed. Also, you cannot remove evidence after.
            submitting it to the bank using [SubmitEvidence]($e/Disputes/SubmitEvidence)..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to remove evidence from..</param>
            <param name="evidenceId">Required parameter: The ID of the evidence you want to remove..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RemoveDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.RetrieveDisputeEvidence(System.String,System.String)">
            <summary>
            Returns the specific evidence metadata associated with a specific dispute..
            You must maintain a copy of the evidence you upload if you want to reference it later. You cannot.
            download the evidence after you upload it..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute that you want to retrieve evidence from..</param>
            <param name="evidenceId">Required parameter: The ID of the evidence to retrieve..</param>
            <returns>Returns the Models.RetrieveDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.RetrieveDisputeEvidenceAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the specific evidence metadata associated with a specific dispute..
            You must maintain a copy of the evidence you upload if you want to reference it later. You cannot.
            download the evidence after you upload it..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute that you want to retrieve evidence from..</param>
            <param name="evidenceId">Required parameter: The ID of the evidence to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveDisputeEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.CreateDisputeEvidenceFile(System.String,Square.Models.CreateDisputeEvidenceFileRequest,Square.Http.Client.FileStreamInfo)">
            <summary>
            Uploads a file to use as evidence in a dispute challenge. The endpoint accepts HTTP.
            multipart/form-data file uploads in HEIC, HEIF, JPEG, PDF, PNG, and TIFF formats..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to upload evidence for..</param>
            <param name="request">Optional parameter: Defines the parameters for a `CreateDisputeEvidenceFile` request..</param>
            <param name="imageFile">Optional parameter: Example: .</param>
            <returns>Returns the Models.CreateDisputeEvidenceFileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.CreateDisputeEvidenceFileAsync(System.String,Square.Models.CreateDisputeEvidenceFileRequest,Square.Http.Client.FileStreamInfo,System.Threading.CancellationToken)">
            <summary>
            Uploads a file to use as evidence in a dispute challenge. The endpoint accepts HTTP.
            multipart/form-data file uploads in HEIC, HEIF, JPEG, PDF, PNG, and TIFF formats..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to upload evidence for..</param>
            <param name="request">Optional parameter: Defines the parameters for a `CreateDisputeEvidenceFile` request..</param>
            <param name="imageFile">Optional parameter: Example: .</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateDisputeEvidenceFileResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.CreateDisputeEvidenceText(System.String,Square.Models.CreateDisputeEvidenceTextRequest)">
            <summary>
            Uploads text to use as evidence for a dispute challenge..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to upload evidence for..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateDisputeEvidenceTextResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.CreateDisputeEvidenceTextAsync(System.String,Square.Models.CreateDisputeEvidenceTextRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads text to use as evidence for a dispute challenge..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute you want to upload evidence for..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateDisputeEvidenceTextResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.SubmitEvidence(System.String)">
            <summary>
            Submits evidence to the cardholder's bank..
            Before submitting evidence, Square compiles all available evidence. This includes evidence uploaded.
            using the [CreateDisputeEvidenceFile]($e/Disputes/CreateDisputeEvidenceFile) and.
            [CreateDisputeEvidenceText]($e/Disputes/CreateDisputeEvidenceText) endpoints and.
            evidence automatically provided by Square, when available..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute that you want to submit evidence for..</param>
            <returns>Returns the Models.SubmitEvidenceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IDisputesApi.SubmitEvidenceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Submits evidence to the cardholder's bank..
            Before submitting evidence, Square compiles all available evidence. This includes evidence uploaded.
            using the [CreateDisputeEvidenceFile]($e/Disputes/CreateDisputeEvidenceFile) and.
            [CreateDisputeEvidenceText]($e/Disputes/CreateDisputeEvidenceText) endpoints and.
            evidence automatically provided by Square, when available..
            </summary>
            <param name="disputeId">Required parameter: The ID of the dispute that you want to submit evidence for..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SubmitEvidenceResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IEmployeesApi">
            <summary>
            IEmployeesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IEmployeesApi.ListEmployees(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            ListEmployees.
            </summary>
            <param name="locationId">Optional parameter: Example: .</param>
            <param name="status">Optional parameter: Specifies the EmployeeStatus to filter the employee by..</param>
            <param name="limit">Optional parameter: The number of employees to be returned on each page..</param>
            <param name="cursor">Optional parameter: The token required to retrieve the specified page of results..</param>
            <returns>Returns the Models.ListEmployeesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IEmployeesApi.ListEmployeesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            ListEmployees.
            </summary>
            <param name="locationId">Optional parameter: Example: .</param>
            <param name="status">Optional parameter: Specifies the EmployeeStatus to filter the employee by..</param>
            <param name="limit">Optional parameter: The number of employees to be returned on each page..</param>
            <param name="cursor">Optional parameter: The token required to retrieve the specified page of results..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListEmployeesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IEmployeesApi.RetrieveEmployee(System.String)">
            <summary>
            RetrieveEmployee.
            </summary>
            <param name="id">Required parameter: UUID for the employee that was requested..</param>
            <returns>Returns the Models.RetrieveEmployeeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IEmployeesApi.RetrieveEmployeeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            RetrieveEmployee.
            </summary>
            <param name="id">Required parameter: UUID for the employee that was requested..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveEmployeeResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IInventoryApi">
            <summary>
            IInventoryApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IInventoryApi.RetrieveInventoryAdjustment(System.String)">
            <summary>
            Returns the [InventoryAdjustment]($m/InventoryAdjustment) object.
            with the provided `adjustment_id`..
            </summary>
            <param name="adjustmentId">Required parameter: ID of the [InventoryAdjustment]($m/InventoryAdjustment) to retrieve..</param>
            <returns>Returns the Models.RetrieveInventoryAdjustmentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.RetrieveInventoryAdjustmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the [InventoryAdjustment]($m/InventoryAdjustment) object.
            with the provided `adjustment_id`..
            </summary>
            <param name="adjustmentId">Required parameter: ID of the [InventoryAdjustment]($m/InventoryAdjustment) to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveInventoryAdjustmentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.BatchChangeInventory(Square.Models.BatchChangeInventoryRequest)">
            <summary>
            Applies adjustments and counts to the provided item quantities..
            On success: returns the current calculated counts for all objects.
            referenced in the request..
            On failure: returns a list of related errors..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchChangeInventoryResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.BatchChangeInventoryAsync(Square.Models.BatchChangeInventoryRequest,System.Threading.CancellationToken)">
            <summary>
            Applies adjustments and counts to the provided item quantities..
            On success: returns the current calculated counts for all objects.
            referenced in the request..
            On failure: returns a list of related errors..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchChangeInventoryResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.BatchRetrieveInventoryChanges(Square.Models.BatchRetrieveInventoryChangesRequest)">
            <summary>
            Returns historical physical counts and adjustments based on the.
            provided filter criteria..
            Results are paginated and sorted in ascending order according their.
            `occurred_at` timestamp (oldest first)..
            BatchRetrieveInventoryChanges is a catch-all query endpoint for queries.
            that cannot be handled by other, simpler endpoints..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchRetrieveInventoryChangesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.BatchRetrieveInventoryChangesAsync(Square.Models.BatchRetrieveInventoryChangesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns historical physical counts and adjustments based on the.
            provided filter criteria..
            Results are paginated and sorted in ascending order according their.
            `occurred_at` timestamp (oldest first)..
            BatchRetrieveInventoryChanges is a catch-all query endpoint for queries.
            that cannot be handled by other, simpler endpoints..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchRetrieveInventoryChangesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.BatchRetrieveInventoryCounts(Square.Models.BatchRetrieveInventoryCountsRequest)">
            <summary>
            Returns current counts for the provided.
            [CatalogObject]($m/CatalogObject)s at the requested.
            [Location]($m/Location)s..
            Results are paginated and sorted in descending order according to their.
            `calculated_at` timestamp (newest first)..
            When `updated_after` is specified, only counts that have changed since that.
            time (based on the server timestamp for the most recent change) are.
            returned. This allows clients to perform a "sync" operation, for example.
            in response to receiving a Webhook notification..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchRetrieveInventoryCountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.BatchRetrieveInventoryCountsAsync(Square.Models.BatchRetrieveInventoryCountsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns current counts for the provided.
            [CatalogObject]($m/CatalogObject)s at the requested.
            [Location]($m/Location)s..
            Results are paginated and sorted in descending order according to their.
            `calculated_at` timestamp (newest first)..
            When `updated_after` is specified, only counts that have changed since that.
            time (based on the server timestamp for the most recent change) are.
            returned. This allows clients to perform a "sync" operation, for example.
            in response to receiving a Webhook notification..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchRetrieveInventoryCountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.RetrieveInventoryPhysicalCount(System.String)">
            <summary>
            Returns the [InventoryPhysicalCount]($m/InventoryPhysicalCount).
            object with the provided `physical_count_id`..
            </summary>
            <param name="physicalCountId">Required parameter: ID of the [InventoryPhysicalCount]($m/InventoryPhysicalCount) to retrieve..</param>
            <returns>Returns the Models.RetrieveInventoryPhysicalCountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.RetrieveInventoryPhysicalCountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the [InventoryPhysicalCount]($m/InventoryPhysicalCount).
            object with the provided `physical_count_id`..
            </summary>
            <param name="physicalCountId">Required parameter: ID of the [InventoryPhysicalCount]($m/InventoryPhysicalCount) to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveInventoryPhysicalCountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.RetrieveInventoryCount(System.String,System.String,System.String)">
            <summary>
            Retrieves the current calculated stock count for a given.
            [CatalogObject]($m/CatalogObject) at a given set of.
            [Location]($m/Location)s. Responses are paginated and unsorted..
            For more sophisticated queries, use a batch endpoint..
            </summary>
            <param name="catalogObjectId">Required parameter: ID of the [CatalogObject]($m/CatalogObject) to retrieve..</param>
            <param name="locationIds">Optional parameter: The [Location]($m/Location) IDs to look up as a comma-separated list. An empty list queries all locations..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <returns>Returns the Models.RetrieveInventoryCountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.RetrieveInventoryCountAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the current calculated stock count for a given.
            [CatalogObject]($m/CatalogObject) at a given set of.
            [Location]($m/Location)s. Responses are paginated and unsorted..
            For more sophisticated queries, use a batch endpoint..
            </summary>
            <param name="catalogObjectId">Required parameter: ID of the [CatalogObject]($m/CatalogObject) to retrieve..</param>
            <param name="locationIds">Optional parameter: The [Location]($m/Location) IDs to look up as a comma-separated list. An empty list queries all locations..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveInventoryCountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.RetrieveInventoryChanges(System.String,System.String,System.String)">
            <summary>
            Returns a set of physical counts and inventory adjustments for the.
            provided [CatalogObject]($m/CatalogObject) at the requested.
            [Location]($m/Location)s..
            Results are paginated and sorted in descending order according to their.
            `occurred_at` timestamp (newest first)..
            There are no limits on how far back the caller can page. This endpoint can be .
            used to display recent changes for a specific item. For more.
            sophisticated queries, use a batch endpoint..
            </summary>
            <param name="catalogObjectId">Required parameter: ID of the [CatalogObject]($m/CatalogObject) to retrieve..</param>
            <param name="locationIds">Optional parameter: The [Location]($m/Location) IDs to look up as a comma-separated list. An empty list queries all locations..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <returns>Returns the Models.RetrieveInventoryChangesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInventoryApi.RetrieveInventoryChangesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a set of physical counts and inventory adjustments for the.
            provided [CatalogObject]($m/CatalogObject) at the requested.
            [Location]($m/Location)s..
            Results are paginated and sorted in descending order according to their.
            `occurred_at` timestamp (newest first)..
            There are no limits on how far back the caller can page. This endpoint can be .
            used to display recent changes for a specific item. For more.
            sophisticated queries, use a batch endpoint..
            </summary>
            <param name="catalogObjectId">Required parameter: ID of the [CatalogObject]($m/CatalogObject) to retrieve..</param>
            <param name="locationIds">Optional parameter: The [Location]($m/Location) IDs to look up as a comma-separated list. An empty list queries all locations..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveInventoryChangesResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IInvoicesApi">
            <summary>
            IInvoicesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.ListInvoices(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Returns a list of invoices for a given location. The response .
            is paginated. If truncated, the response includes a `cursor` that you    .
            use in a subsequent request to retrieve the next set of invoices..
            </summary>
            <param name="locationId">Required parameter: The ID of the location for which to list invoices..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint.  Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="limit">Optional parameter: The maximum number of invoices to return (200 is the maximum `limit`).  If not provided, the server uses a default limit of 100 invoices..</param>
            <returns>Returns the Models.ListInvoicesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.ListInvoicesAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Returns a list of invoices for a given location. The response .
            is paginated. If truncated, the response includes a `cursor` that you    .
            use in a subsequent request to retrieve the next set of invoices..
            </summary>
            <param name="locationId">Required parameter: The ID of the location for which to list invoices..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint.  Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="limit">Optional parameter: The maximum number of invoices to return (200 is the maximum `limit`).  If not provided, the server uses a default limit of 100 invoices..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListInvoicesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.CreateInvoice(Square.Models.CreateInvoiceRequest)">
            <summary>
            Creates a draft [invoice]($m/Invoice) .
            for an order created using the Orders API..
            A draft invoice remains in your account and no action is taken. .
            You must publish the invoice before Square can process it (send it to the customer's email address or charge the customer’s card on file)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.CreateInvoiceAsync(Square.Models.CreateInvoiceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a draft [invoice]($m/Invoice) .
            for an order created using the Orders API..
            A draft invoice remains in your account and no action is taken. .
            You must publish the invoice before Square can process it (send it to the customer's email address or charge the customer’s card on file)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.SearchInvoices(Square.Models.SearchInvoicesRequest)">
            <summary>
            Searches for invoices from a location specified in .
            the filter. You can optionally specify customers in the filter for whom to .
            retrieve invoices. In the current implementation, you can only specify one location and .
            optionally one customer..
            The response is paginated. If truncated, the response includes a `cursor` .
            that you use in a subsequent request to retrieve the next set of invoices..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchInvoicesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.SearchInvoicesAsync(Square.Models.SearchInvoicesRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for invoices from a location specified in .
            the filter. You can optionally specify customers in the filter for whom to .
            retrieve invoices. In the current implementation, you can only specify one location and .
            optionally one customer..
            The response is paginated. If truncated, the response includes a `cursor` .
            that you use in a subsequent request to retrieve the next set of invoices..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchInvoicesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.DeleteInvoice(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the specified invoice. When an invoice is deleted, the .
            associated order status changes to CANCELED. You can only delete a draft .
            invoice (you cannot delete a published invoice, including one that is scheduled for processing)..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to delete..</param>
            <param name="version">Optional parameter: The version of the [invoice]($m/Invoice) to delete. If you do not know the version, you can call [GetInvoice]($e/Invoices/GetInvoice) or  [ListInvoices]($e/Invoices/ListInvoices)..</param>
            <returns>Returns the Models.DeleteInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.DeleteInvoiceAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified invoice. When an invoice is deleted, the .
            associated order status changes to CANCELED. You can only delete a draft .
            invoice (you cannot delete a published invoice, including one that is scheduled for processing)..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to delete..</param>
            <param name="version">Optional parameter: The version of the [invoice]($m/Invoice) to delete. If you do not know the version, you can call [GetInvoice]($e/Invoices/GetInvoice) or  [ListInvoices]($e/Invoices/ListInvoices)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.GetInvoice(System.String)">
            <summary>
            Retrieves an invoice by invoice ID..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to retrieve..</param>
            <returns>Returns the Models.GetInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.GetInvoiceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an invoice by invoice ID..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.UpdateInvoice(System.String,Square.Models.UpdateInvoiceRequest)">
            <summary>
            Updates an invoice by modifying fields, clearing fields, or both. For most updates, you can use a sparse .
            `Invoice` object to add fields or change values and use the `fields_to_clear` field to specify fields to clear. .
            However, some restrictions apply. For example, you cannot change the `order_id` or `location_id` field and you .
            must provide the complete `custom_fields` list to update a custom field. Published invoices have additional restrictions..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.UpdateInvoiceAsync(System.String,Square.Models.UpdateInvoiceRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an invoice by modifying fields, clearing fields, or both. For most updates, you can use a sparse .
            `Invoice` object to add fields or change values and use the `fields_to_clear` field to specify fields to clear. .
            However, some restrictions apply. For example, you cannot change the `order_id` or `location_id` field and you .
            must provide the complete `custom_fields` list to update a custom field. Published invoices have additional restrictions..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.CancelInvoice(System.String,Square.Models.CancelInvoiceRequest)">
            <summary>
            Cancels an invoice. The seller cannot collect payments for .
            the canceled invoice..
            You cannot cancel an invoice in the `DRAFT` state or in a terminal state: `PAID`, `REFUNDED`, `CANCELED`, or `FAILED`..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the [invoice]($m/Invoice) to cancel..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CancelInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.CancelInvoiceAsync(System.String,Square.Models.CancelInvoiceRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels an invoice. The seller cannot collect payments for .
            the canceled invoice..
            You cannot cancel an invoice in the `DRAFT` state or in a terminal state: `PAID`, `REFUNDED`, `CANCELED`, or `FAILED`..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the [invoice]($m/Invoice) to cancel..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.PublishInvoice(System.String,Square.Models.PublishInvoiceRequest)">
            <summary>
            Publishes the specified draft invoice. .
            After an invoice is published, Square .
            follows up based on the invoice configuration. For example, Square .
            sends the invoice to the customer's email address, charges the customer's card on file, or does .
            nothing. Square also makes the invoice available on a Square-hosted invoice page. .
            The invoice `status` also changes from `DRAFT` to a status .
            based on the invoice configuration. For example, the status changes to `UNPAID` if .
            Square emails the invoice or `PARTIALLY_PAID` if Square charge a card on file for a portion of the .
            invoice amount..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to publish..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.PublishInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IInvoicesApi.PublishInvoiceAsync(System.String,Square.Models.PublishInvoiceRequest,System.Threading.CancellationToken)">
            <summary>
            Publishes the specified draft invoice. .
            After an invoice is published, Square .
            follows up based on the invoice configuration. For example, Square .
            sends the invoice to the customer's email address, charges the customer's card on file, or does .
            nothing. Square also makes the invoice available on a Square-hosted invoice page. .
            The invoice `status` also changes from `DRAFT` to a status .
            based on the invoice configuration. For example, the status changes to `UNPAID` if .
            Square emails the invoice or `PARTIALLY_PAID` if Square charge a card on file for a portion of the .
            invoice amount..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to publish..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.PublishInvoiceResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ILaborApi">
            <summary>
            ILaborApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ILaborApi.ListBreakTypes(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a paginated list of `BreakType` instances for a business..
            </summary>
            <param name="locationId">Optional parameter: Filter Break Types returned to only those that are associated with the specified location..</param>
            <param name="limit">Optional parameter: Maximum number of Break Types to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Break Type results to fetch..</param>
            <returns>Returns the Models.ListBreakTypesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.ListBreakTypesAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of `BreakType` instances for a business..
            </summary>
            <param name="locationId">Optional parameter: Filter Break Types returned to only those that are associated with the specified location..</param>
            <param name="limit">Optional parameter: Maximum number of Break Types to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Break Type results to fetch..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListBreakTypesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.CreateBreakType(Square.Models.CreateBreakTypeRequest)">
            <summary>
            Creates a new `BreakType`..
            A `BreakType` is a template for creating `Break` objects..
            You must provide the following values in your request to this.
            endpoint:.
            - `location_id`.
            - `break_name`.
            - `expected_duration`.
            - `is_paid`.
            You can only have 3 `BreakType` instances per location. If you attempt to add a 4th.
            `BreakType` for a location, an `INVALID_REQUEST_ERROR` "Exceeded limit of 3 breaks per location.".
            is returned..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.CreateBreakTypeAsync(Square.Models.CreateBreakTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new `BreakType`..
            A `BreakType` is a template for creating `Break` objects..
            You must provide the following values in your request to this.
            endpoint:.
            - `location_id`.
            - `break_name`.
            - `expected_duration`.
            - `is_paid`.
            You can only have 3 `BreakType` instances per location. If you attempt to add a 4th.
            `BreakType` for a location, an `INVALID_REQUEST_ERROR` "Exceeded limit of 3 breaks per location.".
            is returned..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.DeleteBreakType(System.String)">
            <summary>
            Deletes an existing `BreakType`..
            A `BreakType` can be deleted even if it is referenced from a `Shift`..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being deleted..</param>
            <returns>Returns the Models.DeleteBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.DeleteBreakTypeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing `BreakType`..
            A `BreakType` can be deleted even if it is referenced from a `Shift`..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being deleted..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.GetBreakType(System.String)">
            <summary>
            Returns a single `BreakType` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being retrieved..</param>
            <returns>Returns the Models.GetBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.GetBreakTypeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a single `BreakType` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being retrieved..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.UpdateBreakType(System.String,Square.Models.UpdateBreakTypeRequest)">
            <summary>
            Updates an existing `BreakType`..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.UpdateBreakTypeAsync(System.String,Square.Models.UpdateBreakTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing `BreakType`..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.ListEmployeeWages(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a paginated list of `EmployeeWage` instances for a business..
            </summary>
            <param name="employeeId">Optional parameter: Filter wages returned to only those that are associated with the specified employee..</param>
            <param name="limit">Optional parameter: Maximum number of Employee Wages to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Employee Wage results to fetch..</param>
            <returns>Returns the Models.ListEmployeeWagesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.ListEmployeeWagesAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of `EmployeeWage` instances for a business..
            </summary>
            <param name="employeeId">Optional parameter: Filter wages returned to only those that are associated with the specified employee..</param>
            <param name="limit">Optional parameter: Maximum number of Employee Wages to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Employee Wage results to fetch..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListEmployeeWagesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.GetEmployeeWage(System.String)">
            <summary>
            Returns a single `EmployeeWage` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `EmployeeWage` being retrieved..</param>
            <returns>Returns the Models.GetEmployeeWageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.GetEmployeeWageAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a single `EmployeeWage` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `EmployeeWage` being retrieved..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetEmployeeWageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.CreateShift(Square.Models.CreateShiftRequest)">
            <summary>
            Creates a new `Shift`..
            A `Shift` represents a complete work day for a single employee..
            You must provide the following values in your request to this.
            endpoint:.
            - `location_id`.
            - `employee_id`.
            - `start_at`.
            An attempt to create a new `Shift` can result in a `BAD_REQUEST` error when:.
            - The `status` of the new `Shift` is `OPEN` and the employee has another.
            shift with an `OPEN` status..
            - The `start_at` date is in the future.
            - the `start_at` or `end_at` overlaps another shift for the same employee.
            - If `Break`s are set in the request, a break `start_at`.
            must not be before the `Shift.start_at`. A break `end_at` must not be after.
            the `Shift.end_at`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.CreateShiftAsync(Square.Models.CreateShiftRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new `Shift`..
            A `Shift` represents a complete work day for a single employee..
            You must provide the following values in your request to this.
            endpoint:.
            - `location_id`.
            - `employee_id`.
            - `start_at`.
            An attempt to create a new `Shift` can result in a `BAD_REQUEST` error when:.
            - The `status` of the new `Shift` is `OPEN` and the employee has another.
            shift with an `OPEN` status..
            - The `start_at` date is in the future.
            - the `start_at` or `end_at` overlaps another shift for the same employee.
            - If `Break`s are set in the request, a break `start_at`.
            must not be before the `Shift.start_at`. A break `end_at` must not be after.
            the `Shift.end_at`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.SearchShifts(Square.Models.SearchShiftsRequest)">
            <summary>
            Returns a paginated list of `Shift` records for a business..
            The list to be returned can be filtered by:.
            - Location IDs **and**.
            - employee IDs **and**.
            - shift status (`OPEN`, `CLOSED`) **and**.
            - shift start **and**.
            - shift end **and**.
            - work day details.
            The list can be sorted by:.
            - `start_at`.
            - `end_at`.
            - `created_at`.
            - `updated_at`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchShiftsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.SearchShiftsAsync(Square.Models.SearchShiftsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of `Shift` records for a business..
            The list to be returned can be filtered by:.
            - Location IDs **and**.
            - employee IDs **and**.
            - shift status (`OPEN`, `CLOSED`) **and**.
            - shift start **and**.
            - shift end **and**.
            - work day details.
            The list can be sorted by:.
            - `start_at`.
            - `end_at`.
            - `created_at`.
            - `updated_at`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchShiftsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.DeleteShift(System.String)">
            <summary>
            Deletes a `Shift`..
            </summary>
            <param name="id">Required parameter: UUID for the `Shift` being deleted..</param>
            <returns>Returns the Models.DeleteShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.DeleteShiftAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a `Shift`..
            </summary>
            <param name="id">Required parameter: UUID for the `Shift` being deleted..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.GetShift(System.String)">
            <summary>
            Returns a single `Shift` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `Shift` being retrieved..</param>
            <returns>Returns the Models.GetShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.GetShiftAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a single `Shift` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `Shift` being retrieved..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.UpdateShift(System.String,Square.Models.UpdateShiftRequest)">
            <summary>
            Updates an existing `Shift`..
            When adding a `Break` to a `Shift`, any earlier `Breaks` in the `Shift` have.
            the `end_at` property set to a valid RFC-3339 datetime string..
            When closing a `Shift`, all `Break` instances in the shift must be complete with `end_at`.
            set on each `Break`..
            </summary>
            <param name="id">Required parameter: ID of the object being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.UpdateShiftAsync(System.String,Square.Models.UpdateShiftRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing `Shift`..
            When adding a `Break` to a `Shift`, any earlier `Breaks` in the `Shift` have.
            the `end_at` property set to a valid RFC-3339 datetime string..
            When closing a `Shift`, all `Break` instances in the shift must be complete with `end_at`.
            set on each `Break`..
            </summary>
            <param name="id">Required parameter: ID of the object being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.ListTeamMemberWages(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a paginated list of `TeamMemberWage` instances for a business..
            </summary>
            <param name="teamMemberId">Optional parameter: Filter wages returned to only those that are associated with the specified team member..</param>
            <param name="limit">Optional parameter: Maximum number of Team Member Wages to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Employee Wage results to fetch..</param>
            <returns>Returns the Models.ListTeamMemberWagesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.ListTeamMemberWagesAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of `TeamMemberWage` instances for a business..
            </summary>
            <param name="teamMemberId">Optional parameter: Filter wages returned to only those that are associated with the specified team member..</param>
            <param name="limit">Optional parameter: Maximum number of Team Member Wages to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Employee Wage results to fetch..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListTeamMemberWagesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.GetTeamMemberWage(System.String)">
            <summary>
            Returns a single `TeamMemberWage` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `TeamMemberWage` being retrieved..</param>
            <returns>Returns the Models.GetTeamMemberWageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.GetTeamMemberWageAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a single `TeamMemberWage` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `TeamMemberWage` being retrieved..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetTeamMemberWageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.ListWorkweekConfigs(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a list of `WorkweekConfig` instances for a business..
            </summary>
            <param name="limit">Optional parameter: Maximum number of Workweek Configs to return per page..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Workweek Config results to fetch..</param>
            <returns>Returns the Models.ListWorkweekConfigsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.ListWorkweekConfigsAsync(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of `WorkweekConfig` instances for a business..
            </summary>
            <param name="limit">Optional parameter: Maximum number of Workweek Configs to return per page..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Workweek Config results to fetch..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListWorkweekConfigsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.UpdateWorkweekConfig(System.String,Square.Models.UpdateWorkweekConfigRequest)">
            <summary>
            Updates a `WorkweekConfig`..
            </summary>
            <param name="id">Required parameter: UUID for the `WorkweekConfig` object being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateWorkweekConfigResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILaborApi.UpdateWorkweekConfigAsync(System.String,Square.Models.UpdateWorkweekConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a `WorkweekConfig`..
            </summary>
            <param name="id">Required parameter: UUID for the `WorkweekConfig` object being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateWorkweekConfigResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ILocationsApi">
            <summary>
            ILocationsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ILocationsApi.ListLocations">
            <summary>
            Provides information of all locations of a business..
            Many Square API endpoints require a `location_id` parameter..
            The `id` field of the [`Location`]($m/Location) objects returned by this.
            endpoint correspond to that `location_id` parameter..
            </summary>
            <returns>Returns the Models.ListLocationsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILocationsApi.ListLocationsAsync(System.Threading.CancellationToken)">
            <summary>
            Provides information of all locations of a business..
            Many Square API endpoints require a `location_id` parameter..
            The `id` field of the [`Location`]($m/Location) objects returned by this.
            endpoint correspond to that `location_id` parameter..
            </summary>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListLocationsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILocationsApi.CreateLocation(Square.Models.CreateLocationRequest)">
            <summary>
            Creates a location..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateLocationResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILocationsApi.CreateLocationAsync(Square.Models.CreateLocationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a location..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateLocationResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILocationsApi.RetrieveLocation(System.String)">
            <summary>
            Retrieves details of a location. You can specify "main" .
            as the location ID to retrieve details of the .
            main location..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to retrieve. If you specify the string "main", then the endpoint returns the main location..</param>
            <returns>Returns the Models.RetrieveLocationResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILocationsApi.RetrieveLocationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves details of a location. You can specify "main" .
            as the location ID to retrieve details of the .
            main location..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to retrieve. If you specify the string "main", then the endpoint returns the main location..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveLocationResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILocationsApi.UpdateLocation(System.String,Square.Models.UpdateLocationRequest)">
            <summary>
            Updates a location..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateLocationResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILocationsApi.UpdateLocationAsync(System.String,Square.Models.UpdateLocationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a location..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateLocationResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ILoyaltyApi">
            <summary>
            ILoyaltyApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.CreateLoyaltyAccount(Square.Models.CreateLoyaltyAccountRequest)">
            <summary>
            Creates a loyalty account. To create a loyalty account, you must provide the `program_id` and a `mapping` with the `phone_number` of the buyer..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateLoyaltyAccountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.CreateLoyaltyAccountAsync(Square.Models.CreateLoyaltyAccountRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a loyalty account. To create a loyalty account, you must provide the `program_id` and a `mapping` with the `phone_number` of the buyer..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateLoyaltyAccountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.SearchLoyaltyAccounts(Square.Models.SearchLoyaltyAccountsRequest)">
            <summary>
            Searches for loyalty accounts in a loyalty program.  .
            You can search for a loyalty account using the phone number or customer ID associated with the account. To return all loyalty accounts, specify an empty `query` object or omit it entirely.  .
            Search results are sorted by `created_at` in ascending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchLoyaltyAccountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.SearchLoyaltyAccountsAsync(Square.Models.SearchLoyaltyAccountsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for loyalty accounts in a loyalty program.  .
            You can search for a loyalty account using the phone number or customer ID associated with the account. To return all loyalty accounts, specify an empty `query` object or omit it entirely.  .
            Search results are sorted by `created_at` in ascending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchLoyaltyAccountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.RetrieveLoyaltyAccount(System.String)">
            <summary>
            Retrieves a loyalty account..
            </summary>
            <param name="accountId">Required parameter: The ID of the [loyalty account]($m/LoyaltyAccount) to retrieve..</param>
            <returns>Returns the Models.RetrieveLoyaltyAccountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.RetrieveLoyaltyAccountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a loyalty account..
            </summary>
            <param name="accountId">Required parameter: The ID of the [loyalty account]($m/LoyaltyAccount) to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveLoyaltyAccountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.AccumulateLoyaltyPoints(System.String,Square.Models.AccumulateLoyaltyPointsRequest)">
            <summary>
            Adds points to a loyalty account..
            - If you are using the Orders API to manage orders, you only provide the `order_id`. .
            The endpoint reads the order to compute points to add to the buyer's account..
            - If you are not using the Orders API to manage orders, .
            you first perform a client-side computation to compute the points.  .
            For spend-based and visit-based programs, you can call .
            [CalculateLoyaltyPoints]($e/Loyalty/CalculateLoyaltyPoints) to compute the points. For more information, .
            see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview). .
            You then provide the points in a request to this endpoint..
            </summary>
            <param name="accountId">Required parameter: The [loyalty account]($m/LoyaltyAccount) ID to which to add the points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.AccumulateLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.AccumulateLoyaltyPointsAsync(System.String,Square.Models.AccumulateLoyaltyPointsRequest,System.Threading.CancellationToken)">
            <summary>
            Adds points to a loyalty account..
            - If you are using the Orders API to manage orders, you only provide the `order_id`. .
            The endpoint reads the order to compute points to add to the buyer's account..
            - If you are not using the Orders API to manage orders, .
            you first perform a client-side computation to compute the points.  .
            For spend-based and visit-based programs, you can call .
            [CalculateLoyaltyPoints]($e/Loyalty/CalculateLoyaltyPoints) to compute the points. For more information, .
            see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview). .
            You then provide the points in a request to this endpoint..
            </summary>
            <param name="accountId">Required parameter: The [loyalty account]($m/LoyaltyAccount) ID to which to add the points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.AccumulateLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.AdjustLoyaltyPoints(System.String,Square.Models.AdjustLoyaltyPointsRequest)">
            <summary>
            Adds points to or subtracts points from a buyer's account. .
            Use this endpoint only when you need to manually adjust points. Otherwise, in your application flow, you call .
            [AccumulateLoyaltyPoints]($e/Loyalty/AccumulateLoyaltyPoints) .
            to add points when a buyer pays for the purchase..
            </summary>
            <param name="accountId">Required parameter: The ID of the [loyalty account]($m/LoyaltyAccount) in which to adjust the points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.AdjustLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.AdjustLoyaltyPointsAsync(System.String,Square.Models.AdjustLoyaltyPointsRequest,System.Threading.CancellationToken)">
            <summary>
            Adds points to or subtracts points from a buyer's account. .
            Use this endpoint only when you need to manually adjust points. Otherwise, in your application flow, you call .
            [AccumulateLoyaltyPoints]($e/Loyalty/AccumulateLoyaltyPoints) .
            to add points when a buyer pays for the purchase..
            </summary>
            <param name="accountId">Required parameter: The ID of the [loyalty account]($m/LoyaltyAccount) in which to adjust the points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.AdjustLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.SearchLoyaltyEvents(Square.Models.SearchLoyaltyEventsRequest)">
            <summary>
            Searches for loyalty events..
            A Square loyalty program maintains a ledger of events that occur during the lifetime of a .
            buyer's loyalty account. Each change in the point balance .
            (for example, points earned, points redeemed, and points expired) is .
            recorded in the ledger. Using this endpoint, you can search the ledger for events..
            Search results are sorted by `created_at` in descending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchLoyaltyEventsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.SearchLoyaltyEventsAsync(Square.Models.SearchLoyaltyEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for loyalty events..
            A Square loyalty program maintains a ledger of events that occur during the lifetime of a .
            buyer's loyalty account. Each change in the point balance .
            (for example, points earned, points redeemed, and points expired) is .
            recorded in the ledger. Using this endpoint, you can search the ledger for events..
            Search results are sorted by `created_at` in descending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchLoyaltyEventsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.ListLoyaltyPrograms">
            <summary>
            Returns a list of loyalty programs in the seller's account..
            Loyalty programs define how buyers can earn points and redeem points for rewards. Square sellers can have only one loyalty program, which is created and managed from the Seller Dashboard. For more information, see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview)..
            Replaced with [RetrieveLoyaltyProgram]($e/Loyalty/RetrieveLoyaltyProgram) when used with the keyword `main`..
            </summary>
            <returns>Returns the Models.ListLoyaltyProgramsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.ListLoyaltyProgramsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of loyalty programs in the seller's account..
            Loyalty programs define how buyers can earn points and redeem points for rewards. Square sellers can have only one loyalty program, which is created and managed from the Seller Dashboard. For more information, see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview)..
            Replaced with [RetrieveLoyaltyProgram]($e/Loyalty/RetrieveLoyaltyProgram) when used with the keyword `main`..
            </summary>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListLoyaltyProgramsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.RetrieveLoyaltyProgram(System.String)">
            <summary>
            Retrieves the loyalty program in a seller's account, specified by the program ID or the keyword `main`. .
            Loyalty programs define how buyers can earn points and redeem points for rewards. Square sellers can have only one loyalty program, which is created and managed from the Seller Dashboard. For more information, see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview)..
            </summary>
            <param name="programId">Required parameter: The ID of the loyalty program or the keyword `main`. Either value can be used to retrieve the single loyalty program that belongs to the seller..</param>
            <returns>Returns the Models.RetrieveLoyaltyProgramResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.RetrieveLoyaltyProgramAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the loyalty program in a seller's account, specified by the program ID or the keyword `main`. .
            Loyalty programs define how buyers can earn points and redeem points for rewards. Square sellers can have only one loyalty program, which is created and managed from the Seller Dashboard. For more information, see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview)..
            </summary>
            <param name="programId">Required parameter: The ID of the loyalty program or the keyword `main`. Either value can be used to retrieve the single loyalty program that belongs to the seller..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveLoyaltyProgramResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.CalculateLoyaltyPoints(System.String,Square.Models.CalculateLoyaltyPointsRequest)">
            <summary>
            Calculates the points a purchase earns..
            - If you are using the Orders API to manage orders, you provide `order_id` in the request. The .
            endpoint calculates the points by reading the order..
            - If you are not using the Orders API to manage orders, you provide the purchase amount in .
            the request for the endpoint to calculate the points..
            An application might call this endpoint to show the points that a buyer can earn with the .
            specific purchase..
            </summary>
            <param name="programId">Required parameter: The [loyalty program]($m/LoyaltyProgram) ID, which defines the rules for accruing points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CalculateLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.CalculateLoyaltyPointsAsync(System.String,Square.Models.CalculateLoyaltyPointsRequest,System.Threading.CancellationToken)">
            <summary>
            Calculates the points a purchase earns..
            - If you are using the Orders API to manage orders, you provide `order_id` in the request. The .
            endpoint calculates the points by reading the order..
            - If you are not using the Orders API to manage orders, you provide the purchase amount in .
            the request for the endpoint to calculate the points..
            An application might call this endpoint to show the points that a buyer can earn with the .
            specific purchase..
            </summary>
            <param name="programId">Required parameter: The [loyalty program]($m/LoyaltyProgram) ID, which defines the rules for accruing points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CalculateLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.CreateLoyaltyReward(Square.Models.CreateLoyaltyRewardRequest)">
            <summary>
            Creates a loyalty reward. In the process, the endpoint does following:.
            - Uses the `reward_tier_id` in the request to determine the number of points .
            to lock for this reward. .
            - If the request includes `order_id`, it adds the reward and related discount to the order. .
            After a reward is created, the points are locked and .
            not available for the buyer to redeem another reward..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.CreateLoyaltyRewardAsync(Square.Models.CreateLoyaltyRewardRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a loyalty reward. In the process, the endpoint does following:.
            - Uses the `reward_tier_id` in the request to determine the number of points .
            to lock for this reward. .
            - If the request includes `order_id`, it adds the reward and related discount to the order. .
            After a reward is created, the points are locked and .
            not available for the buyer to redeem another reward..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.SearchLoyaltyRewards(Square.Models.SearchLoyaltyRewardsRequest)">
            <summary>
            Searches for loyalty rewards in a loyalty account. .
            In the current implementation, the endpoint supports search by the reward `status`..
            If you know a reward ID, use the .
            [RetrieveLoyaltyReward]($e/Loyalty/RetrieveLoyaltyReward) endpoint..
            Search results are sorted by `updated_at` in descending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchLoyaltyRewardsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.SearchLoyaltyRewardsAsync(Square.Models.SearchLoyaltyRewardsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for loyalty rewards in a loyalty account. .
            In the current implementation, the endpoint supports search by the reward `status`..
            If you know a reward ID, use the .
            [RetrieveLoyaltyReward]($e/Loyalty/RetrieveLoyaltyReward) endpoint..
            Search results are sorted by `updated_at` in descending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchLoyaltyRewardsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.DeleteLoyaltyReward(System.String)">
            <summary>
            Deletes a loyalty reward by doing the following:.
            - Returns the loyalty points back to the loyalty account..
            - If an order ID was specified when the reward was created .
            (see [CreateLoyaltyReward]($e/Loyalty/CreateLoyaltyReward)), .
            it updates the order by removing the reward and related .
            discounts..
            You cannot delete a reward that has reached the terminal state (REDEEMED)..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to delete..</param>
            <returns>Returns the Models.DeleteLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.DeleteLoyaltyRewardAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a loyalty reward by doing the following:.
            - Returns the loyalty points back to the loyalty account..
            - If an order ID was specified when the reward was created .
            (see [CreateLoyaltyReward]($e/Loyalty/CreateLoyaltyReward)), .
            it updates the order by removing the reward and related .
            discounts..
            You cannot delete a reward that has reached the terminal state (REDEEMED)..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to delete..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.RetrieveLoyaltyReward(System.String)">
            <summary>
            Retrieves a loyalty reward..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to retrieve..</param>
            <returns>Returns the Models.RetrieveLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.RetrieveLoyaltyRewardAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a loyalty reward..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.RedeemLoyaltyReward(System.String,Square.Models.RedeemLoyaltyRewardRequest)">
            <summary>
            Redeems a loyalty reward..
            The endpoint sets the reward to the `REDEEMED` terminal state. .
            If you are using your own order processing system (not using the .
            Orders API), you call this endpoint after the buyer paid for the .
            purchase..
            After the reward reaches the terminal state, it cannot be deleted. .
            In other words, points used for the reward cannot be returned .
            to the account..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to redeem..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.RedeemLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ILoyaltyApi.RedeemLoyaltyRewardAsync(System.String,Square.Models.RedeemLoyaltyRewardRequest,System.Threading.CancellationToken)">
            <summary>
            Redeems a loyalty reward..
            The endpoint sets the reward to the `REDEEMED` terminal state. .
            If you are using your own order processing system (not using the .
            Orders API), you call this endpoint after the buyer paid for the .
            purchase..
            After the reward reaches the terminal state, it cannot be deleted. .
            In other words, points used for the reward cannot be returned .
            to the account..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to redeem..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RedeemLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IMerchantsApi">
            <summary>
            IMerchantsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IMerchantsApi.ListMerchants(System.Nullable{System.Int32})">
            <summary>
            Returns `Merchant` information for a given access token..
            If you don't know a `Merchant` ID, you can use this endpoint to retrieve the merchant ID for an access token..
            You can specify your personal access token to get your own merchant information or specify an OAuth token.
            to get the information for the  merchant that granted you access..
            If you know the merchant ID, you can also use the [RetrieveMerchant]($e/Merchants/RetrieveMerchant).
            endpoint to get the merchant information..
            </summary>
            <param name="cursor">Optional parameter: The cursor generated by the previous response..</param>
            <returns>Returns the Models.ListMerchantsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IMerchantsApi.ListMerchantsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Returns `Merchant` information for a given access token..
            If you don't know a `Merchant` ID, you can use this endpoint to retrieve the merchant ID for an access token..
            You can specify your personal access token to get your own merchant information or specify an OAuth token.
            to get the information for the  merchant that granted you access..
            If you know the merchant ID, you can also use the [RetrieveMerchant]($e/Merchants/RetrieveMerchant).
            endpoint to get the merchant information..
            </summary>
            <param name="cursor">Optional parameter: The cursor generated by the previous response..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListMerchantsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IMerchantsApi.RetrieveMerchant(System.String)">
            <summary>
            Retrieve a `Merchant` object for the given `merchant_id`..
            </summary>
            <param name="merchantId">Required parameter: The ID of the merchant to retrieve. If the string "me" is supplied as the ID, then retrieve the merchant that is currently accessible to this call..</param>
            <returns>Returns the Models.RetrieveMerchantResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IMerchantsApi.RetrieveMerchantAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a `Merchant` object for the given `merchant_id`..
            </summary>
            <param name="merchantId">Required parameter: The ID of the merchant to retrieve. If the string "me" is supplied as the ID, then retrieve the merchant that is currently accessible to this call..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveMerchantResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IMobileAuthorizationApi">
            <summary>
            IMobileAuthorizationApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IMobileAuthorizationApi.CreateMobileAuthorizationCode(Square.Models.CreateMobileAuthorizationCodeRequest)">
            <summary>
            Generates code to authorize a mobile application to connect to a Square card reader.
            Authorization codes are one-time-use and expire __60 minutes__ after being issued..
            __Important:__ The `Authorization` header you provide to this endpoint must have the following format:.
            ```.
            Authorization: Bearer ACCESS_TOKEN.
            ```.
            Replace `ACCESS_TOKEN` with a.
            [valid production authorization credential](https://developer.squareup.com/docs/build-basics/access-tokens)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateMobileAuthorizationCodeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IMobileAuthorizationApi.CreateMobileAuthorizationCodeAsync(Square.Models.CreateMobileAuthorizationCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Generates code to authorize a mobile application to connect to a Square card reader.
            Authorization codes are one-time-use and expire __60 minutes__ after being issued..
            __Important:__ The `Authorization` header you provide to this endpoint must have the following format:.
            ```.
            Authorization: Bearer ACCESS_TOKEN.
            ```.
            Replace `ACCESS_TOKEN` with a.
            [valid production authorization credential](https://developer.squareup.com/docs/build-basics/access-tokens)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateMobileAuthorizationCodeResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.InventoryApi">
            <summary>
            InventoryApi.
            </summary>
        </member>
        <member name="M:Square.Apis.InventoryApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.InventoryApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.InventoryApi.RetrieveInventoryAdjustment(System.String)">
            <summary>
            Returns the [InventoryAdjustment]($m/InventoryAdjustment) object.
            with the provided `adjustment_id`..
            </summary>
            <param name="adjustmentId">Required parameter: ID of the [InventoryAdjustment]($m/InventoryAdjustment) to retrieve..</param>
            <returns>Returns the Models.RetrieveInventoryAdjustmentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.RetrieveInventoryAdjustmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the [InventoryAdjustment]($m/InventoryAdjustment) object.
            with the provided `adjustment_id`..
            </summary>
            <param name="adjustmentId">Required parameter: ID of the [InventoryAdjustment]($m/InventoryAdjustment) to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveInventoryAdjustmentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.BatchChangeInventory(Square.Models.BatchChangeInventoryRequest)">
            <summary>
            Applies adjustments and counts to the provided item quantities..
            On success: returns the current calculated counts for all objects.
            referenced in the request..
            On failure: returns a list of related errors..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchChangeInventoryResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.BatchChangeInventoryAsync(Square.Models.BatchChangeInventoryRequest,System.Threading.CancellationToken)">
            <summary>
            Applies adjustments and counts to the provided item quantities..
            On success: returns the current calculated counts for all objects.
            referenced in the request..
            On failure: returns a list of related errors..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchChangeInventoryResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.BatchRetrieveInventoryChanges(Square.Models.BatchRetrieveInventoryChangesRequest)">
            <summary>
            Returns historical physical counts and adjustments based on the.
            provided filter criteria..
            Results are paginated and sorted in ascending order according their.
            `occurred_at` timestamp (oldest first)..
            BatchRetrieveInventoryChanges is a catch-all query endpoint for queries.
            that cannot be handled by other, simpler endpoints..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchRetrieveInventoryChangesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.BatchRetrieveInventoryChangesAsync(Square.Models.BatchRetrieveInventoryChangesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns historical physical counts and adjustments based on the.
            provided filter criteria..
            Results are paginated and sorted in ascending order according their.
            `occurred_at` timestamp (oldest first)..
            BatchRetrieveInventoryChanges is a catch-all query endpoint for queries.
            that cannot be handled by other, simpler endpoints..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchRetrieveInventoryChangesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.BatchRetrieveInventoryCounts(Square.Models.BatchRetrieveInventoryCountsRequest)">
            <summary>
            Returns current counts for the provided.
            [CatalogObject]($m/CatalogObject)s at the requested.
            [Location]($m/Location)s..
            Results are paginated and sorted in descending order according to their.
            `calculated_at` timestamp (newest first)..
            When `updated_after` is specified, only counts that have changed since that.
            time (based on the server timestamp for the most recent change) are.
            returned. This allows clients to perform a "sync" operation, for example.
            in response to receiving a Webhook notification..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchRetrieveInventoryCountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.BatchRetrieveInventoryCountsAsync(Square.Models.BatchRetrieveInventoryCountsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns current counts for the provided.
            [CatalogObject]($m/CatalogObject)s at the requested.
            [Location]($m/Location)s..
            Results are paginated and sorted in descending order according to their.
            `calculated_at` timestamp (newest first)..
            When `updated_after` is specified, only counts that have changed since that.
            time (based on the server timestamp for the most recent change) are.
            returned. This allows clients to perform a "sync" operation, for example.
            in response to receiving a Webhook notification..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchRetrieveInventoryCountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.RetrieveInventoryPhysicalCount(System.String)">
            <summary>
            Returns the [InventoryPhysicalCount]($m/InventoryPhysicalCount).
            object with the provided `physical_count_id`..
            </summary>
            <param name="physicalCountId">Required parameter: ID of the [InventoryPhysicalCount]($m/InventoryPhysicalCount) to retrieve..</param>
            <returns>Returns the Models.RetrieveInventoryPhysicalCountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.RetrieveInventoryPhysicalCountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the [InventoryPhysicalCount]($m/InventoryPhysicalCount).
            object with the provided `physical_count_id`..
            </summary>
            <param name="physicalCountId">Required parameter: ID of the [InventoryPhysicalCount]($m/InventoryPhysicalCount) to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveInventoryPhysicalCountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.RetrieveInventoryCount(System.String,System.String,System.String)">
            <summary>
            Retrieves the current calculated stock count for a given.
            [CatalogObject]($m/CatalogObject) at a given set of.
            [Location]($m/Location)s. Responses are paginated and unsorted..
            For more sophisticated queries, use a batch endpoint..
            </summary>
            <param name="catalogObjectId">Required parameter: ID of the [CatalogObject]($m/CatalogObject) to retrieve..</param>
            <param name="locationIds">Optional parameter: The [Location]($m/Location) IDs to look up as a comma-separated list. An empty list queries all locations..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <returns>Returns the Models.RetrieveInventoryCountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.RetrieveInventoryCountAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the current calculated stock count for a given.
            [CatalogObject]($m/CatalogObject) at a given set of.
            [Location]($m/Location)s. Responses are paginated and unsorted..
            For more sophisticated queries, use a batch endpoint..
            </summary>
            <param name="catalogObjectId">Required parameter: ID of the [CatalogObject]($m/CatalogObject) to retrieve..</param>
            <param name="locationIds">Optional parameter: The [Location]($m/Location) IDs to look up as a comma-separated list. An empty list queries all locations..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveInventoryCountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.RetrieveInventoryChanges(System.String,System.String,System.String)">
            <summary>
            Returns a set of physical counts and inventory adjustments for the.
            provided [CatalogObject]($m/CatalogObject) at the requested.
            [Location]($m/Location)s..
            Results are paginated and sorted in descending order according to their.
            `occurred_at` timestamp (newest first)..
            There are no limits on how far back the caller can page. This endpoint can be .
            used to display recent changes for a specific item. For more.
            sophisticated queries, use a batch endpoint..
            </summary>
            <param name="catalogObjectId">Required parameter: ID of the [CatalogObject]($m/CatalogObject) to retrieve..</param>
            <param name="locationIds">Optional parameter: The [Location]($m/Location) IDs to look up as a comma-separated list. An empty list queries all locations..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <returns>Returns the Models.RetrieveInventoryChangesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InventoryApi.RetrieveInventoryChangesAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a set of physical counts and inventory adjustments for the.
            provided [CatalogObject]($m/CatalogObject) at the requested.
            [Location]($m/Location)s..
            Results are paginated and sorted in descending order according to their.
            `occurred_at` timestamp (newest first)..
            There are no limits on how far back the caller can page. This endpoint can be .
            used to display recent changes for a specific item. For more.
            sophisticated queries, use a batch endpoint..
            </summary>
            <param name="catalogObjectId">Required parameter: ID of the [CatalogObject]($m/CatalogObject) to retrieve..</param>
            <param name="locationIds">Optional parameter: The [Location]($m/Location) IDs to look up as a comma-separated list. An empty list queries all locations..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveInventoryChangesResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.InvoicesApi">
            <summary>
            InvoicesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.InvoicesApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.InvoicesApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.InvoicesApi.ListInvoices(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Returns a list of invoices for a given location. The response .
            is paginated. If truncated, the response includes a `cursor` that you    .
            use in a subsequent request to retrieve the next set of invoices..
            </summary>
            <param name="locationId">Required parameter: The ID of the location for which to list invoices..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint.  Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="limit">Optional parameter: The maximum number of invoices to return (200 is the maximum `limit`).  If not provided, the server uses a default limit of 100 invoices..</param>
            <returns>Returns the Models.ListInvoicesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.ListInvoicesAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Returns a list of invoices for a given location. The response .
            is paginated. If truncated, the response includes a `cursor` that you    .
            use in a subsequent request to retrieve the next set of invoices..
            </summary>
            <param name="locationId">Required parameter: The ID of the location for which to list invoices..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint.  Provide this cursor to retrieve the next set of results for your original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="limit">Optional parameter: The maximum number of invoices to return (200 is the maximum `limit`).  If not provided, the server uses a default limit of 100 invoices..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListInvoicesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.CreateInvoice(Square.Models.CreateInvoiceRequest)">
            <summary>
            Creates a draft [invoice]($m/Invoice) .
            for an order created using the Orders API..
            A draft invoice remains in your account and no action is taken. .
            You must publish the invoice before Square can process it (send it to the customer's email address or charge the customer’s card on file)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.CreateInvoiceAsync(Square.Models.CreateInvoiceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a draft [invoice]($m/Invoice) .
            for an order created using the Orders API..
            A draft invoice remains in your account and no action is taken. .
            You must publish the invoice before Square can process it (send it to the customer's email address or charge the customer’s card on file)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.SearchInvoices(Square.Models.SearchInvoicesRequest)">
            <summary>
            Searches for invoices from a location specified in .
            the filter. You can optionally specify customers in the filter for whom to .
            retrieve invoices. In the current implementation, you can only specify one location and .
            optionally one customer..
            The response is paginated. If truncated, the response includes a `cursor` .
            that you use in a subsequent request to retrieve the next set of invoices..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchInvoicesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.SearchInvoicesAsync(Square.Models.SearchInvoicesRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for invoices from a location specified in .
            the filter. You can optionally specify customers in the filter for whom to .
            retrieve invoices. In the current implementation, you can only specify one location and .
            optionally one customer..
            The response is paginated. If truncated, the response includes a `cursor` .
            that you use in a subsequent request to retrieve the next set of invoices..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchInvoicesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.DeleteInvoice(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the specified invoice. When an invoice is deleted, the .
            associated order status changes to CANCELED. You can only delete a draft .
            invoice (you cannot delete a published invoice, including one that is scheduled for processing)..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to delete..</param>
            <param name="version">Optional parameter: The version of the [invoice]($m/Invoice) to delete. If you do not know the version, you can call [GetInvoice]($e/Invoices/GetInvoice) or  [ListInvoices]($e/Invoices/ListInvoices)..</param>
            <returns>Returns the Models.DeleteInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.DeleteInvoiceAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified invoice. When an invoice is deleted, the .
            associated order status changes to CANCELED. You can only delete a draft .
            invoice (you cannot delete a published invoice, including one that is scheduled for processing)..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to delete..</param>
            <param name="version">Optional parameter: The version of the [invoice]($m/Invoice) to delete. If you do not know the version, you can call [GetInvoice]($e/Invoices/GetInvoice) or  [ListInvoices]($e/Invoices/ListInvoices)..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.GetInvoice(System.String)">
            <summary>
            Retrieves an invoice by invoice ID..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to retrieve..</param>
            <returns>Returns the Models.GetInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.GetInvoiceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an invoice by invoice ID..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.UpdateInvoice(System.String,Square.Models.UpdateInvoiceRequest)">
            <summary>
            Updates an invoice by modifying fields, clearing fields, or both. For most updates, you can use a sparse .
            `Invoice` object to add fields or change values and use the `fields_to_clear` field to specify fields to clear. .
            However, some restrictions apply. For example, you cannot change the `order_id` or `location_id` field and you .
            must provide the complete `custom_fields` list to update a custom field. Published invoices have additional restrictions..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.UpdateInvoiceAsync(System.String,Square.Models.UpdateInvoiceRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an invoice by modifying fields, clearing fields, or both. For most updates, you can use a sparse .
            `Invoice` object to add fields or change values and use the `fields_to_clear` field to specify fields to clear. .
            However, some restrictions apply. For example, you cannot change the `order_id` or `location_id` field and you .
            must provide the complete `custom_fields` list to update a custom field. Published invoices have additional restrictions..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.CancelInvoice(System.String,Square.Models.CancelInvoiceRequest)">
            <summary>
            Cancels an invoice. The seller cannot collect payments for .
            the canceled invoice..
            You cannot cancel an invoice in the `DRAFT` state or in a terminal state: `PAID`, `REFUNDED`, `CANCELED`, or `FAILED`..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the [invoice]($m/Invoice) to cancel..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CancelInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.CancelInvoiceAsync(System.String,Square.Models.CancelInvoiceRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels an invoice. The seller cannot collect payments for .
            the canceled invoice..
            You cannot cancel an invoice in the `DRAFT` state or in a terminal state: `PAID`, `REFUNDED`, `CANCELED`, or `FAILED`..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the [invoice]($m/Invoice) to cancel..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.PublishInvoice(System.String,Square.Models.PublishInvoiceRequest)">
            <summary>
            Publishes the specified draft invoice. .
            After an invoice is published, Square .
            follows up based on the invoice configuration. For example, Square .
            sends the invoice to the customer's email address, charges the customer's card on file, or does .
            nothing. Square also makes the invoice available on a Square-hosted invoice page. .
            The invoice `status` also changes from `DRAFT` to a status .
            based on the invoice configuration. For example, the status changes to `UNPAID` if .
            Square emails the invoice or `PARTIALLY_PAID` if Square charge a card on file for a portion of the .
            invoice amount..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to publish..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.PublishInvoiceResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.InvoicesApi.PublishInvoiceAsync(System.String,Square.Models.PublishInvoiceRequest,System.Threading.CancellationToken)">
            <summary>
            Publishes the specified draft invoice. .
            After an invoice is published, Square .
            follows up based on the invoice configuration. For example, Square .
            sends the invoice to the customer's email address, charges the customer's card on file, or does .
            nothing. Square also makes the invoice available on a Square-hosted invoice page. .
            The invoice `status` also changes from `DRAFT` to a status .
            based on the invoice configuration. For example, the status changes to `UNPAID` if .
            Square emails the invoice or `PARTIALLY_PAID` if Square charge a card on file for a portion of the .
            invoice amount..
            </summary>
            <param name="invoiceId">Required parameter: The ID of the invoice to publish..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.PublishInvoiceResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IOAuthApi">
            <summary>
            IOAuthApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IOAuthApi.RenewToken(System.String,Square.Models.RenewTokenRequest,System.String)">
            <summary>
            `RenewToken` is deprecated. For information about refreshing OAuth access tokens, see.
            [Renew OAuth Token](https://developer.squareup.com/docs/oauth-api/cookbook/renew-oauth-tokens)..
            Renews an OAuth access token before it expires..
            OAuth access tokens besides your application's personal access token expire after __30 days__..
            You can also renew expired tokens within __15 days__ of their expiration..
            You cannot renew an access token that has been expired for more than 15 days..
            Instead, the associated user must re-complete the OAuth flow from the beginning..
            __Important:__ The `Authorization` header for this endpoint must have the.
            following format:.
            ```.
            Authorization: Client APPLICATION_SECRET.
            ```.
            Replace `APPLICATION_SECRET` with the application secret on the Credentials.
            page in the [application dashboard](https://connect.squareup.com/apps)..
            </summary>
            <param name="clientId">Required parameter: Your application ID, available from the [application dashboard](https://connect.squareup.com/apps)..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="authorization">Required parameter: Client APPLICATION_SECRET.</param>
            <returns>Returns the Models.RenewTokenResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOAuthApi.RenewTokenAsync(System.String,Square.Models.RenewTokenRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            `RenewToken` is deprecated. For information about refreshing OAuth access tokens, see.
            [Renew OAuth Token](https://developer.squareup.com/docs/oauth-api/cookbook/renew-oauth-tokens)..
            Renews an OAuth access token before it expires..
            OAuth access tokens besides your application's personal access token expire after __30 days__..
            You can also renew expired tokens within __15 days__ of their expiration..
            You cannot renew an access token that has been expired for more than 15 days..
            Instead, the associated user must re-complete the OAuth flow from the beginning..
            __Important:__ The `Authorization` header for this endpoint must have the.
            following format:.
            ```.
            Authorization: Client APPLICATION_SECRET.
            ```.
            Replace `APPLICATION_SECRET` with the application secret on the Credentials.
            page in the [application dashboard](https://connect.squareup.com/apps)..
            </summary>
            <param name="clientId">Required parameter: Your application ID, available from the [application dashboard](https://connect.squareup.com/apps)..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="authorization">Required parameter: Client APPLICATION_SECRET.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RenewTokenResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOAuthApi.RevokeToken(Square.Models.RevokeTokenRequest,System.String)">
            <summary>
            Revokes an access token generated with the OAuth flow..
            If an account has more than one OAuth access token for your application, this.
            endpoint revokes all of them, regardless of which token you specify. When an.
            OAuth access token is revoked, all of the active subscriptions associated.
            with that OAuth token are canceled immediately..
            __Important:__ The `Authorization` header for this endpoint must have the.
            following format:.
            ```.
            Authorization: Client APPLICATION_SECRET.
            ```.
            Replace `APPLICATION_SECRET` with the application secret on the Credentials.
            page in the [Developer Dashboard](https://developer.squareup.com/apps)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="authorization">Required parameter: Client APPLICATION_SECRET.</param>
            <returns>Returns the Models.RevokeTokenResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOAuthApi.RevokeTokenAsync(Square.Models.RevokeTokenRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Revokes an access token generated with the OAuth flow..
            If an account has more than one OAuth access token for your application, this.
            endpoint revokes all of them, regardless of which token you specify. When an.
            OAuth access token is revoked, all of the active subscriptions associated.
            with that OAuth token are canceled immediately..
            __Important:__ The `Authorization` header for this endpoint must have the.
            following format:.
            ```.
            Authorization: Client APPLICATION_SECRET.
            ```.
            Replace `APPLICATION_SECRET` with the application secret on the Credentials.
            page in the [Developer Dashboard](https://developer.squareup.com/apps)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="authorization">Required parameter: Client APPLICATION_SECRET.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RevokeTokenResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOAuthApi.ObtainToken(Square.Models.ObtainTokenRequest)">
            <summary>
            Returns an OAuth access token..
            The endpoint supports distinct methods of obtaining OAuth access tokens..
            Applications specify a method by adding the `grant_type` parameter.
            in the request and also provide relevant information..
            __Note:__ Regardless of the method application specified,.
            the endpoint always returns two items; an OAuth access token and.
            a refresh token in the response..
            __OAuth tokens should only live on secure servers. Application clients.
            should never interact directly with OAuth tokens__..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.ObtainTokenResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOAuthApi.ObtainTokenAsync(Square.Models.ObtainTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an OAuth access token..
            The endpoint supports distinct methods of obtaining OAuth access tokens..
            Applications specify a method by adding the `grant_type` parameter.
            in the request and also provide relevant information..
            __Note:__ Regardless of the method application specified,.
            the endpoint always returns two items; an OAuth access token and.
            a refresh token in the response..
            __OAuth tokens should only live on secure servers. Application clients.
            should never interact directly with OAuth tokens__..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ObtainTokenResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IOrdersApi">
            <summary>
            IOrdersApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IOrdersApi.CreateOrder(Square.Models.CreateOrderRequest)">
            <summary>
            Creates a new [order]($m/Order) that can include information about products for.
            purchase and settings to apply to the purchase..
            To pay for a created order, see .
            [Pay for Orders](https://developer.squareup.com/docs/orders-api/pay-for-orders)..
            You can modify open orders using the [UpdateOrder]($e/Orders/UpdateOrder) endpoint..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.CreateOrderAsync(Square.Models.CreateOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new [order]($m/Order) that can include information about products for.
            purchase and settings to apply to the purchase..
            To pay for a created order, see .
            [Pay for Orders](https://developer.squareup.com/docs/orders-api/pay-for-orders)..
            You can modify open orders using the [UpdateOrder]($e/Orders/UpdateOrder) endpoint..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.BatchRetrieveOrders(Square.Models.BatchRetrieveOrdersRequest)">
            <summary>
            Retrieves a set of [orders]($m/Order) by their IDs..
            If a given order ID does not exist, the ID is ignored instead of generating an error..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchRetrieveOrdersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.BatchRetrieveOrdersAsync(Square.Models.BatchRetrieveOrdersRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a set of [orders]($m/Order) by their IDs..
            If a given order ID does not exist, the ID is ignored instead of generating an error..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchRetrieveOrdersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.CalculateOrder(Square.Models.CalculateOrderRequest)">
            <summary>
            Enables applications to preview order pricing without creating an order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CalculateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.CalculateOrderAsync(Square.Models.CalculateOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Enables applications to preview order pricing without creating an order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CalculateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.SearchOrders(Square.Models.SearchOrdersRequest)">
            <summary>
            Search all orders for one or more locations. Orders include all sales,.
            returns, and exchanges regardless of how or when they entered the Square.
            ecosystem (such as Point of Sale, Invoices, and Connect APIs)..
            `SearchOrders` requests need to specify which locations to search and define a.
            [SearchOrdersQuery]($m/SearchOrdersQuery) object that controls.
            how to sort or filter the results. Your `SearchOrdersQuery` can:.
              Set filter criteria..
              Set the sort order..
              Determine whether to return results as complete `Order` objects or as.
            [OrderEntry]($m/OrderEntry) objects..
            Note that details for orders processed with Square Point of Sale while in.
            offline mode might not be transmitted to Square for up to 72 hours. Offline.
            orders have a `created_at` value that reflects the time the order was created,.
            not the time it was subsequently transmitted to Square..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchOrdersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.SearchOrdersAsync(Square.Models.SearchOrdersRequest,System.Threading.CancellationToken)">
            <summary>
            Search all orders for one or more locations. Orders include all sales,.
            returns, and exchanges regardless of how or when they entered the Square.
            ecosystem (such as Point of Sale, Invoices, and Connect APIs)..
            `SearchOrders` requests need to specify which locations to search and define a.
            [SearchOrdersQuery]($m/SearchOrdersQuery) object that controls.
            how to sort or filter the results. Your `SearchOrdersQuery` can:.
              Set filter criteria..
              Set the sort order..
              Determine whether to return results as complete `Order` objects or as.
            [OrderEntry]($m/OrderEntry) objects..
            Note that details for orders processed with Square Point of Sale while in.
            offline mode might not be transmitted to Square for up to 72 hours. Offline.
            orders have a `created_at` value that reflects the time the order was created,.
            not the time it was subsequently transmitted to Square..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchOrdersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.RetrieveOrder(System.String)">
            <summary>
            Retrieves an [Order]($m/Order) by ID..
            </summary>
            <param name="orderId">Required parameter: The ID of the order to retrieve..</param>
            <returns>Returns the Models.RetrieveOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.RetrieveOrderAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an [Order]($m/Order) by ID..
            </summary>
            <param name="orderId">Required parameter: The ID of the order to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.UpdateOrder(System.String,Square.Models.UpdateOrderRequest)">
            <summary>
            Updates an open [order]($m/Order) by adding, replacing, or deleting.
            fields. Orders with a `COMPLETED` or `CANCELED` state cannot be updated..
            An `UpdateOrder` request requires the following:.
            - The `order_id` in the endpoint path, identifying the order to update..
            - The latest `version` of the order to update..
            - The [sparse order](https://developer.squareup.com/docs/orders-api/manage-orders#sparse-order-objects).
            containing only the fields to update and the version to which the update is.
            being applied..
            - If deleting fields, the [dot notation paths](https://developer.squareup.com/docs/orders-api/manage-orders#on-dot-notation).
            identifying the fields to clear..
            To pay for an order, see .
            [Pay for Orders](https://developer.squareup.com/docs/orders-api/pay-for-orders)..
            </summary>
            <param name="orderId">Required parameter: The ID of the order to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.UpdateOrderAsync(System.String,Square.Models.UpdateOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an open [order]($m/Order) by adding, replacing, or deleting.
            fields. Orders with a `COMPLETED` or `CANCELED` state cannot be updated..
            An `UpdateOrder` request requires the following:.
            - The `order_id` in the endpoint path, identifying the order to update..
            - The latest `version` of the order to update..
            - The [sparse order](https://developer.squareup.com/docs/orders-api/manage-orders#sparse-order-objects).
            containing only the fields to update and the version to which the update is.
            being applied..
            - If deleting fields, the [dot notation paths](https://developer.squareup.com/docs/orders-api/manage-orders#on-dot-notation).
            identifying the fields to clear..
            To pay for an order, see .
            [Pay for Orders](https://developer.squareup.com/docs/orders-api/pay-for-orders)..
            </summary>
            <param name="orderId">Required parameter: The ID of the order to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.PayOrder(System.String,Square.Models.PayOrderRequest)">
            <summary>
            Pay for an [order]($m/Order) using one or more approved [payments]($m/Payment).
            or settle an order with a total of `0`..
            The total of the `payment_ids` listed in the request must be equal to the order.
            total. Orders with a total amount of `0` can be marked as paid by specifying an empty.
            array of `payment_ids` in the request..
            To be used with `PayOrder`, a payment must:.
            - Reference the order by specifying the `order_id` when [creating the payment]($e/Payments/CreatePayment)..
            Any approved payments that reference the same `order_id` not specified in the.
            `payment_ids` is canceled..
            - Be approved with [delayed capture](https://developer.squareup.com/docs/payments-api/take-payments#delayed-capture)..
            Using a delayed capture payment with `PayOrder` completes the approved payment..
            </summary>
            <param name="orderId">Required parameter: The ID of the order being paid..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.PayOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IOrdersApi.PayOrderAsync(System.String,Square.Models.PayOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Pay for an [order]($m/Order) using one or more approved [payments]($m/Payment).
            or settle an order with a total of `0`..
            The total of the `payment_ids` listed in the request must be equal to the order.
            total. Orders with a total amount of `0` can be marked as paid by specifying an empty.
            array of `payment_ids` in the request..
            To be used with `PayOrder`, a payment must:.
            - Reference the order by specifying the `order_id` when [creating the payment]($e/Payments/CreatePayment)..
            Any approved payments that reference the same `order_id` not specified in the.
            `payment_ids` is canceled..
            - Be approved with [delayed capture](https://developer.squareup.com/docs/payments-api/take-payments#delayed-capture)..
            Using a delayed capture payment with `PayOrder` completes the approved payment..
            </summary>
            <param name="orderId">Required parameter: The ID of the order being paid..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.PayOrderResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IPaymentsApi">
            <summary>
            IPaymentsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.ListPayments(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of payments taken by the account making the request..
            Results are eventually consistent, and new payments or changes to payments might take several.
            seconds to appear..
            The maximum results per page is 100..
            </summary>
            <param name="beginTime">Optional parameter: The timestamp for the beginning of the reporting period, in RFC 3339 format. Inclusive. Default: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The timestamp for the end of the reporting period, in RFC 3339 format.  Default: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed: - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default)..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="locationId">Optional parameter: Limit results to the location supplied. By default, results are returned for the default (main) location associated with the seller..</param>
            <param name="total">Optional parameter: The exact amount in the `total_money` for a payment..</param>
            <param name="last4">Optional parameter: The last four digits of a payment card..</param>
            <param name="cardBrand">Optional parameter: The brand of the payment card (for example, VISA)..</param>
            <param name="limit">Optional parameter: The maximum number of results to be returned in a single page. It is possible to receive fewer results than the specified limit on a given page.  The default value of 100 is also the maximum allowed value. If the provided value is  greater than 100, it is ignored and the default value is used instead.  Default: `100`.</param>
            <returns>Returns the Models.ListPaymentsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.ListPaymentsAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of payments taken by the account making the request..
            Results are eventually consistent, and new payments or changes to payments might take several.
            seconds to appear..
            The maximum results per page is 100..
            </summary>
            <param name="beginTime">Optional parameter: The timestamp for the beginning of the reporting period, in RFC 3339 format. Inclusive. Default: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The timestamp for the end of the reporting period, in RFC 3339 format.  Default: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed: - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default)..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="locationId">Optional parameter: Limit results to the location supplied. By default, results are returned for the default (main) location associated with the seller..</param>
            <param name="total">Optional parameter: The exact amount in the `total_money` for a payment..</param>
            <param name="last4">Optional parameter: The last four digits of a payment card..</param>
            <param name="cardBrand">Optional parameter: The brand of the payment card (for example, VISA)..</param>
            <param name="limit">Optional parameter: The maximum number of results to be returned in a single page. It is possible to receive fewer results than the specified limit on a given page.  The default value of 100 is also the maximum allowed value. If the provided value is  greater than 100, it is ignored and the default value is used instead.  Default: `100`.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListPaymentsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.CreatePayment(Square.Models.CreatePaymentRequest)">
            <summary>
            Creates a payment using the provided source. You can use this endpoint .
            to charge a card (credit/debit card or    .
            Square gift card) or record a payment that the seller received outside of Square .
            (cash payment from a buyer or a payment that an external entity .
            processed on behalf of the seller)..
            The endpoint creates a .
            `Payment` object and returns it in the response..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreatePaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.CreatePaymentAsync(Square.Models.CreatePaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a payment using the provided source. You can use this endpoint .
            to charge a card (credit/debit card or    .
            Square gift card) or record a payment that the seller received outside of Square .
            (cash payment from a buyer or a payment that an external entity .
            processed on behalf of the seller)..
            The endpoint creates a .
            `Payment` object and returns it in the response..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreatePaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.CancelPaymentByIdempotencyKey(Square.Models.CancelPaymentByIdempotencyKeyRequest)">
            <summary>
            Cancels (voids) a payment identified by the idempotency key that is specified in the.
            request..
            Use this method when the status of a `CreatePayment` request is unknown (for example, after you send a.
            `CreatePayment` request, a network error occurs and you do not get a response). In this case, you can.
            direct Square to cancel the payment using this endpoint. In the request, you provide the same.
            idempotency key that you provided in your `CreatePayment` request that you want to cancel. After.
            canceling the payment, you can submit your `CreatePayment` request again..
            Note that if no payment with the specified idempotency key is found, no action is taken and the endpoint.
            returns successfully..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CancelPaymentByIdempotencyKeyResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.CancelPaymentByIdempotencyKeyAsync(Square.Models.CancelPaymentByIdempotencyKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels (voids) a payment identified by the idempotency key that is specified in the.
            request..
            Use this method when the status of a `CreatePayment` request is unknown (for example, after you send a.
            `CreatePayment` request, a network error occurs and you do not get a response). In this case, you can.
            direct Square to cancel the payment using this endpoint. In the request, you provide the same.
            idempotency key that you provided in your `CreatePayment` request that you want to cancel. After.
            canceling the payment, you can submit your `CreatePayment` request again..
            Note that if no payment with the specified idempotency key is found, no action is taken and the endpoint.
            returns successfully..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelPaymentByIdempotencyKeyResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.GetPayment(System.String)">
            <summary>
            Retrieves details for a specific payment..
            </summary>
            <param name="paymentId">Required parameter: A unique ID for the desired payment..</param>
            <returns>Returns the Models.GetPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.GetPaymentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves details for a specific payment..
            </summary>
            <param name="paymentId">Required parameter: A unique ID for the desired payment..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.UpdatePayment(System.String,Square.Models.UpdatePaymentRequest)">
            <summary>
            Updates a payment with the APPROVED status..
            You can update the `amount_money` and `tip_money` using this endpoint..
            </summary>
            <param name="paymentId">Required parameter: The ID of the payment to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdatePaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.UpdatePaymentAsync(System.String,Square.Models.UpdatePaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a payment with the APPROVED status..
            You can update the `amount_money` and `tip_money` using this endpoint..
            </summary>
            <param name="paymentId">Required parameter: The ID of the payment to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdatePaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.CancelPayment(System.String)">
            <summary>
            Cancels (voids) a payment. You can use this endpoint to cancel a payment with .
            the APPROVED `status`..
            </summary>
            <param name="paymentId">Required parameter: The ID of the payment to cancel..</param>
            <returns>Returns the Models.CancelPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.CancelPaymentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels (voids) a payment. You can use this endpoint to cancel a payment with .
            the APPROVED `status`..
            </summary>
            <param name="paymentId">Required parameter: The ID of the payment to cancel..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.CompletePayment(System.String)">
            <summary>
            Completes (captures) a payment..
            By default, payments are set to complete immediately after they are created..
            You can use this endpoint to complete a payment with the APPROVED `status`..
            </summary>
            <param name="paymentId">Required parameter: The unique ID identifying the payment to be completed..</param>
            <returns>Returns the Models.CompletePaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IPaymentsApi.CompletePaymentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Completes (captures) a payment..
            By default, payments are set to complete immediately after they are created..
            You can use this endpoint to complete a payment with the APPROVED `status`..
            </summary>
            <param name="paymentId">Required parameter: The unique ID identifying the payment to be completed..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CompletePaymentResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IRefundsApi">
            <summary>
            IRefundsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.IRefundsApi.ListPaymentRefunds(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of refunds for the account making the request..
            Results are eventually consistent, and new refunds or changes to refunds might take several.
            seconds to appear..
            The maximum results per page is 100..
            </summary>
            <param name="beginTime">Optional parameter: The timestamp for the beginning of the requested reporting period, in RFC 3339 format.  Default: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The timestamp for the end of the requested reporting period, in RFC 3339 format.  Default: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed: - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default)..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="locationId">Optional parameter: Limit results to the location supplied. By default, results are returned for all locations associated with the seller..</param>
            <param name="status">Optional parameter: If provided, only refunds with the given status are returned. For a list of refund status values, see [PaymentRefund]($m/PaymentRefund).  Default: If omitted, refunds are returned regardless of their status..</param>
            <param name="sourceType">Optional parameter: If provided, only refunds with the given source type are returned. - `CARD` - List refunds only for payments where `CARD` was specified as the payment source.  Default: If omitted, refunds are returned regardless of the source type..</param>
            <param name="limit">Optional parameter: The maximum number of results to be returned in a single page.  It is possible to receive fewer results than the specified limit on a given page.  If the supplied value is greater than 100, no more than 100 results are returned.  Default: 100.</param>
            <returns>Returns the Models.ListPaymentRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IRefundsApi.ListPaymentRefundsAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of refunds for the account making the request..
            Results are eventually consistent, and new refunds or changes to refunds might take several.
            seconds to appear..
            The maximum results per page is 100..
            </summary>
            <param name="beginTime">Optional parameter: The timestamp for the beginning of the requested reporting period, in RFC 3339 format.  Default: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The timestamp for the end of the requested reporting period, in RFC 3339 format.  Default: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed: - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default)..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="locationId">Optional parameter: Limit results to the location supplied. By default, results are returned for all locations associated with the seller..</param>
            <param name="status">Optional parameter: If provided, only refunds with the given status are returned. For a list of refund status values, see [PaymentRefund]($m/PaymentRefund).  Default: If omitted, refunds are returned regardless of their status..</param>
            <param name="sourceType">Optional parameter: If provided, only refunds with the given source type are returned. - `CARD` - List refunds only for payments where `CARD` was specified as the payment source.  Default: If omitted, refunds are returned regardless of the source type..</param>
            <param name="limit">Optional parameter: The maximum number of results to be returned in a single page.  It is possible to receive fewer results than the specified limit on a given page.  If the supplied value is greater than 100, no more than 100 results are returned.  Default: 100.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListPaymentRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IRefundsApi.RefundPayment(Square.Models.RefundPaymentRequest)">
            <summary>
            Refunds a payment. You can refund the entire payment amount or a.
            portion of it. You can use this endpoint to refund a card payment or record a .
            refund of a cash or external payment. For more information, see.
            [Refund Payment](https://developer.squareup.com/docs/payments-api/refund-payments)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.RefundPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IRefundsApi.RefundPaymentAsync(Square.Models.RefundPaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Refunds a payment. You can refund the entire payment amount or a.
            portion of it. You can use this endpoint to refund a card payment or record a .
            refund of a cash or external payment. For more information, see.
            [Refund Payment](https://developer.squareup.com/docs/payments-api/refund-payments)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RefundPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IRefundsApi.GetPaymentRefund(System.String)">
            <summary>
            Retrieves a specific refund using the `refund_id`..
            </summary>
            <param name="refundId">Required parameter: The unique ID for the desired `PaymentRefund`..</param>
            <returns>Returns the Models.GetPaymentRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IRefundsApi.GetPaymentRefundAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a specific refund using the `refund_id`..
            </summary>
            <param name="refundId">Required parameter: The unique ID for the desired `PaymentRefund`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetPaymentRefundResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ISitesApi">
            <summary>
            ISitesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ISitesApi.ListSites">
            <summary>
            Lists the Square Online sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <returns>Returns the Models.ListSitesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISitesApi.ListSitesAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the Square Online sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListSitesResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ISnippetsApi">
            <summary>
            ISnippetsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ISnippetsApi.DeleteSnippet(System.String)">
            <summary>
            Removes your snippet from a Square Online site..
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site that contains the snippet..</param>
            <returns>Returns the Models.DeleteSnippetResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISnippetsApi.DeleteSnippetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes your snippet from a Square Online site..
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site that contains the snippet..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteSnippetResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISnippetsApi.RetrieveSnippet(System.String)">
            <summary>
            Retrieves your snippet from a Square Online site. A site can contain snippets from multiple snippet applications, but you can retrieve only the snippet that was added by your application..
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site that contains the snippet..</param>
            <returns>Returns the Models.RetrieveSnippetResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISnippetsApi.RetrieveSnippetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves your snippet from a Square Online site. A site can contain snippets from multiple snippet applications, but you can retrieve only the snippet that was added by your application..
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site that contains the snippet..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveSnippetResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISnippetsApi.UpsertSnippet(System.String,Square.Models.UpsertSnippetRequest)">
            <summary>
            Adds a snippet to a Square Online site or updates the existing snippet on the site. .
            The snippet code is appended to the end of the `head` element on every page of the site, except checkout pages. A snippet application can add one snippet to a given site. .
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site where you want to add or update the snippet..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpsertSnippetResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISnippetsApi.UpsertSnippetAsync(System.String,Square.Models.UpsertSnippetRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a snippet to a Square Online site or updates the existing snippet on the site. .
            The snippet code is appended to the end of the `head` element on every page of the site, except checkout pages. A snippet application can add one snippet to a given site. .
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site where you want to add or update the snippet..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpsertSnippetResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ISubscriptionsApi">
            <summary>
            ISubscriptionsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.CreateSubscription(Square.Models.CreateSubscriptionRequest)">
            <summary>
            Creates a subscription for a customer to a subscription plan..
            If you provide a card on file in the request, Square charges the card for.
            the subscription. Otherwise, Square bills an invoice to the customer's email.
            address. The subscription starts immediately, unless the request includes.
            the optional `start_date`. Each individual subscription is associated with a particular location..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.CreateSubscriptionAsync(Square.Models.CreateSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a subscription for a customer to a subscription plan..
            If you provide a card on file in the request, Square charges the card for.
            the subscription. Otherwise, Square bills an invoice to the customer's email.
            address. The subscription starts immediately, unless the request includes.
            the optional `start_date`. Each individual subscription is associated with a particular location..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.SearchSubscriptions(Square.Models.SearchSubscriptionsRequest)">
            <summary>
            Searches for subscriptions..
            Results are ordered chronologically by subscription creation date. If.
            the request specifies more than one location ID,.
            the endpoint orders the result.
            by location ID, and then by creation date within each location. If no locations are given.
            in the query, all locations are searched..
            You can also optionally specify `customer_ids` to search by customer..
            If left unset, all customers.
            associated with the specified locations are returned..
            If the request specifies customer IDs, the endpoint orders results.
            first by location, within location by customer ID, and within.
            customer by subscription creation date..
            For more information, see.
            [Retrieve subscriptions](https://developer.squareup.com/docs/subscriptions-api/overview#retrieve-subscriptions)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchSubscriptionsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.SearchSubscriptionsAsync(Square.Models.SearchSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for subscriptions..
            Results are ordered chronologically by subscription creation date. If.
            the request specifies more than one location ID,.
            the endpoint orders the result.
            by location ID, and then by creation date within each location. If no locations are given.
            in the query, all locations are searched..
            You can also optionally specify `customer_ids` to search by customer..
            If left unset, all customers.
            associated with the specified locations are returned..
            If the request specifies customer IDs, the endpoint orders results.
            first by location, within location by customer ID, and within.
            customer by subscription creation date..
            For more information, see.
            [Retrieve subscriptions](https://developer.squareup.com/docs/subscriptions-api/overview#retrieve-subscriptions)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchSubscriptionsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.RetrieveSubscription(System.String)">
            <summary>
            Retrieves a subscription..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to retrieve..</param>
            <returns>Returns the Models.RetrieveSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.RetrieveSubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a subscription..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.UpdateSubscription(System.String,Square.Models.UpdateSubscriptionRequest)">
            <summary>
            Updates a subscription. You can set, modify, and clear the.
            `subscription` field values..
            </summary>
            <param name="subscriptionId">Required parameter: The ID for the subscription to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.UpdateSubscriptionAsync(System.String,Square.Models.UpdateSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a subscription. You can set, modify, and clear the.
            `subscription` field values..
            </summary>
            <param name="subscriptionId">Required parameter: The ID for the subscription to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.CancelSubscription(System.String)">
            <summary>
            Sets the `canceled_date` field to the end of the active billing period..
            After this date, the status changes from ACTIVE to CANCELED..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to cancel..</param>
            <returns>Returns the Models.CancelSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.CancelSubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the `canceled_date` field to the end of the active billing period..
            After this date, the status changes from ACTIVE to CANCELED..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to cancel..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.ListSubscriptionEvents(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Lists all events for a specific subscription..
            In the current implementation, only `START_SUBSCRIPTION` and `STOP_SUBSCRIPTION` (when the subscription was canceled) events are returned..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to retrieve the events for..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="limit">Optional parameter: The upper limit on the number of subscription events to return in the response.  Default: `200`.</param>
            <returns>Returns the Models.ListSubscriptionEventsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.ListSubscriptionEventsAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Lists all events for a specific subscription..
            In the current implementation, only `START_SUBSCRIPTION` and `STOP_SUBSCRIPTION` (when the subscription was canceled) events are returned..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to retrieve the events for..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="limit">Optional parameter: The upper limit on the number of subscription events to return in the response.  Default: `200`.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListSubscriptionEventsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.ResumeSubscription(System.String)">
            <summary>
            Resumes a deactivated subscription..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to resume..</param>
            <returns>Returns the Models.ResumeSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ISubscriptionsApi.ResumeSubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Resumes a deactivated subscription..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to resume..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ResumeSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ITeamApi">
            <summary>
            ITeamApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ITeamApi.CreateTeamMember(Square.Models.CreateTeamMemberRequest)">
            <summary>
            Creates a single `TeamMember` object. The `TeamMember` will be returned on successful creates..
            You must provide the following values in your request to this endpoint:.
            - `given_name`.
            - `family_name`.
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#createteammember)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.CreateTeamMemberAsync(Square.Models.CreateTeamMemberRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a single `TeamMember` object. The `TeamMember` will be returned on successful creates..
            You must provide the following values in your request to this endpoint:.
            - `given_name`.
            - `family_name`.
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#createteammember)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.BulkCreateTeamMembers(Square.Models.BulkCreateTeamMembersRequest)">
            <summary>
            Creates multiple `TeamMember` objects. The created `TeamMember` objects will be returned on successful creates..
            This process is non-transactional and will process as much of the request as is possible. If one of the creates in.
            the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response.
            will contain explicit error information for this particular create..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#bulk-create-team-members)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BulkCreateTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.BulkCreateTeamMembersAsync(Square.Models.BulkCreateTeamMembersRequest,System.Threading.CancellationToken)">
            <summary>
            Creates multiple `TeamMember` objects. The created `TeamMember` objects will be returned on successful creates..
            This process is non-transactional and will process as much of the request as is possible. If one of the creates in.
            the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response.
            will contain explicit error information for this particular create..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#bulk-create-team-members)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BulkCreateTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.BulkUpdateTeamMembers(Square.Models.BulkUpdateTeamMembersRequest)">
            <summary>
            Updates multiple `TeamMember` objects. The updated `TeamMember` objects will be returned on successful updates..
            This process is non-transactional and will process as much of the request as is possible. If one of the updates in.
            the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response.
            will contain explicit error information for this particular update..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#bulk-update-team-members)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BulkUpdateTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.BulkUpdateTeamMembersAsync(Square.Models.BulkUpdateTeamMembersRequest,System.Threading.CancellationToken)">
            <summary>
            Updates multiple `TeamMember` objects. The updated `TeamMember` objects will be returned on successful updates..
            This process is non-transactional and will process as much of the request as is possible. If one of the updates in.
            the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response.
            will contain explicit error information for this particular update..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#bulk-update-team-members)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BulkUpdateTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.SearchTeamMembers(Square.Models.SearchTeamMembersRequest)">
            <summary>
            Returns a paginated list of `TeamMember` objects for a business..
            The list to be returned can be filtered by:.
            - location IDs **and**.
            - `status`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.SearchTeamMembersAsync(Square.Models.SearchTeamMembersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of `TeamMember` objects for a business..
            The list to be returned can be filtered by:.
            - location IDs **and**.
            - `status`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.RetrieveTeamMember(System.String)">
            <summary>
            Retrieve a `TeamMember` object for the given `TeamMember.id`..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#retrieve-a-team-member)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve..</param>
            <returns>Returns the Models.RetrieveTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.RetrieveTeamMemberAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a `TeamMember` object for the given `TeamMember.id`..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#retrieve-a-team-member)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.UpdateTeamMember(System.String,Square.Models.UpdateTeamMemberRequest)">
            <summary>
            Updates a single `TeamMember` object. The `TeamMember` will be returned on successful updates..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#update-a-team-member)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.UpdateTeamMemberAsync(System.String,Square.Models.UpdateTeamMemberRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a single `TeamMember` object. The `TeamMember` will be returned on successful updates..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#update-a-team-member)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.RetrieveWageSetting(System.String)">
            <summary>
            Retrieve a `WageSetting` object for a team member specified.
            by `TeamMember.id`..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#retrievewagesetting)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve wage setting for.</param>
            <returns>Returns the Models.RetrieveWageSettingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.RetrieveWageSettingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a `WageSetting` object for a team member specified.
            by `TeamMember.id`..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#retrievewagesetting)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve wage setting for.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveWageSettingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.UpdateWageSetting(System.String,Square.Models.UpdateWageSettingRequest)">
            <summary>
            Creates or updates a `WageSetting` object. The object is created if a.
            `WageSetting` with the specified `team_member_id` does not exist. Otherwise,.
            it fully replaces the `WageSetting` object for the team member..
            The `WageSetting` will be returned upon successful update..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#create-or-update-a-wage-setting)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to update the `WageSetting` object for..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateWageSettingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITeamApi.UpdateWageSettingAsync(System.String,Square.Models.UpdateWageSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a `WageSetting` object. The object is created if a.
            `WageSetting` with the specified `team_member_id` does not exist. Otherwise,.
            it fully replaces the `WageSetting` object for the team member..
            The `WageSetting` will be returned upon successful update..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#create-or-update-a-wage-setting)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to update the `WageSetting` object for..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateWageSettingResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ITerminalApi">
            <summary>
            ITerminalApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ITerminalApi.CreateTerminalCheckout(Square.Models.CreateTerminalCheckoutRequest)">
            <summary>
            Creates a Terminal checkout request and sends it to the specified device to take a payment.
            for the requested amount..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.CreateTerminalCheckoutAsync(Square.Models.CreateTerminalCheckoutRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a Terminal checkout request and sends it to the specified device to take a payment.
            for the requested amount..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.SearchTerminalCheckouts(Square.Models.SearchTerminalCheckoutsRequest)">
            <summary>
            Retrieves a filtered list of Terminal checkout requests created by the account making the request..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchTerminalCheckoutsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.SearchTerminalCheckoutsAsync(Square.Models.SearchTerminalCheckoutsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a filtered list of Terminal checkout requests created by the account making the request..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchTerminalCheckoutsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.GetTerminalCheckout(System.String)">
            <summary>
            Retrieves a Terminal checkout request by `checkout_id`..
            </summary>
            <param name="checkoutId">Required parameter: The unique ID for the desired `TerminalCheckout`..</param>
            <returns>Returns the Models.GetTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.GetTerminalCheckoutAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a Terminal checkout request by `checkout_id`..
            </summary>
            <param name="checkoutId">Required parameter: The unique ID for the desired `TerminalCheckout`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.CancelTerminalCheckout(System.String)">
            <summary>
            Cancels a Terminal checkout request if the status of the request permits it..
            </summary>
            <param name="checkoutId">Required parameter: The unique ID for the desired `TerminalCheckout`..</param>
            <returns>Returns the Models.CancelTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.CancelTerminalCheckoutAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a Terminal checkout request if the status of the request permits it..
            </summary>
            <param name="checkoutId">Required parameter: The unique ID for the desired `TerminalCheckout`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.CreateTerminalRefund(Square.Models.CreateTerminalRefundRequest)">
            <summary>
            Creates a request to refund an Interac payment completed on a Square Terminal..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.CreateTerminalRefundAsync(Square.Models.CreateTerminalRefundRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a request to refund an Interac payment completed on a Square Terminal..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.SearchTerminalRefunds(Square.Models.SearchTerminalRefundsRequest)">
            <summary>
            Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchTerminalRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.SearchTerminalRefundsAsync(Square.Models.SearchTerminalRefundsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchTerminalRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.GetTerminalRefund(System.String)">
            <summary>
            Retrieves an Interac Terminal refund object by ID..
            </summary>
            <param name="terminalRefundId">Required parameter: The unique ID for the desired `TerminalRefund`..</param>
            <returns>Returns the Models.GetTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.GetTerminalRefundAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an Interac Terminal refund object by ID..
            </summary>
            <param name="terminalRefundId">Required parameter: The unique ID for the desired `TerminalRefund`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.CancelTerminalRefund(System.String)">
            <summary>
            Cancels an Interac Terminal refund request by refund request ID if the status of the request permits it..
            </summary>
            <param name="terminalRefundId">Required parameter: The unique ID for the desired `TerminalRefund`..</param>
            <returns>Returns the Models.CancelTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITerminalApi.CancelTerminalRefundAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels an Interac Terminal refund request by refund request ID if the status of the request permits it..
            </summary>
            <param name="terminalRefundId">Required parameter: The unique ID for the desired `TerminalRefund`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.ITransactionsApi">
            <summary>
            ITransactionsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.ListRefunds(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Lists refunds for one of a business's locations..
            In addition to full or partial tender refunds processed through Square APIs,.
            refunds may result from itemized returns or exchanges through Square's.
            Point of Sale applications..
            Refunds with a `status` of `PENDING` are not currently included in this.
            endpoint's response..
            Max results per [page](https://developer.squareup.com/docs/working-with-apis/pagination): 50.
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list refunds for..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed in the response (`ASC` for oldest first, `DESC` for newest first).  Default value: `DESC`.</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <returns>Returns the Models.ListRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.ListRefundsAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists refunds for one of a business's locations..
            In addition to full or partial tender refunds processed through Square APIs,.
            refunds may result from itemized returns or exchanges through Square's.
            Point of Sale applications..
            Refunds with a `status` of `PENDING` are not currently included in this.
            endpoint's response..
            Max results per [page](https://developer.squareup.com/docs/working-with-apis/pagination): 50.
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list refunds for..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed in the response (`ASC` for oldest first, `DESC` for newest first).  Default value: `DESC`.</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.ListTransactions(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Lists transactions for a particular location..
            Transactions include payment information from sales and exchanges and refund.
            information from returns and exchanges..
            Max results per [page](https://developer.squareup.com/docs/working-with-apis/pagination): 50.
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list transactions for..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed in the response (`ASC` for oldest first, `DESC` for newest first).  Default value: `DESC`.</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <returns>Returns the Models.ListTransactionsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.ListTransactionsAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists transactions for a particular location..
            Transactions include payment information from sales and exchanges and refund.
            information from returns and exchanges..
            Max results per [page](https://developer.squareup.com/docs/working-with-apis/pagination): 50.
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list transactions for..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed in the response (`ASC` for oldest first, `DESC` for newest first).  Default value: `DESC`.</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListTransactionsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.Charge(System.String,Square.Models.ChargeRequest)">
            <summary>
            Charges a card represented by a card nonce or a customer's card on file..
            Your request to this endpoint must include _either_:.
            - A value for the `card_nonce` parameter (to charge a card nonce generated.
            with the `SqPaymentForm`).
            - Values for the `customer_card_id` and `customer_id` parameters (to charge.
            a customer's card on file).
            In order for an eCommerce payment to potentially qualify for.
            [Square chargeback protection](https://squareup.com/help/article/5394), you.
            _must_ provide values for the following parameters in your request:.
            - `buyer_email_address`.
            - At least one of `billing_address` or `shipping_address`.
            When this response is returned, the amount of Square's processing fee might not yet be.
            calculated. To obtain the processing fee, wait about ten seconds and call.
            [RetrieveTransaction]($e/Transactions/RetrieveTransaction). See the `processing_fee_money`.
            field of each [Tender included]($m/Tender) in the transaction..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to associate the created transaction with..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.ChargeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.ChargeAsync(System.String,Square.Models.ChargeRequest,System.Threading.CancellationToken)">
            <summary>
            Charges a card represented by a card nonce or a customer's card on file..
            Your request to this endpoint must include _either_:.
            - A value for the `card_nonce` parameter (to charge a card nonce generated.
            with the `SqPaymentForm`).
            - Values for the `customer_card_id` and `customer_id` parameters (to charge.
            a customer's card on file).
            In order for an eCommerce payment to potentially qualify for.
            [Square chargeback protection](https://squareup.com/help/article/5394), you.
            _must_ provide values for the following parameters in your request:.
            - `buyer_email_address`.
            - At least one of `billing_address` or `shipping_address`.
            When this response is returned, the amount of Square's processing fee might not yet be.
            calculated. To obtain the processing fee, wait about ten seconds and call.
            [RetrieveTransaction]($e/Transactions/RetrieveTransaction). See the `processing_fee_money`.
            field of each [Tender included]($m/Tender) in the transaction..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to associate the created transaction with..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ChargeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.RetrieveTransaction(System.String,System.String)">
            <summary>
            Retrieves details for a single transaction..
            </summary>
            <param name="locationId">Required parameter: The ID of the transaction's associated location..</param>
            <param name="transactionId">Required parameter: The ID of the transaction to retrieve..</param>
            <returns>Returns the Models.RetrieveTransactionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.RetrieveTransactionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves details for a single transaction..
            </summary>
            <param name="locationId">Required parameter: The ID of the transaction's associated location..</param>
            <param name="transactionId">Required parameter: The ID of the transaction to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveTransactionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.CaptureTransaction(System.String,System.String)">
            <summary>
            Captures a transaction that was created with the [Charge]($e/Transactions/Charge).
            endpoint with a `delay_capture` value of `true`..
            See [Delayed capture transactions](https://developer.squareup.com/docs/payments/transactions/overview#delayed-capture).
            for more information..
            </summary>
            <param name="locationId">Required parameter: Example: .</param>
            <param name="transactionId">Required parameter: Example: .</param>
            <returns>Returns the Models.CaptureTransactionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.CaptureTransactionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Captures a transaction that was created with the [Charge]($e/Transactions/Charge).
            endpoint with a `delay_capture` value of `true`..
            See [Delayed capture transactions](https://developer.squareup.com/docs/payments/transactions/overview#delayed-capture).
            for more information..
            </summary>
            <param name="locationId">Required parameter: Example: .</param>
            <param name="transactionId">Required parameter: Example: .</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CaptureTransactionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.CreateRefund(System.String,System.String,Square.Models.CreateRefundRequest)">
            <summary>
            Initiates a refund for a previously charged tender..
            You must issue a refund within 120 days of the associated payment. See.
            [this article](https://squareup.com/help/us/en/article/5060) for more information.
            on refund behavior..
            NOTE: Card-present transactions with Interac credit cards **cannot be.
            refunded using the Connect API**. Interac transactions must refunded.
            in-person (e.g., dipping the card using POS app)..
            </summary>
            <param name="locationId">Required parameter: The ID of the original transaction's associated location..</param>
            <param name="transactionId">Required parameter: The ID of the original transaction that includes the tender to refund..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.CreateRefundAsync(System.String,System.String,Square.Models.CreateRefundRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates a refund for a previously charged tender..
            You must issue a refund within 120 days of the associated payment. See.
            [this article](https://squareup.com/help/us/en/article/5060) for more information.
            on refund behavior..
            NOTE: Card-present transactions with Interac credit cards **cannot be.
            refunded using the Connect API**. Interac transactions must refunded.
            in-person (e.g., dipping the card using POS app)..
            </summary>
            <param name="locationId">Required parameter: The ID of the original transaction's associated location..</param>
            <param name="transactionId">Required parameter: The ID of the original transaction that includes the tender to refund..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.VoidTransaction(System.String,System.String)">
            <summary>
            Cancels a transaction that was created with the [Charge]($e/Transactions/Charge).
            endpoint with a `delay_capture` value of `true`..
            See [Delayed capture transactions](https://developer.squareup.com/docs/payments/transactions/overview#delayed-capture).
            for more information..
            </summary>
            <param name="locationId">Required parameter: Example: .</param>
            <param name="transactionId">Required parameter: Example: .</param>
            <returns>Returns the Models.VoidTransactionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.ITransactionsApi.VoidTransactionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a transaction that was created with the [Charge]($e/Transactions/Charge).
            endpoint with a `delay_capture` value of `true`..
            See [Delayed capture transactions](https://developer.squareup.com/docs/payments/transactions/overview#delayed-capture).
            for more information..
            </summary>
            <param name="locationId">Required parameter: Example: .</param>
            <param name="transactionId">Required parameter: Example: .</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.VoidTransactionResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IV1EmployeesApi">
            <summary>
            IV1EmployeesApi.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1EmployeesApi.ListEmployees(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1EmployeesApi.ListEmployeesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" -->
        <member name="M:Square.Apis.IV1EmployeesApi.CreateEmployee(Square.Models.V1Employee)">
            <summary>
             Use the CreateEmployee endpoint to add an employee to a Square.
            account. Employees created with the Connect API have an initial status.
            of `INACTIVE`. Inactive employees cannot sign in to Square Point of Sale.
            until they are activated from the Square Dashboard. Employee status.
            cannot be changed with the Connect API..
            Employee entities cannot be deleted. To disable employee profiles,.
            set the employee's status to <code>INACTIVE</code>.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1EmployeesApi.CreateEmployeeAsync(Square.Models.V1Employee,System.Threading.CancellationToken)">
            <summary>
             Use the CreateEmployee endpoint to add an employee to a Square.
            account. Employees created with the Connect API have an initial status.
            of `INACTIVE`. Inactive employees cannot sign in to Square Point of Sale.
            until they are activated from the Square Dashboard. Employee status.
            cannot be changed with the Connect API..
            Employee entities cannot be deleted. To disable employee profiles,.
            set the employee's status to <code>INACTIVE</code>.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1EmployeesApi.RetrieveEmployee(System.String)">
            <summary>
            Provides the details for a single employee..
            </summary>
            <param name="employeeId">Required parameter: The employee's ID..</param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1EmployeesApi.RetrieveEmployeeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Provides the details for a single employee..
            </summary>
            <param name="employeeId">Required parameter: The employee's ID..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1EmployeesApi.UpdateEmployee(System.String,Square.Models.V1Employee)">
            <summary>
            UpdateEmployee.
            </summary>
            <param name="employeeId">Required parameter: The ID of the role to modify..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1EmployeesApi.UpdateEmployeeAsync(System.String,Square.Models.V1Employee,System.Threading.CancellationToken)">
            <summary>
            UpdateEmployee.
            </summary>
            <param name="employeeId">Required parameter: The ID of the role to modify..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1EmployeesApi.ListEmployeeRoles(System.String,System.Nullable{System.Int32},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1EmployeesApi.ListEmployeeRolesAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" -->
        <member name="M:Square.Apis.IV1EmployeesApi.CreateEmployeeRole(Square.Models.V1EmployeeRole)">
            <summary>
            Creates an employee role you can then assign to employees..
            Square accounts can include any number of roles that can be assigned to.
            employees. These roles define the actions and permissions granted to an.
            employee with that role. For example, an employee with a "Shift Manager".
            role might be able to issue refunds in Square Point of Sale, whereas an.
            employee with a "Clerk" role might not..
            Roles are assigned with the [V1UpdateEmployee]($e/V1Employees/UpdateEmployeeRole).
            endpoint. An employee can have only one role at a time..
            If an employee has no role, they have none of the permissions associated.
            with roles. All employees can accept payments with Square Point of Sale..
            </summary>
            <param name="body">Required parameter: An EmployeeRole object with a name and permissions, and an optional owner flag..</param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1EmployeesApi.CreateEmployeeRoleAsync(Square.Models.V1EmployeeRole,System.Threading.CancellationToken)">
            <summary>
            Creates an employee role you can then assign to employees..
            Square accounts can include any number of roles that can be assigned to.
            employees. These roles define the actions and permissions granted to an.
            employee with that role. For example, an employee with a "Shift Manager".
            role might be able to issue refunds in Square Point of Sale, whereas an.
            employee with a "Clerk" role might not..
            Roles are assigned with the [V1UpdateEmployee]($e/V1Employees/UpdateEmployeeRole).
            endpoint. An employee can have only one role at a time..
            If an employee has no role, they have none of the permissions associated.
            with roles. All employees can accept payments with Square Point of Sale..
            </summary>
            <param name="body">Required parameter: An EmployeeRole object with a name and permissions, and an optional owner flag..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1EmployeesApi.RetrieveEmployeeRole(System.String)">
            <summary>
            Provides the details for a single employee role..
            </summary>
            <param name="roleId">Required parameter: The role's ID..</param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1EmployeesApi.RetrieveEmployeeRoleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Provides the details for a single employee role..
            </summary>
            <param name="roleId">Required parameter: The role's ID..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1EmployeesApi.UpdateEmployeeRole(System.String,Square.Models.V1EmployeeRole)">
            <summary>
            Modifies the details of an employee role..
            </summary>
            <param name="roleId">Required parameter: The ID of the role to modify..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1EmployeesApi.UpdateEmployeeRoleAsync(System.String,Square.Models.V1EmployeeRole,System.Threading.CancellationToken)">
            <summary>
            Modifies the details of an employee role..
            </summary>
            <param name="roleId">Required parameter: The ID of the role to modify..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.IV1TransactionsApi">
            <summary>
            IV1TransactionsApi.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1TransactionsApi.ListOrders(System.String,System.String,System.Nullable{System.Int32},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1TransactionsApi.ListOrdersAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" -->
        <member name="M:Square.Apis.IV1TransactionsApi.RetrieveOrder(System.String,System.String)">
            <summary>
            Provides comprehensive information for a single online store order, including the order's history..
            </summary>
            <param name="locationId">Required parameter: The ID of the order's associated location..</param>
            <param name="orderId">Required parameter: The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint.</param>
            <returns>Returns the Models.V1Order response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1TransactionsApi.RetrieveOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Provides comprehensive information for a single online store order, including the order's history..
            </summary>
            <param name="locationId">Required parameter: The ID of the order's associated location..</param>
            <param name="orderId">Required parameter: The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Order response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1TransactionsApi.UpdateOrder(System.String,System.String,Square.Models.V1UpdateOrderRequest)">
            <summary>
            Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:.
            </summary>
            <param name="locationId">Required parameter: The ID of the order's associated location..</param>
            <param name="orderId">Required parameter: The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint.</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.V1Order response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1TransactionsApi.UpdateOrderAsync(System.String,System.String,Square.Models.V1UpdateOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:.
            </summary>
            <param name="locationId">Required parameter: The ID of the order's associated location..</param>
            <param name="orderId">Required parameter: The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint.</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Order response from the API call.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1TransactionsApi.ListPayments(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})" -->
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1TransactionsApi.ListPaymentsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" -->
        <member name="M:Square.Apis.IV1TransactionsApi.RetrievePayment(System.String,System.String)">
            <summary>
            Provides comprehensive information for a single payment..
            </summary>
            <param name="locationId">Required parameter: The ID of the payment's associated location..</param>
            <param name="paymentId">Required parameter: The Square-issued payment ID. payment_id comes from Payment objects returned by the List Payments endpoint, Settlement objects returned by the List Settlements endpoint, or Refund objects returned by the List Refunds endpoint..</param>
            <returns>Returns the Models.V1Payment response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1TransactionsApi.RetrievePaymentAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Provides comprehensive information for a single payment..
            </summary>
            <param name="locationId">Required parameter: The ID of the payment's associated location..</param>
            <param name="paymentId">Required parameter: The Square-issued payment ID. payment_id comes from Payment objects returned by the List Payments endpoint, Settlement objects returned by the List Settlements endpoint, or Refund objects returned by the List Refunds endpoint..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Payment response from the API call.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1TransactionsApi.ListRefunds(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1TransactionsApi.ListRefundsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" -->
        <member name="M:Square.Apis.IV1TransactionsApi.CreateRefund(System.String,Square.Models.V1CreateRefundRequest)">
            <summary>
            Issues a refund for a previously processed payment. You must issue.
            a refund within 60 days of the associated payment..
            You cannot issue a partial refund for a split tender payment. You must.
            instead issue a full or partial refund for a particular tender, by.
            providing the applicable tender id to the V1CreateRefund endpoint..
            Issuing a full refund for a split tender payment refunds all tenders.
            associated with the payment..
            Issuing a refund for a card payment is not reversible. For development.
            purposes, you can create fake cash payments in Square Point of Sale and.
            refund them..
            </summary>
            <param name="locationId">Required parameter: The ID of the original payment's associated location..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.V1Refund response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1TransactionsApi.CreateRefundAsync(System.String,Square.Models.V1CreateRefundRequest,System.Threading.CancellationToken)">
            <summary>
            Issues a refund for a previously processed payment. You must issue.
            a refund within 60 days of the associated payment..
            You cannot issue a partial refund for a split tender payment. You must.
            instead issue a full or partial refund for a particular tender, by.
            providing the applicable tender id to the V1CreateRefund endpoint..
            Issuing a full refund for a split tender payment refunds all tenders.
            associated with the payment..
            Issuing a refund for a card payment is not reversible. For development.
            purposes, you can create fake cash payments in Square Point of Sale and.
            refund them..
            </summary>
            <param name="locationId">Required parameter: The ID of the original payment's associated location..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Refund response from the API call.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1TransactionsApi.ListSettlements(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Square.Apis.IV1TransactionsApi.ListSettlementsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)" -->
        <member name="M:Square.Apis.IV1TransactionsApi.RetrieveSettlement(System.String,System.String)">
            <summary>
            Provides comprehensive information for a single settlement..
            The returned `Settlement` objects include an `entries` field that lists.
            the transactions that contribute to the settlement total. Most.
            settlement entries correspond to a payment payout, but settlement.
            entries are also generated for less common events, like refunds, manual.
            adjustments, or chargeback holds..
            Square initiates its regular deposits as indicated in the.
            [Deposit Options with Square](https://squareup.com/help/us/en/article/3807).
            help article. Details for a regular deposit are usually not available.
            from Connect API endpoints before 10 p.m. PST the same day..
            Square does not know when an initiated settlement **completes**, only.
            whether it has failed. A completed settlement is typically reflected in.
            a bank account within 3 business days, but in exceptional cases it may.
            take longer..
            </summary>
            <param name="locationId">Required parameter: The ID of the settlements's associated location..</param>
            <param name="settlementId">Required parameter: The settlement's Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint..</param>
            <returns>Returns the Models.V1Settlement response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.IV1TransactionsApi.RetrieveSettlementAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Provides comprehensive information for a single settlement..
            The returned `Settlement` objects include an `entries` field that lists.
            the transactions that contribute to the settlement total. Most.
            settlement entries correspond to a payment payout, but settlement.
            entries are also generated for less common events, like refunds, manual.
            adjustments, or chargeback holds..
            Square initiates its regular deposits as indicated in the.
            [Deposit Options with Square](https://squareup.com/help/us/en/article/3807).
            help article. Details for a regular deposit are usually not available.
            from Connect API endpoints before 10 p.m. PST the same day..
            Square does not know when an initiated settlement **completes**, only.
            whether it has failed. A completed settlement is typically reflected in.
            a bank account within 3 business days, but in exceptional cases it may.
            take longer..
            </summary>
            <param name="locationId">Required parameter: The ID of the settlements's associated location..</param>
            <param name="settlementId">Required parameter: The settlement's Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Settlement response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.LaborApi">
            <summary>
            LaborApi.
            </summary>
        </member>
        <member name="M:Square.Apis.LaborApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.LaborApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.LaborApi.ListBreakTypes(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a paginated list of `BreakType` instances for a business..
            </summary>
            <param name="locationId">Optional parameter: Filter Break Types returned to only those that are associated with the specified location..</param>
            <param name="limit">Optional parameter: Maximum number of Break Types to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Break Type results to fetch..</param>
            <returns>Returns the Models.ListBreakTypesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.ListBreakTypesAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of `BreakType` instances for a business..
            </summary>
            <param name="locationId">Optional parameter: Filter Break Types returned to only those that are associated with the specified location..</param>
            <param name="limit">Optional parameter: Maximum number of Break Types to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Break Type results to fetch..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListBreakTypesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.CreateBreakType(Square.Models.CreateBreakTypeRequest)">
            <summary>
            Creates a new `BreakType`..
            A `BreakType` is a template for creating `Break` objects..
            You must provide the following values in your request to this.
            endpoint:.
            - `location_id`.
            - `break_name`.
            - `expected_duration`.
            - `is_paid`.
            You can only have 3 `BreakType` instances per location. If you attempt to add a 4th.
            `BreakType` for a location, an `INVALID_REQUEST_ERROR` "Exceeded limit of 3 breaks per location.".
            is returned..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.CreateBreakTypeAsync(Square.Models.CreateBreakTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new `BreakType`..
            A `BreakType` is a template for creating `Break` objects..
            You must provide the following values in your request to this.
            endpoint:.
            - `location_id`.
            - `break_name`.
            - `expected_duration`.
            - `is_paid`.
            You can only have 3 `BreakType` instances per location. If you attempt to add a 4th.
            `BreakType` for a location, an `INVALID_REQUEST_ERROR` "Exceeded limit of 3 breaks per location.".
            is returned..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.DeleteBreakType(System.String)">
            <summary>
            Deletes an existing `BreakType`..
            A `BreakType` can be deleted even if it is referenced from a `Shift`..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being deleted..</param>
            <returns>Returns the Models.DeleteBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.DeleteBreakTypeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an existing `BreakType`..
            A `BreakType` can be deleted even if it is referenced from a `Shift`..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being deleted..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.GetBreakType(System.String)">
            <summary>
            Returns a single `BreakType` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being retrieved..</param>
            <returns>Returns the Models.GetBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.GetBreakTypeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a single `BreakType` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being retrieved..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.UpdateBreakType(System.String,Square.Models.UpdateBreakTypeRequest)">
            <summary>
            Updates an existing `BreakType`..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.UpdateBreakTypeAsync(System.String,Square.Models.UpdateBreakTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing `BreakType`..
            </summary>
            <param name="id">Required parameter: UUID for the `BreakType` being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateBreakTypeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.ListEmployeeWages(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a paginated list of `EmployeeWage` instances for a business..
            </summary>
            <param name="employeeId">Optional parameter: Filter wages returned to only those that are associated with the specified employee..</param>
            <param name="limit">Optional parameter: Maximum number of Employee Wages to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Employee Wage results to fetch..</param>
            <returns>Returns the Models.ListEmployeeWagesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.ListEmployeeWagesAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of `EmployeeWage` instances for a business..
            </summary>
            <param name="employeeId">Optional parameter: Filter wages returned to only those that are associated with the specified employee..</param>
            <param name="limit">Optional parameter: Maximum number of Employee Wages to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Employee Wage results to fetch..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListEmployeeWagesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.GetEmployeeWage(System.String)">
            <summary>
            Returns a single `EmployeeWage` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `EmployeeWage` being retrieved..</param>
            <returns>Returns the Models.GetEmployeeWageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.GetEmployeeWageAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a single `EmployeeWage` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `EmployeeWage` being retrieved..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetEmployeeWageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.CreateShift(Square.Models.CreateShiftRequest)">
            <summary>
            Creates a new `Shift`..
            A `Shift` represents a complete work day for a single employee..
            You must provide the following values in your request to this.
            endpoint:.
            - `location_id`.
            - `employee_id`.
            - `start_at`.
            An attempt to create a new `Shift` can result in a `BAD_REQUEST` error when:.
            - The `status` of the new `Shift` is `OPEN` and the employee has another.
            shift with an `OPEN` status..
            - The `start_at` date is in the future.
            - the `start_at` or `end_at` overlaps another shift for the same employee.
            - If `Break`s are set in the request, a break `start_at`.
            must not be before the `Shift.start_at`. A break `end_at` must not be after.
            the `Shift.end_at`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.CreateShiftAsync(Square.Models.CreateShiftRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new `Shift`..
            A `Shift` represents a complete work day for a single employee..
            You must provide the following values in your request to this.
            endpoint:.
            - `location_id`.
            - `employee_id`.
            - `start_at`.
            An attempt to create a new `Shift` can result in a `BAD_REQUEST` error when:.
            - The `status` of the new `Shift` is `OPEN` and the employee has another.
            shift with an `OPEN` status..
            - The `start_at` date is in the future.
            - the `start_at` or `end_at` overlaps another shift for the same employee.
            - If `Break`s are set in the request, a break `start_at`.
            must not be before the `Shift.start_at`. A break `end_at` must not be after.
            the `Shift.end_at`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.SearchShifts(Square.Models.SearchShiftsRequest)">
            <summary>
            Returns a paginated list of `Shift` records for a business..
            The list to be returned can be filtered by:.
            - Location IDs **and**.
            - employee IDs **and**.
            - shift status (`OPEN`, `CLOSED`) **and**.
            - shift start **and**.
            - shift end **and**.
            - work day details.
            The list can be sorted by:.
            - `start_at`.
            - `end_at`.
            - `created_at`.
            - `updated_at`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchShiftsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.SearchShiftsAsync(Square.Models.SearchShiftsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of `Shift` records for a business..
            The list to be returned can be filtered by:.
            - Location IDs **and**.
            - employee IDs **and**.
            - shift status (`OPEN`, `CLOSED`) **and**.
            - shift start **and**.
            - shift end **and**.
            - work day details.
            The list can be sorted by:.
            - `start_at`.
            - `end_at`.
            - `created_at`.
            - `updated_at`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchShiftsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.DeleteShift(System.String)">
            <summary>
            Deletes a `Shift`..
            </summary>
            <param name="id">Required parameter: UUID for the `Shift` being deleted..</param>
            <returns>Returns the Models.DeleteShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.DeleteShiftAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a `Shift`..
            </summary>
            <param name="id">Required parameter: UUID for the `Shift` being deleted..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.GetShift(System.String)">
            <summary>
            Returns a single `Shift` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `Shift` being retrieved..</param>
            <returns>Returns the Models.GetShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.GetShiftAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a single `Shift` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `Shift` being retrieved..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.UpdateShift(System.String,Square.Models.UpdateShiftRequest)">
            <summary>
            Updates an existing `Shift`..
            When adding a `Break` to a `Shift`, any earlier `Breaks` in the `Shift` have.
            the `end_at` property set to a valid RFC-3339 datetime string..
            When closing a `Shift`, all `Break` instances in the shift must be complete with `end_at`.
            set on each `Break`..
            </summary>
            <param name="id">Required parameter: ID of the object being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.UpdateShiftAsync(System.String,Square.Models.UpdateShiftRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing `Shift`..
            When adding a `Break` to a `Shift`, any earlier `Breaks` in the `Shift` have.
            the `end_at` property set to a valid RFC-3339 datetime string..
            When closing a `Shift`, all `Break` instances in the shift must be complete with `end_at`.
            set on each `Break`..
            </summary>
            <param name="id">Required parameter: ID of the object being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateShiftResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.ListTeamMemberWages(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a paginated list of `TeamMemberWage` instances for a business..
            </summary>
            <param name="teamMemberId">Optional parameter: Filter wages returned to only those that are associated with the specified team member..</param>
            <param name="limit">Optional parameter: Maximum number of Team Member Wages to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Employee Wage results to fetch..</param>
            <returns>Returns the Models.ListTeamMemberWagesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.ListTeamMemberWagesAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of `TeamMemberWage` instances for a business..
            </summary>
            <param name="teamMemberId">Optional parameter: Filter wages returned to only those that are associated with the specified team member..</param>
            <param name="limit">Optional parameter: Maximum number of Team Member Wages to return per page. Can range between 1 and 200. The default is the maximum at 200..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Employee Wage results to fetch..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListTeamMemberWagesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.GetTeamMemberWage(System.String)">
            <summary>
            Returns a single `TeamMemberWage` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `TeamMemberWage` being retrieved..</param>
            <returns>Returns the Models.GetTeamMemberWageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.GetTeamMemberWageAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a single `TeamMemberWage` specified by id..
            </summary>
            <param name="id">Required parameter: UUID for the `TeamMemberWage` being retrieved..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetTeamMemberWageResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.ListWorkweekConfigs(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a list of `WorkweekConfig` instances for a business..
            </summary>
            <param name="limit">Optional parameter: Maximum number of Workweek Configs to return per page..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Workweek Config results to fetch..</param>
            <returns>Returns the Models.ListWorkweekConfigsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.ListWorkweekConfigsAsync(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of `WorkweekConfig` instances for a business..
            </summary>
            <param name="limit">Optional parameter: Maximum number of Workweek Configs to return per page..</param>
            <param name="cursor">Optional parameter: Pointer to the next page of Workweek Config results to fetch..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListWorkweekConfigsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.UpdateWorkweekConfig(System.String,Square.Models.UpdateWorkweekConfigRequest)">
            <summary>
            Updates a `WorkweekConfig`..
            </summary>
            <param name="id">Required parameter: UUID for the `WorkweekConfig` object being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateWorkweekConfigResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LaborApi.UpdateWorkweekConfigAsync(System.String,Square.Models.UpdateWorkweekConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a `WorkweekConfig`..
            </summary>
            <param name="id">Required parameter: UUID for the `WorkweekConfig` object being updated..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateWorkweekConfigResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.LocationsApi">
            <summary>
            LocationsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.LocationsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.LocationsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.LocationsApi.ListLocations">
            <summary>
            Provides information of all locations of a business..
            Many Square API endpoints require a `location_id` parameter..
            The `id` field of the [`Location`]($m/Location) objects returned by this.
            endpoint correspond to that `location_id` parameter..
            </summary>
            <returns>Returns the Models.ListLocationsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LocationsApi.ListLocationsAsync(System.Threading.CancellationToken)">
            <summary>
            Provides information of all locations of a business..
            Many Square API endpoints require a `location_id` parameter..
            The `id` field of the [`Location`]($m/Location) objects returned by this.
            endpoint correspond to that `location_id` parameter..
            </summary>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListLocationsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LocationsApi.CreateLocation(Square.Models.CreateLocationRequest)">
            <summary>
            Creates a location..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateLocationResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LocationsApi.CreateLocationAsync(Square.Models.CreateLocationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a location..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateLocationResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LocationsApi.RetrieveLocation(System.String)">
            <summary>
            Retrieves details of a location. You can specify "main" .
            as the location ID to retrieve details of the .
            main location..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to retrieve. If you specify the string "main", then the endpoint returns the main location..</param>
            <returns>Returns the Models.RetrieveLocationResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LocationsApi.RetrieveLocationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves details of a location. You can specify "main" .
            as the location ID to retrieve details of the .
            main location..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to retrieve. If you specify the string "main", then the endpoint returns the main location..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveLocationResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LocationsApi.UpdateLocation(System.String,Square.Models.UpdateLocationRequest)">
            <summary>
            Updates a location..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateLocationResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LocationsApi.UpdateLocationAsync(System.String,Square.Models.UpdateLocationRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a location..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateLocationResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.LoyaltyApi">
            <summary>
            LoyaltyApi.
            </summary>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.LoyaltyApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.CreateLoyaltyAccount(Square.Models.CreateLoyaltyAccountRequest)">
            <summary>
            Creates a loyalty account. To create a loyalty account, you must provide the `program_id` and a `mapping` with the `phone_number` of the buyer..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateLoyaltyAccountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.CreateLoyaltyAccountAsync(Square.Models.CreateLoyaltyAccountRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a loyalty account. To create a loyalty account, you must provide the `program_id` and a `mapping` with the `phone_number` of the buyer..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateLoyaltyAccountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.SearchLoyaltyAccounts(Square.Models.SearchLoyaltyAccountsRequest)">
            <summary>
            Searches for loyalty accounts in a loyalty program.  .
            You can search for a loyalty account using the phone number or customer ID associated with the account. To return all loyalty accounts, specify an empty `query` object or omit it entirely.  .
            Search results are sorted by `created_at` in ascending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchLoyaltyAccountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.SearchLoyaltyAccountsAsync(Square.Models.SearchLoyaltyAccountsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for loyalty accounts in a loyalty program.  .
            You can search for a loyalty account using the phone number or customer ID associated with the account. To return all loyalty accounts, specify an empty `query` object or omit it entirely.  .
            Search results are sorted by `created_at` in ascending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchLoyaltyAccountsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.RetrieveLoyaltyAccount(System.String)">
            <summary>
            Retrieves a loyalty account..
            </summary>
            <param name="accountId">Required parameter: The ID of the [loyalty account]($m/LoyaltyAccount) to retrieve..</param>
            <returns>Returns the Models.RetrieveLoyaltyAccountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.RetrieveLoyaltyAccountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a loyalty account..
            </summary>
            <param name="accountId">Required parameter: The ID of the [loyalty account]($m/LoyaltyAccount) to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveLoyaltyAccountResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.AccumulateLoyaltyPoints(System.String,Square.Models.AccumulateLoyaltyPointsRequest)">
            <summary>
            Adds points to a loyalty account..
            - If you are using the Orders API to manage orders, you only provide the `order_id`. .
            The endpoint reads the order to compute points to add to the buyer's account..
            - If you are not using the Orders API to manage orders, .
            you first perform a client-side computation to compute the points.  .
            For spend-based and visit-based programs, you can call .
            [CalculateLoyaltyPoints]($e/Loyalty/CalculateLoyaltyPoints) to compute the points. For more information, .
            see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview). .
            You then provide the points in a request to this endpoint..
            </summary>
            <param name="accountId">Required parameter: The [loyalty account]($m/LoyaltyAccount) ID to which to add the points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.AccumulateLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.AccumulateLoyaltyPointsAsync(System.String,Square.Models.AccumulateLoyaltyPointsRequest,System.Threading.CancellationToken)">
            <summary>
            Adds points to a loyalty account..
            - If you are using the Orders API to manage orders, you only provide the `order_id`. .
            The endpoint reads the order to compute points to add to the buyer's account..
            - If you are not using the Orders API to manage orders, .
            you first perform a client-side computation to compute the points.  .
            For spend-based and visit-based programs, you can call .
            [CalculateLoyaltyPoints]($e/Loyalty/CalculateLoyaltyPoints) to compute the points. For more information, .
            see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview). .
            You then provide the points in a request to this endpoint..
            </summary>
            <param name="accountId">Required parameter: The [loyalty account]($m/LoyaltyAccount) ID to which to add the points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.AccumulateLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.AdjustLoyaltyPoints(System.String,Square.Models.AdjustLoyaltyPointsRequest)">
            <summary>
            Adds points to or subtracts points from a buyer's account. .
            Use this endpoint only when you need to manually adjust points. Otherwise, in your application flow, you call .
            [AccumulateLoyaltyPoints]($e/Loyalty/AccumulateLoyaltyPoints) .
            to add points when a buyer pays for the purchase..
            </summary>
            <param name="accountId">Required parameter: The ID of the [loyalty account]($m/LoyaltyAccount) in which to adjust the points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.AdjustLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.AdjustLoyaltyPointsAsync(System.String,Square.Models.AdjustLoyaltyPointsRequest,System.Threading.CancellationToken)">
            <summary>
            Adds points to or subtracts points from a buyer's account. .
            Use this endpoint only when you need to manually adjust points. Otherwise, in your application flow, you call .
            [AccumulateLoyaltyPoints]($e/Loyalty/AccumulateLoyaltyPoints) .
            to add points when a buyer pays for the purchase..
            </summary>
            <param name="accountId">Required parameter: The ID of the [loyalty account]($m/LoyaltyAccount) in which to adjust the points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.AdjustLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.SearchLoyaltyEvents(Square.Models.SearchLoyaltyEventsRequest)">
            <summary>
            Searches for loyalty events..
            A Square loyalty program maintains a ledger of events that occur during the lifetime of a .
            buyer's loyalty account. Each change in the point balance .
            (for example, points earned, points redeemed, and points expired) is .
            recorded in the ledger. Using this endpoint, you can search the ledger for events..
            Search results are sorted by `created_at` in descending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchLoyaltyEventsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.SearchLoyaltyEventsAsync(Square.Models.SearchLoyaltyEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for loyalty events..
            A Square loyalty program maintains a ledger of events that occur during the lifetime of a .
            buyer's loyalty account. Each change in the point balance .
            (for example, points earned, points redeemed, and points expired) is .
            recorded in the ledger. Using this endpoint, you can search the ledger for events..
            Search results are sorted by `created_at` in descending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchLoyaltyEventsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.ListLoyaltyPrograms">
            <summary>
            Returns a list of loyalty programs in the seller's account..
            Loyalty programs define how buyers can earn points and redeem points for rewards. Square sellers can have only one loyalty program, which is created and managed from the Seller Dashboard. For more information, see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview)..
            Replaced with [RetrieveLoyaltyProgram]($e/Loyalty/RetrieveLoyaltyProgram) when used with the keyword `main`..
            </summary>
            <returns>Returns the Models.ListLoyaltyProgramsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.ListLoyaltyProgramsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns a list of loyalty programs in the seller's account..
            Loyalty programs define how buyers can earn points and redeem points for rewards. Square sellers can have only one loyalty program, which is created and managed from the Seller Dashboard. For more information, see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview)..
            Replaced with [RetrieveLoyaltyProgram]($e/Loyalty/RetrieveLoyaltyProgram) when used with the keyword `main`..
            </summary>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListLoyaltyProgramsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.RetrieveLoyaltyProgram(System.String)">
            <summary>
            Retrieves the loyalty program in a seller's account, specified by the program ID or the keyword `main`. .
            Loyalty programs define how buyers can earn points and redeem points for rewards. Square sellers can have only one loyalty program, which is created and managed from the Seller Dashboard. For more information, see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview)..
            </summary>
            <param name="programId">Required parameter: The ID of the loyalty program or the keyword `main`. Either value can be used to retrieve the single loyalty program that belongs to the seller..</param>
            <returns>Returns the Models.RetrieveLoyaltyProgramResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.RetrieveLoyaltyProgramAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the loyalty program in a seller's account, specified by the program ID or the keyword `main`. .
            Loyalty programs define how buyers can earn points and redeem points for rewards. Square sellers can have only one loyalty program, which is created and managed from the Seller Dashboard. For more information, see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview)..
            </summary>
            <param name="programId">Required parameter: The ID of the loyalty program or the keyword `main`. Either value can be used to retrieve the single loyalty program that belongs to the seller..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveLoyaltyProgramResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.CalculateLoyaltyPoints(System.String,Square.Models.CalculateLoyaltyPointsRequest)">
            <summary>
            Calculates the points a purchase earns..
            - If you are using the Orders API to manage orders, you provide `order_id` in the request. The .
            endpoint calculates the points by reading the order..
            - If you are not using the Orders API to manage orders, you provide the purchase amount in .
            the request for the endpoint to calculate the points..
            An application might call this endpoint to show the points that a buyer can earn with the .
            specific purchase..
            </summary>
            <param name="programId">Required parameter: The [loyalty program]($m/LoyaltyProgram) ID, which defines the rules for accruing points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CalculateLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.CalculateLoyaltyPointsAsync(System.String,Square.Models.CalculateLoyaltyPointsRequest,System.Threading.CancellationToken)">
            <summary>
            Calculates the points a purchase earns..
            - If you are using the Orders API to manage orders, you provide `order_id` in the request. The .
            endpoint calculates the points by reading the order..
            - If you are not using the Orders API to manage orders, you provide the purchase amount in .
            the request for the endpoint to calculate the points..
            An application might call this endpoint to show the points that a buyer can earn with the .
            specific purchase..
            </summary>
            <param name="programId">Required parameter: The [loyalty program]($m/LoyaltyProgram) ID, which defines the rules for accruing points..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CalculateLoyaltyPointsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.CreateLoyaltyReward(Square.Models.CreateLoyaltyRewardRequest)">
            <summary>
            Creates a loyalty reward. In the process, the endpoint does following:.
            - Uses the `reward_tier_id` in the request to determine the number of points .
            to lock for this reward. .
            - If the request includes `order_id`, it adds the reward and related discount to the order. .
            After a reward is created, the points are locked and .
            not available for the buyer to redeem another reward..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.CreateLoyaltyRewardAsync(Square.Models.CreateLoyaltyRewardRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a loyalty reward. In the process, the endpoint does following:.
            - Uses the `reward_tier_id` in the request to determine the number of points .
            to lock for this reward. .
            - If the request includes `order_id`, it adds the reward and related discount to the order. .
            After a reward is created, the points are locked and .
            not available for the buyer to redeem another reward..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.SearchLoyaltyRewards(Square.Models.SearchLoyaltyRewardsRequest)">
            <summary>
            Searches for loyalty rewards in a loyalty account. .
            In the current implementation, the endpoint supports search by the reward `status`..
            If you know a reward ID, use the .
            [RetrieveLoyaltyReward]($e/Loyalty/RetrieveLoyaltyReward) endpoint..
            Search results are sorted by `updated_at` in descending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchLoyaltyRewardsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.SearchLoyaltyRewardsAsync(Square.Models.SearchLoyaltyRewardsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for loyalty rewards in a loyalty account. .
            In the current implementation, the endpoint supports search by the reward `status`..
            If you know a reward ID, use the .
            [RetrieveLoyaltyReward]($e/Loyalty/RetrieveLoyaltyReward) endpoint..
            Search results are sorted by `updated_at` in descending order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchLoyaltyRewardsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.DeleteLoyaltyReward(System.String)">
            <summary>
            Deletes a loyalty reward by doing the following:.
            - Returns the loyalty points back to the loyalty account..
            - If an order ID was specified when the reward was created .
            (see [CreateLoyaltyReward]($e/Loyalty/CreateLoyaltyReward)), .
            it updates the order by removing the reward and related .
            discounts..
            You cannot delete a reward that has reached the terminal state (REDEEMED)..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to delete..</param>
            <returns>Returns the Models.DeleteLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.DeleteLoyaltyRewardAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a loyalty reward by doing the following:.
            - Returns the loyalty points back to the loyalty account..
            - If an order ID was specified when the reward was created .
            (see [CreateLoyaltyReward]($e/Loyalty/CreateLoyaltyReward)), .
            it updates the order by removing the reward and related .
            discounts..
            You cannot delete a reward that has reached the terminal state (REDEEMED)..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to delete..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.RetrieveLoyaltyReward(System.String)">
            <summary>
            Retrieves a loyalty reward..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to retrieve..</param>
            <returns>Returns the Models.RetrieveLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.RetrieveLoyaltyRewardAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a loyalty reward..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.RedeemLoyaltyReward(System.String,Square.Models.RedeemLoyaltyRewardRequest)">
            <summary>
            Redeems a loyalty reward..
            The endpoint sets the reward to the `REDEEMED` terminal state. .
            If you are using your own order processing system (not using the .
            Orders API), you call this endpoint after the buyer paid for the .
            purchase..
            After the reward reaches the terminal state, it cannot be deleted. .
            In other words, points used for the reward cannot be returned .
            to the account..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to redeem..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.RedeemLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.LoyaltyApi.RedeemLoyaltyRewardAsync(System.String,Square.Models.RedeemLoyaltyRewardRequest,System.Threading.CancellationToken)">
            <summary>
            Redeems a loyalty reward..
            The endpoint sets the reward to the `REDEEMED` terminal state. .
            If you are using your own order processing system (not using the .
            Orders API), you call this endpoint after the buyer paid for the .
            purchase..
            After the reward reaches the terminal state, it cannot be deleted. .
            In other words, points used for the reward cannot be returned .
            to the account..
            </summary>
            <param name="rewardId">Required parameter: The ID of the [loyalty reward]($m/LoyaltyReward) to redeem..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RedeemLoyaltyRewardResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.MerchantsApi">
            <summary>
            MerchantsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.MerchantsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.MerchantsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.MerchantsApi.ListMerchants(System.Nullable{System.Int32})">
            <summary>
            Returns `Merchant` information for a given access token..
            If you don't know a `Merchant` ID, you can use this endpoint to retrieve the merchant ID for an access token..
            You can specify your personal access token to get your own merchant information or specify an OAuth token.
            to get the information for the  merchant that granted you access..
            If you know the merchant ID, you can also use the [RetrieveMerchant]($e/Merchants/RetrieveMerchant).
            endpoint to get the merchant information..
            </summary>
            <param name="cursor">Optional parameter: The cursor generated by the previous response..</param>
            <returns>Returns the Models.ListMerchantsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.MerchantsApi.ListMerchantsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Returns `Merchant` information for a given access token..
            If you don't know a `Merchant` ID, you can use this endpoint to retrieve the merchant ID for an access token..
            You can specify your personal access token to get your own merchant information or specify an OAuth token.
            to get the information for the  merchant that granted you access..
            If you know the merchant ID, you can also use the [RetrieveMerchant]($e/Merchants/RetrieveMerchant).
            endpoint to get the merchant information..
            </summary>
            <param name="cursor">Optional parameter: The cursor generated by the previous response..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListMerchantsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.MerchantsApi.RetrieveMerchant(System.String)">
            <summary>
            Retrieve a `Merchant` object for the given `merchant_id`..
            </summary>
            <param name="merchantId">Required parameter: The ID of the merchant to retrieve. If the string "me" is supplied as the ID, then retrieve the merchant that is currently accessible to this call..</param>
            <returns>Returns the Models.RetrieveMerchantResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.MerchantsApi.RetrieveMerchantAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a `Merchant` object for the given `merchant_id`..
            </summary>
            <param name="merchantId">Required parameter: The ID of the merchant to retrieve. If the string "me" is supplied as the ID, then retrieve the merchant that is currently accessible to this call..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveMerchantResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.MobileAuthorizationApi">
            <summary>
            MobileAuthorizationApi.
            </summary>
        </member>
        <member name="M:Square.Apis.MobileAuthorizationApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.MobileAuthorizationApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.MobileAuthorizationApi.CreateMobileAuthorizationCode(Square.Models.CreateMobileAuthorizationCodeRequest)">
            <summary>
            Generates code to authorize a mobile application to connect to a Square card reader.
            Authorization codes are one-time-use and expire __60 minutes__ after being issued..
            __Important:__ The `Authorization` header you provide to this endpoint must have the following format:.
            ```.
            Authorization: Bearer ACCESS_TOKEN.
            ```.
            Replace `ACCESS_TOKEN` with a.
            [valid production authorization credential](https://developer.squareup.com/docs/build-basics/access-tokens)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateMobileAuthorizationCodeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.MobileAuthorizationApi.CreateMobileAuthorizationCodeAsync(Square.Models.CreateMobileAuthorizationCodeRequest,System.Threading.CancellationToken)">
            <summary>
            Generates code to authorize a mobile application to connect to a Square card reader.
            Authorization codes are one-time-use and expire __60 minutes__ after being issued..
            __Important:__ The `Authorization` header you provide to this endpoint must have the following format:.
            ```.
            Authorization: Bearer ACCESS_TOKEN.
            ```.
            Replace `ACCESS_TOKEN` with a.
            [valid production authorization credential](https://developer.squareup.com/docs/build-basics/access-tokens)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateMobileAuthorizationCodeResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.OAuthApi">
            <summary>
            OAuthApi.
            </summary>
        </member>
        <member name="M:Square.Apis.OAuthApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.OAuthApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.OAuthApi.RenewToken(System.String,Square.Models.RenewTokenRequest,System.String)">
            <summary>
            `RenewToken` is deprecated. For information about refreshing OAuth access tokens, see.
            [Renew OAuth Token](https://developer.squareup.com/docs/oauth-api/cookbook/renew-oauth-tokens)..
            Renews an OAuth access token before it expires..
            OAuth access tokens besides your application's personal access token expire after __30 days__..
            You can also renew expired tokens within __15 days__ of their expiration..
            You cannot renew an access token that has been expired for more than 15 days..
            Instead, the associated user must re-complete the OAuth flow from the beginning..
            __Important:__ The `Authorization` header for this endpoint must have the.
            following format:.
            ```.
            Authorization: Client APPLICATION_SECRET.
            ```.
            Replace `APPLICATION_SECRET` with the application secret on the Credentials.
            page in the [application dashboard](https://connect.squareup.com/apps)..
            </summary>
            <param name="clientId">Required parameter: Your application ID, available from the [application dashboard](https://connect.squareup.com/apps)..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="authorization">Required parameter: Client APPLICATION_SECRET.</param>
            <returns>Returns the Models.RenewTokenResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OAuthApi.RenewTokenAsync(System.String,Square.Models.RenewTokenRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            `RenewToken` is deprecated. For information about refreshing OAuth access tokens, see.
            [Renew OAuth Token](https://developer.squareup.com/docs/oauth-api/cookbook/renew-oauth-tokens)..
            Renews an OAuth access token before it expires..
            OAuth access tokens besides your application's personal access token expire after __30 days__..
            You can also renew expired tokens within __15 days__ of their expiration..
            You cannot renew an access token that has been expired for more than 15 days..
            Instead, the associated user must re-complete the OAuth flow from the beginning..
            __Important:__ The `Authorization` header for this endpoint must have the.
            following format:.
            ```.
            Authorization: Client APPLICATION_SECRET.
            ```.
            Replace `APPLICATION_SECRET` with the application secret on the Credentials.
            page in the [application dashboard](https://connect.squareup.com/apps)..
            </summary>
            <param name="clientId">Required parameter: Your application ID, available from the [application dashboard](https://connect.squareup.com/apps)..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="authorization">Required parameter: Client APPLICATION_SECRET.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RenewTokenResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OAuthApi.RevokeToken(Square.Models.RevokeTokenRequest,System.String)">
            <summary>
            Revokes an access token generated with the OAuth flow..
            If an account has more than one OAuth access token for your application, this.
            endpoint revokes all of them, regardless of which token you specify. When an.
            OAuth access token is revoked, all of the active subscriptions associated.
            with that OAuth token are canceled immediately..
            __Important:__ The `Authorization` header for this endpoint must have the.
            following format:.
            ```.
            Authorization: Client APPLICATION_SECRET.
            ```.
            Replace `APPLICATION_SECRET` with the application secret on the Credentials.
            page in the [Developer Dashboard](https://developer.squareup.com/apps)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="authorization">Required parameter: Client APPLICATION_SECRET.</param>
            <returns>Returns the Models.RevokeTokenResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OAuthApi.RevokeTokenAsync(Square.Models.RevokeTokenRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Revokes an access token generated with the OAuth flow..
            If an account has more than one OAuth access token for your application, this.
            endpoint revokes all of them, regardless of which token you specify. When an.
            OAuth access token is revoked, all of the active subscriptions associated.
            with that OAuth token are canceled immediately..
            __Important:__ The `Authorization` header for this endpoint must have the.
            following format:.
            ```.
            Authorization: Client APPLICATION_SECRET.
            ```.
            Replace `APPLICATION_SECRET` with the application secret on the Credentials.
            page in the [Developer Dashboard](https://developer.squareup.com/apps)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="authorization">Required parameter: Client APPLICATION_SECRET.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RevokeTokenResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OAuthApi.ObtainToken(Square.Models.ObtainTokenRequest)">
            <summary>
            Returns an OAuth access token..
            The endpoint supports distinct methods of obtaining OAuth access tokens..
            Applications specify a method by adding the `grant_type` parameter.
            in the request and also provide relevant information..
            __Note:__ Regardless of the method application specified,.
            the endpoint always returns two items; an OAuth access token and.
            a refresh token in the response..
            __OAuth tokens should only live on secure servers. Application clients.
            should never interact directly with OAuth tokens__..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.ObtainTokenResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OAuthApi.ObtainTokenAsync(Square.Models.ObtainTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Returns an OAuth access token..
            The endpoint supports distinct methods of obtaining OAuth access tokens..
            Applications specify a method by adding the `grant_type` parameter.
            in the request and also provide relevant information..
            __Note:__ Regardless of the method application specified,.
            the endpoint always returns two items; an OAuth access token and.
            a refresh token in the response..
            __OAuth tokens should only live on secure servers. Application clients.
            should never interact directly with OAuth tokens__..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ObtainTokenResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.OrdersApi">
            <summary>
            OrdersApi.
            </summary>
        </member>
        <member name="M:Square.Apis.OrdersApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.OrdersApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.OrdersApi.CreateOrder(Square.Models.CreateOrderRequest)">
            <summary>
            Creates a new [order]($m/Order) that can include information about products for.
            purchase and settings to apply to the purchase..
            To pay for a created order, see .
            [Pay for Orders](https://developer.squareup.com/docs/orders-api/pay-for-orders)..
            You can modify open orders using the [UpdateOrder]($e/Orders/UpdateOrder) endpoint..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.CreateOrderAsync(Square.Models.CreateOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new [order]($m/Order) that can include information about products for.
            purchase and settings to apply to the purchase..
            To pay for a created order, see .
            [Pay for Orders](https://developer.squareup.com/docs/orders-api/pay-for-orders)..
            You can modify open orders using the [UpdateOrder]($e/Orders/UpdateOrder) endpoint..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.BatchRetrieveOrders(Square.Models.BatchRetrieveOrdersRequest)">
            <summary>
            Retrieves a set of [orders]($m/Order) by their IDs..
            If a given order ID does not exist, the ID is ignored instead of generating an error..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BatchRetrieveOrdersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.BatchRetrieveOrdersAsync(Square.Models.BatchRetrieveOrdersRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a set of [orders]($m/Order) by their IDs..
            If a given order ID does not exist, the ID is ignored instead of generating an error..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BatchRetrieveOrdersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.CalculateOrder(Square.Models.CalculateOrderRequest)">
            <summary>
            Enables applications to preview order pricing without creating an order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CalculateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.CalculateOrderAsync(Square.Models.CalculateOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Enables applications to preview order pricing without creating an order..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CalculateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.SearchOrders(Square.Models.SearchOrdersRequest)">
            <summary>
            Search all orders for one or more locations. Orders include all sales,.
            returns, and exchanges regardless of how or when they entered the Square.
            ecosystem (such as Point of Sale, Invoices, and Connect APIs)..
            `SearchOrders` requests need to specify which locations to search and define a.
            [SearchOrdersQuery]($m/SearchOrdersQuery) object that controls.
            how to sort or filter the results. Your `SearchOrdersQuery` can:.
              Set filter criteria..
              Set the sort order..
              Determine whether to return results as complete `Order` objects or as.
            [OrderEntry]($m/OrderEntry) objects..
            Note that details for orders processed with Square Point of Sale while in.
            offline mode might not be transmitted to Square for up to 72 hours. Offline.
            orders have a `created_at` value that reflects the time the order was created,.
            not the time it was subsequently transmitted to Square..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchOrdersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.SearchOrdersAsync(Square.Models.SearchOrdersRequest,System.Threading.CancellationToken)">
            <summary>
            Search all orders for one or more locations. Orders include all sales,.
            returns, and exchanges regardless of how or when they entered the Square.
            ecosystem (such as Point of Sale, Invoices, and Connect APIs)..
            `SearchOrders` requests need to specify which locations to search and define a.
            [SearchOrdersQuery]($m/SearchOrdersQuery) object that controls.
            how to sort or filter the results. Your `SearchOrdersQuery` can:.
              Set filter criteria..
              Set the sort order..
              Determine whether to return results as complete `Order` objects or as.
            [OrderEntry]($m/OrderEntry) objects..
            Note that details for orders processed with Square Point of Sale while in.
            offline mode might not be transmitted to Square for up to 72 hours. Offline.
            orders have a `created_at` value that reflects the time the order was created,.
            not the time it was subsequently transmitted to Square..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchOrdersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.RetrieveOrder(System.String)">
            <summary>
            Retrieves an [Order]($m/Order) by ID..
            </summary>
            <param name="orderId">Required parameter: The ID of the order to retrieve..</param>
            <returns>Returns the Models.RetrieveOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.RetrieveOrderAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an [Order]($m/Order) by ID..
            </summary>
            <param name="orderId">Required parameter: The ID of the order to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.UpdateOrder(System.String,Square.Models.UpdateOrderRequest)">
            <summary>
            Updates an open [order]($m/Order) by adding, replacing, or deleting.
            fields. Orders with a `COMPLETED` or `CANCELED` state cannot be updated..
            An `UpdateOrder` request requires the following:.
            - The `order_id` in the endpoint path, identifying the order to update..
            - The latest `version` of the order to update..
            - The [sparse order](https://developer.squareup.com/docs/orders-api/manage-orders#sparse-order-objects).
            containing only the fields to update and the version to which the update is.
            being applied..
            - If deleting fields, the [dot notation paths](https://developer.squareup.com/docs/orders-api/manage-orders#on-dot-notation).
            identifying the fields to clear..
            To pay for an order, see .
            [Pay for Orders](https://developer.squareup.com/docs/orders-api/pay-for-orders)..
            </summary>
            <param name="orderId">Required parameter: The ID of the order to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.UpdateOrderAsync(System.String,Square.Models.UpdateOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an open [order]($m/Order) by adding, replacing, or deleting.
            fields. Orders with a `COMPLETED` or `CANCELED` state cannot be updated..
            An `UpdateOrder` request requires the following:.
            - The `order_id` in the endpoint path, identifying the order to update..
            - The latest `version` of the order to update..
            - The [sparse order](https://developer.squareup.com/docs/orders-api/manage-orders#sparse-order-objects).
            containing only the fields to update and the version to which the update is.
            being applied..
            - If deleting fields, the [dot notation paths](https://developer.squareup.com/docs/orders-api/manage-orders#on-dot-notation).
            identifying the fields to clear..
            To pay for an order, see .
            [Pay for Orders](https://developer.squareup.com/docs/orders-api/pay-for-orders)..
            </summary>
            <param name="orderId">Required parameter: The ID of the order to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.PayOrder(System.String,Square.Models.PayOrderRequest)">
            <summary>
            Pay for an [order]($m/Order) using one or more approved [payments]($m/Payment).
            or settle an order with a total of `0`..
            The total of the `payment_ids` listed in the request must be equal to the order.
            total. Orders with a total amount of `0` can be marked as paid by specifying an empty.
            array of `payment_ids` in the request..
            To be used with `PayOrder`, a payment must:.
            - Reference the order by specifying the `order_id` when [creating the payment]($e/Payments/CreatePayment)..
            Any approved payments that reference the same `order_id` not specified in the.
            `payment_ids` is canceled..
            - Be approved with [delayed capture](https://developer.squareup.com/docs/payments-api/take-payments#delayed-capture)..
            Using a delayed capture payment with `PayOrder` completes the approved payment..
            </summary>
            <param name="orderId">Required parameter: The ID of the order being paid..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.PayOrderResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.OrdersApi.PayOrderAsync(System.String,Square.Models.PayOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Pay for an [order]($m/Order) using one or more approved [payments]($m/Payment).
            or settle an order with a total of `0`..
            The total of the `payment_ids` listed in the request must be equal to the order.
            total. Orders with a total amount of `0` can be marked as paid by specifying an empty.
            array of `payment_ids` in the request..
            To be used with `PayOrder`, a payment must:.
            - Reference the order by specifying the `order_id` when [creating the payment]($e/Payments/CreatePayment)..
            Any approved payments that reference the same `order_id` not specified in the.
            `payment_ids` is canceled..
            - Be approved with [delayed capture](https://developer.squareup.com/docs/payments-api/take-payments#delayed-capture)..
            Using a delayed capture payment with `PayOrder` completes the approved payment..
            </summary>
            <param name="orderId">Required parameter: The ID of the order being paid..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.PayOrderResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.PaymentsApi">
            <summary>
            PaymentsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.PaymentsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.PaymentsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.PaymentsApi.ListPayments(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of payments taken by the account making the request..
            Results are eventually consistent, and new payments or changes to payments might take several.
            seconds to appear..
            The maximum results per page is 100..
            </summary>
            <param name="beginTime">Optional parameter: The timestamp for the beginning of the reporting period, in RFC 3339 format. Inclusive. Default: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The timestamp for the end of the reporting period, in RFC 3339 format.  Default: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed: - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default)..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="locationId">Optional parameter: Limit results to the location supplied. By default, results are returned for the default (main) location associated with the seller..</param>
            <param name="total">Optional parameter: The exact amount in the `total_money` for a payment..</param>
            <param name="last4">Optional parameter: The last four digits of a payment card..</param>
            <param name="cardBrand">Optional parameter: The brand of the payment card (for example, VISA)..</param>
            <param name="limit">Optional parameter: The maximum number of results to be returned in a single page. It is possible to receive fewer results than the specified limit on a given page.  The default value of 100 is also the maximum allowed value. If the provided value is  greater than 100, it is ignored and the default value is used instead.  Default: `100`.</param>
            <returns>Returns the Models.ListPaymentsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.ListPaymentsAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of payments taken by the account making the request..
            Results are eventually consistent, and new payments or changes to payments might take several.
            seconds to appear..
            The maximum results per page is 100..
            </summary>
            <param name="beginTime">Optional parameter: The timestamp for the beginning of the reporting period, in RFC 3339 format. Inclusive. Default: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The timestamp for the end of the reporting period, in RFC 3339 format.  Default: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed: - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default)..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="locationId">Optional parameter: Limit results to the location supplied. By default, results are returned for the default (main) location associated with the seller..</param>
            <param name="total">Optional parameter: The exact amount in the `total_money` for a payment..</param>
            <param name="last4">Optional parameter: The last four digits of a payment card..</param>
            <param name="cardBrand">Optional parameter: The brand of the payment card (for example, VISA)..</param>
            <param name="limit">Optional parameter: The maximum number of results to be returned in a single page. It is possible to receive fewer results than the specified limit on a given page.  The default value of 100 is also the maximum allowed value. If the provided value is  greater than 100, it is ignored and the default value is used instead.  Default: `100`.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListPaymentsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.CreatePayment(Square.Models.CreatePaymentRequest)">
            <summary>
            Creates a payment using the provided source. You can use this endpoint .
            to charge a card (credit/debit card or    .
            Square gift card) or record a payment that the seller received outside of Square .
            (cash payment from a buyer or a payment that an external entity .
            processed on behalf of the seller)..
            The endpoint creates a .
            `Payment` object and returns it in the response..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreatePaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.CreatePaymentAsync(Square.Models.CreatePaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a payment using the provided source. You can use this endpoint .
            to charge a card (credit/debit card or    .
            Square gift card) or record a payment that the seller received outside of Square .
            (cash payment from a buyer or a payment that an external entity .
            processed on behalf of the seller)..
            The endpoint creates a .
            `Payment` object and returns it in the response..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreatePaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.CancelPaymentByIdempotencyKey(Square.Models.CancelPaymentByIdempotencyKeyRequest)">
            <summary>
            Cancels (voids) a payment identified by the idempotency key that is specified in the.
            request..
            Use this method when the status of a `CreatePayment` request is unknown (for example, after you send a.
            `CreatePayment` request, a network error occurs and you do not get a response). In this case, you can.
            direct Square to cancel the payment using this endpoint. In the request, you provide the same.
            idempotency key that you provided in your `CreatePayment` request that you want to cancel. After.
            canceling the payment, you can submit your `CreatePayment` request again..
            Note that if no payment with the specified idempotency key is found, no action is taken and the endpoint.
            returns successfully..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CancelPaymentByIdempotencyKeyResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.CancelPaymentByIdempotencyKeyAsync(Square.Models.CancelPaymentByIdempotencyKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Cancels (voids) a payment identified by the idempotency key that is specified in the.
            request..
            Use this method when the status of a `CreatePayment` request is unknown (for example, after you send a.
            `CreatePayment` request, a network error occurs and you do not get a response). In this case, you can.
            direct Square to cancel the payment using this endpoint. In the request, you provide the same.
            idempotency key that you provided in your `CreatePayment` request that you want to cancel. After.
            canceling the payment, you can submit your `CreatePayment` request again..
            Note that if no payment with the specified idempotency key is found, no action is taken and the endpoint.
            returns successfully..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelPaymentByIdempotencyKeyResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.GetPayment(System.String)">
            <summary>
            Retrieves details for a specific payment..
            </summary>
            <param name="paymentId">Required parameter: A unique ID for the desired payment..</param>
            <returns>Returns the Models.GetPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.GetPaymentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves details for a specific payment..
            </summary>
            <param name="paymentId">Required parameter: A unique ID for the desired payment..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.UpdatePayment(System.String,Square.Models.UpdatePaymentRequest)">
            <summary>
            Updates a payment with the APPROVED status..
            You can update the `amount_money` and `tip_money` using this endpoint..
            </summary>
            <param name="paymentId">Required parameter: The ID of the payment to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdatePaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.UpdatePaymentAsync(System.String,Square.Models.UpdatePaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a payment with the APPROVED status..
            You can update the `amount_money` and `tip_money` using this endpoint..
            </summary>
            <param name="paymentId">Required parameter: The ID of the payment to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdatePaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.CancelPayment(System.String)">
            <summary>
            Cancels (voids) a payment. You can use this endpoint to cancel a payment with .
            the APPROVED `status`..
            </summary>
            <param name="paymentId">Required parameter: The ID of the payment to cancel..</param>
            <returns>Returns the Models.CancelPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.CancelPaymentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels (voids) a payment. You can use this endpoint to cancel a payment with .
            the APPROVED `status`..
            </summary>
            <param name="paymentId">Required parameter: The ID of the payment to cancel..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.CompletePayment(System.String)">
            <summary>
            Completes (captures) a payment..
            By default, payments are set to complete immediately after they are created..
            You can use this endpoint to complete a payment with the APPROVED `status`..
            </summary>
            <param name="paymentId">Required parameter: The unique ID identifying the payment to be completed..</param>
            <returns>Returns the Models.CompletePaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.PaymentsApi.CompletePaymentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Completes (captures) a payment..
            By default, payments are set to complete immediately after they are created..
            You can use this endpoint to complete a payment with the APPROVED `status`..
            </summary>
            <param name="paymentId">Required parameter: The unique ID identifying the payment to be completed..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CompletePaymentResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.RefundsApi">
            <summary>
            RefundsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.RefundsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.RefundsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.RefundsApi.ListPaymentRefunds(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves a list of refunds for the account making the request..
            Results are eventually consistent, and new refunds or changes to refunds might take several.
            seconds to appear..
            The maximum results per page is 100..
            </summary>
            <param name="beginTime">Optional parameter: The timestamp for the beginning of the requested reporting period, in RFC 3339 format.  Default: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The timestamp for the end of the requested reporting period, in RFC 3339 format.  Default: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed: - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default)..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="locationId">Optional parameter: Limit results to the location supplied. By default, results are returned for all locations associated with the seller..</param>
            <param name="status">Optional parameter: If provided, only refunds with the given status are returned. For a list of refund status values, see [PaymentRefund]($m/PaymentRefund).  Default: If omitted, refunds are returned regardless of their status..</param>
            <param name="sourceType">Optional parameter: If provided, only refunds with the given source type are returned. - `CARD` - List refunds only for payments where `CARD` was specified as the payment source.  Default: If omitted, refunds are returned regardless of the source type..</param>
            <param name="limit">Optional parameter: The maximum number of results to be returned in a single page.  It is possible to receive fewer results than the specified limit on a given page.  If the supplied value is greater than 100, no more than 100 results are returned.  Default: 100.</param>
            <returns>Returns the Models.ListPaymentRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.RefundsApi.ListPaymentRefundsAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of refunds for the account making the request..
            Results are eventually consistent, and new refunds or changes to refunds might take several.
            seconds to appear..
            The maximum results per page is 100..
            </summary>
            <param name="beginTime">Optional parameter: The timestamp for the beginning of the requested reporting period, in RFC 3339 format.  Default: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The timestamp for the end of the requested reporting period, in RFC 3339 format.  Default: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed: - `ASC` - Oldest to newest. - `DESC` - Newest to oldest (default)..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this cursor to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination)..</param>
            <param name="locationId">Optional parameter: Limit results to the location supplied. By default, results are returned for all locations associated with the seller..</param>
            <param name="status">Optional parameter: If provided, only refunds with the given status are returned. For a list of refund status values, see [PaymentRefund]($m/PaymentRefund).  Default: If omitted, refunds are returned regardless of their status..</param>
            <param name="sourceType">Optional parameter: If provided, only refunds with the given source type are returned. - `CARD` - List refunds only for payments where `CARD` was specified as the payment source.  Default: If omitted, refunds are returned regardless of the source type..</param>
            <param name="limit">Optional parameter: The maximum number of results to be returned in a single page.  It is possible to receive fewer results than the specified limit on a given page.  If the supplied value is greater than 100, no more than 100 results are returned.  Default: 100.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListPaymentRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.RefundsApi.RefundPayment(Square.Models.RefundPaymentRequest)">
            <summary>
            Refunds a payment. You can refund the entire payment amount or a.
            portion of it. You can use this endpoint to refund a card payment or record a .
            refund of a cash or external payment. For more information, see.
            [Refund Payment](https://developer.squareup.com/docs/payments-api/refund-payments)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.RefundPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.RefundsApi.RefundPaymentAsync(Square.Models.RefundPaymentRequest,System.Threading.CancellationToken)">
            <summary>
            Refunds a payment. You can refund the entire payment amount or a.
            portion of it. You can use this endpoint to refund a card payment or record a .
            refund of a cash or external payment. For more information, see.
            [Refund Payment](https://developer.squareup.com/docs/payments-api/refund-payments)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RefundPaymentResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.RefundsApi.GetPaymentRefund(System.String)">
            <summary>
            Retrieves a specific refund using the `refund_id`..
            </summary>
            <param name="refundId">Required parameter: The unique ID for the desired `PaymentRefund`..</param>
            <returns>Returns the Models.GetPaymentRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.RefundsApi.GetPaymentRefundAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a specific refund using the `refund_id`..
            </summary>
            <param name="refundId">Required parameter: The unique ID for the desired `PaymentRefund`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetPaymentRefundResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.SitesApi">
            <summary>
            SitesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.SitesApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.SitesApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.SitesApi.ListSites">
            <summary>
            Lists the Square Online sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <returns>Returns the Models.ListSitesResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SitesApi.ListSitesAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the Square Online sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListSitesResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.SnippetsApi">
            <summary>
            SnippetsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.SnippetsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.SnippetsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.SnippetsApi.DeleteSnippet(System.String)">
            <summary>
            Removes your snippet from a Square Online site..
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site that contains the snippet..</param>
            <returns>Returns the Models.DeleteSnippetResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SnippetsApi.DeleteSnippetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Removes your snippet from a Square Online site..
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site that contains the snippet..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.DeleteSnippetResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SnippetsApi.RetrieveSnippet(System.String)">
            <summary>
            Retrieves your snippet from a Square Online site. A site can contain snippets from multiple snippet applications, but you can retrieve only the snippet that was added by your application..
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site that contains the snippet..</param>
            <returns>Returns the Models.RetrieveSnippetResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SnippetsApi.RetrieveSnippetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves your snippet from a Square Online site. A site can contain snippets from multiple snippet applications, but you can retrieve only the snippet that was added by your application..
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site that contains the snippet..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveSnippetResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SnippetsApi.UpsertSnippet(System.String,Square.Models.UpsertSnippetRequest)">
            <summary>
            Adds a snippet to a Square Online site or updates the existing snippet on the site. .
            The snippet code is appended to the end of the `head` element on every page of the site, except checkout pages. A snippet application can add one snippet to a given site. .
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site where you want to add or update the snippet..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpsertSnippetResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SnippetsApi.UpsertSnippetAsync(System.String,Square.Models.UpsertSnippetRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a snippet to a Square Online site or updates the existing snippet on the site. .
            The snippet code is appended to the end of the `head` element on every page of the site, except checkout pages. A snippet application can add one snippet to a given site. .
            You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller..
            __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis)..
            </summary>
            <param name="siteId">Required parameter: The ID of the site where you want to add or update the snippet..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpsertSnippetResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.SubscriptionsApi">
            <summary>
            SubscriptionsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.SubscriptionsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.CreateSubscription(Square.Models.CreateSubscriptionRequest)">
            <summary>
            Creates a subscription for a customer to a subscription plan..
            If you provide a card on file in the request, Square charges the card for.
            the subscription. Otherwise, Square bills an invoice to the customer's email.
            address. The subscription starts immediately, unless the request includes.
            the optional `start_date`. Each individual subscription is associated with a particular location..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.CreateSubscriptionAsync(Square.Models.CreateSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a subscription for a customer to a subscription plan..
            If you provide a card on file in the request, Square charges the card for.
            the subscription. Otherwise, Square bills an invoice to the customer's email.
            address. The subscription starts immediately, unless the request includes.
            the optional `start_date`. Each individual subscription is associated with a particular location..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.SearchSubscriptions(Square.Models.SearchSubscriptionsRequest)">
            <summary>
            Searches for subscriptions..
            Results are ordered chronologically by subscription creation date. If.
            the request specifies more than one location ID,.
            the endpoint orders the result.
            by location ID, and then by creation date within each location. If no locations are given.
            in the query, all locations are searched..
            You can also optionally specify `customer_ids` to search by customer..
            If left unset, all customers.
            associated with the specified locations are returned..
            If the request specifies customer IDs, the endpoint orders results.
            first by location, within location by customer ID, and within.
            customer by subscription creation date..
            For more information, see.
            [Retrieve subscriptions](https://developer.squareup.com/docs/subscriptions-api/overview#retrieve-subscriptions)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchSubscriptionsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.SearchSubscriptionsAsync(Square.Models.SearchSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Searches for subscriptions..
            Results are ordered chronologically by subscription creation date. If.
            the request specifies more than one location ID,.
            the endpoint orders the result.
            by location ID, and then by creation date within each location. If no locations are given.
            in the query, all locations are searched..
            You can also optionally specify `customer_ids` to search by customer..
            If left unset, all customers.
            associated with the specified locations are returned..
            If the request specifies customer IDs, the endpoint orders results.
            first by location, within location by customer ID, and within.
            customer by subscription creation date..
            For more information, see.
            [Retrieve subscriptions](https://developer.squareup.com/docs/subscriptions-api/overview#retrieve-subscriptions)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchSubscriptionsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.RetrieveSubscription(System.String)">
            <summary>
            Retrieves a subscription..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to retrieve..</param>
            <returns>Returns the Models.RetrieveSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.RetrieveSubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a subscription..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.UpdateSubscription(System.String,Square.Models.UpdateSubscriptionRequest)">
            <summary>
            Updates a subscription. You can set, modify, and clear the.
            `subscription` field values..
            </summary>
            <param name="subscriptionId">Required parameter: The ID for the subscription to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.UpdateSubscriptionAsync(System.String,Square.Models.UpdateSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a subscription. You can set, modify, and clear the.
            `subscription` field values..
            </summary>
            <param name="subscriptionId">Required parameter: The ID for the subscription to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.CancelSubscription(System.String)">
            <summary>
            Sets the `canceled_date` field to the end of the active billing period..
            After this date, the status changes from ACTIVE to CANCELED..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to cancel..</param>
            <returns>Returns the Models.CancelSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.CancelSubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the `canceled_date` field to the end of the active billing period..
            After this date, the status changes from ACTIVE to CANCELED..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to cancel..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.ListSubscriptionEvents(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Lists all events for a specific subscription..
            In the current implementation, only `START_SUBSCRIPTION` and `STOP_SUBSCRIPTION` (when the subscription was canceled) events are returned..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to retrieve the events for..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="limit">Optional parameter: The upper limit on the number of subscription events to return in the response.  Default: `200`.</param>
            <returns>Returns the Models.ListSubscriptionEventsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.ListSubscriptionEventsAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Lists all events for a specific subscription..
            In the current implementation, only `START_SUBSCRIPTION` and `STOP_SUBSCRIPTION` (when the subscription was canceled) events are returned..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to retrieve the events for..</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)..</param>
            <param name="limit">Optional parameter: The upper limit on the number of subscription events to return in the response.  Default: `200`.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListSubscriptionEventsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.ResumeSubscription(System.String)">
            <summary>
            Resumes a deactivated subscription..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to resume..</param>
            <returns>Returns the Models.ResumeSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.SubscriptionsApi.ResumeSubscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Resumes a deactivated subscription..
            </summary>
            <param name="subscriptionId">Required parameter: The ID of the subscription to resume..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ResumeSubscriptionResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.TeamApi">
            <summary>
            TeamApi.
            </summary>
        </member>
        <member name="M:Square.Apis.TeamApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.TeamApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.TeamApi.CreateTeamMember(Square.Models.CreateTeamMemberRequest)">
            <summary>
            Creates a single `TeamMember` object. The `TeamMember` will be returned on successful creates..
            You must provide the following values in your request to this endpoint:.
            - `given_name`.
            - `family_name`.
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#createteammember)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.CreateTeamMemberAsync(Square.Models.CreateTeamMemberRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a single `TeamMember` object. The `TeamMember` will be returned on successful creates..
            You must provide the following values in your request to this endpoint:.
            - `given_name`.
            - `family_name`.
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#createteammember)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.BulkCreateTeamMembers(Square.Models.BulkCreateTeamMembersRequest)">
            <summary>
            Creates multiple `TeamMember` objects. The created `TeamMember` objects will be returned on successful creates..
            This process is non-transactional and will process as much of the request as is possible. If one of the creates in.
            the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response.
            will contain explicit error information for this particular create..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#bulk-create-team-members)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BulkCreateTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.BulkCreateTeamMembersAsync(Square.Models.BulkCreateTeamMembersRequest,System.Threading.CancellationToken)">
            <summary>
            Creates multiple `TeamMember` objects. The created `TeamMember` objects will be returned on successful creates..
            This process is non-transactional and will process as much of the request as is possible. If one of the creates in.
            the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response.
            will contain explicit error information for this particular create..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#bulk-create-team-members)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BulkCreateTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.BulkUpdateTeamMembers(Square.Models.BulkUpdateTeamMembersRequest)">
            <summary>
            Updates multiple `TeamMember` objects. The updated `TeamMember` objects will be returned on successful updates..
            This process is non-transactional and will process as much of the request as is possible. If one of the updates in.
            the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response.
            will contain explicit error information for this particular update..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#bulk-update-team-members)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.BulkUpdateTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.BulkUpdateTeamMembersAsync(Square.Models.BulkUpdateTeamMembersRequest,System.Threading.CancellationToken)">
            <summary>
            Updates multiple `TeamMember` objects. The updated `TeamMember` objects will be returned on successful updates..
            This process is non-transactional and will process as much of the request as is possible. If one of the updates in.
            the request cannot be successfully processed, the request will NOT be marked as failed, but the body of the response.
            will contain explicit error information for this particular update..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#bulk-update-team-members)..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.BulkUpdateTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.SearchTeamMembers(Square.Models.SearchTeamMembersRequest)">
            <summary>
            Returns a paginated list of `TeamMember` objects for a business..
            The list to be returned can be filtered by:.
            - location IDs **and**.
            - `status`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.SearchTeamMembersAsync(Square.Models.SearchTeamMembersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a paginated list of `TeamMember` objects for a business..
            The list to be returned can be filtered by:.
            - location IDs **and**.
            - `status`.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchTeamMembersResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.RetrieveTeamMember(System.String)">
            <summary>
            Retrieve a `TeamMember` object for the given `TeamMember.id`..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#retrieve-a-team-member)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve..</param>
            <returns>Returns the Models.RetrieveTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.RetrieveTeamMemberAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a `TeamMember` object for the given `TeamMember.id`..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#retrieve-a-team-member)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.UpdateTeamMember(System.String,Square.Models.UpdateTeamMemberRequest)">
            <summary>
            Updates a single `TeamMember` object. The `TeamMember` will be returned on successful updates..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#update-a-team-member)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.UpdateTeamMemberAsync(System.String,Square.Models.UpdateTeamMemberRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a single `TeamMember` object. The `TeamMember` will be returned on successful updates..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#update-a-team-member)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to update..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateTeamMemberResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.RetrieveWageSetting(System.String)">
            <summary>
            Retrieve a `WageSetting` object for a team member specified.
            by `TeamMember.id`..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#retrievewagesetting)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve wage setting for.</param>
            <returns>Returns the Models.RetrieveWageSettingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.RetrieveWageSettingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a `WageSetting` object for a team member specified.
            by `TeamMember.id`..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#retrievewagesetting)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to retrieve wage setting for.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveWageSettingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.UpdateWageSetting(System.String,Square.Models.UpdateWageSettingRequest)">
            <summary>
            Creates or updates a `WageSetting` object. The object is created if a.
            `WageSetting` with the specified `team_member_id` does not exist. Otherwise,.
            it fully replaces the `WageSetting` object for the team member..
            The `WageSetting` will be returned upon successful update..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#create-or-update-a-wage-setting)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to update the `WageSetting` object for..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.UpdateWageSettingResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TeamApi.UpdateWageSettingAsync(System.String,Square.Models.UpdateWageSettingRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a `WageSetting` object. The object is created if a.
            `WageSetting` with the specified `team_member_id` does not exist. Otherwise,.
            it fully replaces the `WageSetting` object for the team member..
            The `WageSetting` will be returned upon successful update..
            Learn about [Troubleshooting the Teams API](https://developer.squareup.com/docs/team/troubleshooting#create-or-update-a-wage-setting)..
            </summary>
            <param name="teamMemberId">Required parameter: The ID of the team member to update the `WageSetting` object for..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.UpdateWageSettingResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.TerminalApi">
            <summary>
            TerminalApi.
            </summary>
        </member>
        <member name="M:Square.Apis.TerminalApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.TerminalApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.TerminalApi.CreateTerminalCheckout(Square.Models.CreateTerminalCheckoutRequest)">
            <summary>
            Creates a Terminal checkout request and sends it to the specified device to take a payment.
            for the requested amount..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.CreateTerminalCheckoutAsync(Square.Models.CreateTerminalCheckoutRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a Terminal checkout request and sends it to the specified device to take a payment.
            for the requested amount..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.SearchTerminalCheckouts(Square.Models.SearchTerminalCheckoutsRequest)">
            <summary>
            Retrieves a filtered list of Terminal checkout requests created by the account making the request..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchTerminalCheckoutsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.SearchTerminalCheckoutsAsync(Square.Models.SearchTerminalCheckoutsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a filtered list of Terminal checkout requests created by the account making the request..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchTerminalCheckoutsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.GetTerminalCheckout(System.String)">
            <summary>
            Retrieves a Terminal checkout request by `checkout_id`..
            </summary>
            <param name="checkoutId">Required parameter: The unique ID for the desired `TerminalCheckout`..</param>
            <returns>Returns the Models.GetTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.GetTerminalCheckoutAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a Terminal checkout request by `checkout_id`..
            </summary>
            <param name="checkoutId">Required parameter: The unique ID for the desired `TerminalCheckout`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.CancelTerminalCheckout(System.String)">
            <summary>
            Cancels a Terminal checkout request if the status of the request permits it..
            </summary>
            <param name="checkoutId">Required parameter: The unique ID for the desired `TerminalCheckout`..</param>
            <returns>Returns the Models.CancelTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.CancelTerminalCheckoutAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a Terminal checkout request if the status of the request permits it..
            </summary>
            <param name="checkoutId">Required parameter: The unique ID for the desired `TerminalCheckout`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelTerminalCheckoutResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.CreateTerminalRefund(Square.Models.CreateTerminalRefundRequest)">
            <summary>
            Creates a request to refund an Interac payment completed on a Square Terminal..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.CreateTerminalRefundAsync(Square.Models.CreateTerminalRefundRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a request to refund an Interac payment completed on a Square Terminal..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.SearchTerminalRefunds(Square.Models.SearchTerminalRefundsRequest)">
            <summary>
            Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.SearchTerminalRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.SearchTerminalRefundsAsync(Square.Models.SearchTerminalRefundsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a filtered list of Interac Terminal refund requests created by the seller making the request..
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.SearchTerminalRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.GetTerminalRefund(System.String)">
            <summary>
            Retrieves an Interac Terminal refund object by ID..
            </summary>
            <param name="terminalRefundId">Required parameter: The unique ID for the desired `TerminalRefund`..</param>
            <returns>Returns the Models.GetTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.GetTerminalRefundAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an Interac Terminal refund object by ID..
            </summary>
            <param name="terminalRefundId">Required parameter: The unique ID for the desired `TerminalRefund`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.GetTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.CancelTerminalRefund(System.String)">
            <summary>
            Cancels an Interac Terminal refund request by refund request ID if the status of the request permits it..
            </summary>
            <param name="terminalRefundId">Required parameter: The unique ID for the desired `TerminalRefund`..</param>
            <returns>Returns the Models.CancelTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TerminalApi.CancelTerminalRefundAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels an Interac Terminal refund request by refund request ID if the status of the request permits it..
            </summary>
            <param name="terminalRefundId">Required parameter: The unique ID for the desired `TerminalRefund`..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CancelTerminalRefundResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.TransactionsApi">
            <summary>
            TransactionsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.TransactionsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.TransactionsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.TransactionsApi.ListRefunds(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Lists refunds for one of a business's locations..
            In addition to full or partial tender refunds processed through Square APIs,.
            refunds may result from itemized returns or exchanges through Square's.
            Point of Sale applications..
            Refunds with a `status` of `PENDING` are not currently included in this.
            endpoint's response..
            Max results per [page](https://developer.squareup.com/docs/working-with-apis/pagination): 50.
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list refunds for..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed in the response (`ASC` for oldest first, `DESC` for newest first).  Default value: `DESC`.</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <returns>Returns the Models.ListRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.ListRefundsAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists refunds for one of a business's locations..
            In addition to full or partial tender refunds processed through Square APIs,.
            refunds may result from itemized returns or exchanges through Square's.
            Point of Sale applications..
            Refunds with a `status` of `PENDING` are not currently included in this.
            endpoint's response..
            Max results per [page](https://developer.squareup.com/docs/working-with-apis/pagination): 50.
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list refunds for..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed in the response (`ASC` for oldest first, `DESC` for newest first).  Default value: `DESC`.</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListRefundsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.ListTransactions(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Lists transactions for a particular location..
            Transactions include payment information from sales and exchanges and refund.
            information from returns and exchanges..
            Max results per [page](https://developer.squareup.com/docs/working-with-apis/pagination): 50.
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list transactions for..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed in the response (`ASC` for oldest first, `DESC` for newest first).  Default value: `DESC`.</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <returns>Returns the Models.ListTransactionsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.ListTransactionsAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists transactions for a particular location..
            Transactions include payment information from sales and exchanges and refund.
            information from returns and exchanges..
            Max results per [page](https://developer.squareup.com/docs/working-with-apis/pagination): 50.
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list transactions for..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in RFC 3339 format.  See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.  Default value: The current time..</param>
            <param name="sortOrder">Optional parameter: The order in which results are listed in the response (`ASC` for oldest first, `DESC` for newest first).  Default value: `DESC`.</param>
            <param name="cursor">Optional parameter: A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ListTransactionsResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.Charge(System.String,Square.Models.ChargeRequest)">
            <summary>
            Charges a card represented by a card nonce or a customer's card on file..
            Your request to this endpoint must include _either_:.
            - A value for the `card_nonce` parameter (to charge a card nonce generated.
            with the `SqPaymentForm`).
            - Values for the `customer_card_id` and `customer_id` parameters (to charge.
            a customer's card on file).
            In order for an eCommerce payment to potentially qualify for.
            [Square chargeback protection](https://squareup.com/help/article/5394), you.
            _must_ provide values for the following parameters in your request:.
            - `buyer_email_address`.
            - At least one of `billing_address` or `shipping_address`.
            When this response is returned, the amount of Square's processing fee might not yet be.
            calculated. To obtain the processing fee, wait about ten seconds and call.
            [RetrieveTransaction]($e/Transactions/RetrieveTransaction). See the `processing_fee_money`.
            field of each [Tender included]($m/Tender) in the transaction..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to associate the created transaction with..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.ChargeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.ChargeAsync(System.String,Square.Models.ChargeRequest,System.Threading.CancellationToken)">
            <summary>
            Charges a card represented by a card nonce or a customer's card on file..
            Your request to this endpoint must include _either_:.
            - A value for the `card_nonce` parameter (to charge a card nonce generated.
            with the `SqPaymentForm`).
            - Values for the `customer_card_id` and `customer_id` parameters (to charge.
            a customer's card on file).
            In order for an eCommerce payment to potentially qualify for.
            [Square chargeback protection](https://squareup.com/help/article/5394), you.
            _must_ provide values for the following parameters in your request:.
            - `buyer_email_address`.
            - At least one of `billing_address` or `shipping_address`.
            When this response is returned, the amount of Square's processing fee might not yet be.
            calculated. To obtain the processing fee, wait about ten seconds and call.
            [RetrieveTransaction]($e/Transactions/RetrieveTransaction). See the `processing_fee_money`.
            field of each [Tender included]($m/Tender) in the transaction..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to associate the created transaction with..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.ChargeResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.RetrieveTransaction(System.String,System.String)">
            <summary>
            Retrieves details for a single transaction..
            </summary>
            <param name="locationId">Required parameter: The ID of the transaction's associated location..</param>
            <param name="transactionId">Required parameter: The ID of the transaction to retrieve..</param>
            <returns>Returns the Models.RetrieveTransactionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.RetrieveTransactionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves details for a single transaction..
            </summary>
            <param name="locationId">Required parameter: The ID of the transaction's associated location..</param>
            <param name="transactionId">Required parameter: The ID of the transaction to retrieve..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.RetrieveTransactionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.CaptureTransaction(System.String,System.String)">
            <summary>
            Captures a transaction that was created with the [Charge]($e/Transactions/Charge).
            endpoint with a `delay_capture` value of `true`..
            See [Delayed capture transactions](https://developer.squareup.com/docs/payments/transactions/overview#delayed-capture).
            for more information..
            </summary>
            <param name="locationId">Required parameter: Example: .</param>
            <param name="transactionId">Required parameter: Example: .</param>
            <returns>Returns the Models.CaptureTransactionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.CaptureTransactionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Captures a transaction that was created with the [Charge]($e/Transactions/Charge).
            endpoint with a `delay_capture` value of `true`..
            See [Delayed capture transactions](https://developer.squareup.com/docs/payments/transactions/overview#delayed-capture).
            for more information..
            </summary>
            <param name="locationId">Required parameter: Example: .</param>
            <param name="transactionId">Required parameter: Example: .</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CaptureTransactionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.CreateRefund(System.String,System.String,Square.Models.CreateRefundRequest)">
            <summary>
            Initiates a refund for a previously charged tender..
            You must issue a refund within 120 days of the associated payment. See.
            [this article](https://squareup.com/help/us/en/article/5060) for more information.
            on refund behavior..
            NOTE: Card-present transactions with Interac credit cards **cannot be.
            refunded using the Connect API**. Interac transactions must refunded.
            in-person (e.g., dipping the card using POS app)..
            </summary>
            <param name="locationId">Required parameter: The ID of the original transaction's associated location..</param>
            <param name="transactionId">Required parameter: The ID of the original transaction that includes the tender to refund..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.CreateRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.CreateRefundAsync(System.String,System.String,Square.Models.CreateRefundRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates a refund for a previously charged tender..
            You must issue a refund within 120 days of the associated payment. See.
            [this article](https://squareup.com/help/us/en/article/5060) for more information.
            on refund behavior..
            NOTE: Card-present transactions with Interac credit cards **cannot be.
            refunded using the Connect API**. Interac transactions must refunded.
            in-person (e.g., dipping the card using POS app)..
            </summary>
            <param name="locationId">Required parameter: The ID of the original transaction's associated location..</param>
            <param name="transactionId">Required parameter: The ID of the original transaction that includes the tender to refund..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.CreateRefundResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.VoidTransaction(System.String,System.String)">
            <summary>
            Cancels a transaction that was created with the [Charge]($e/Transactions/Charge).
            endpoint with a `delay_capture` value of `true`..
            See [Delayed capture transactions](https://developer.squareup.com/docs/payments/transactions/overview#delayed-capture).
            for more information..
            </summary>
            <param name="locationId">Required parameter: Example: .</param>
            <param name="transactionId">Required parameter: Example: .</param>
            <returns>Returns the Models.VoidTransactionResponse response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.TransactionsApi.VoidTransactionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a transaction that was created with the [Charge]($e/Transactions/Charge).
            endpoint with a `delay_capture` value of `true`..
            See [Delayed capture transactions](https://developer.squareup.com/docs/payments/transactions/overview#delayed-capture).
            for more information..
            </summary>
            <param name="locationId">Required parameter: Example: .</param>
            <param name="transactionId">Required parameter: Example: .</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.VoidTransactionResponse response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.V1EmployeesApi">
            <summary>
            V1EmployeesApi.
            </summary>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.V1EmployeesApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.ListEmployees(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Provides summary information for all of a business's employees..
            </summary>
            <param name="order">Optional parameter: The order in which employees are listed in the response, based on their created_at field.      Default value: ASC.</param>
            <param name="beginUpdatedAt">Optional parameter: If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format.</param>
            <param name="endUpdatedAt">Optional parameter: If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format..</param>
            <param name="beginCreatedAt">Optional parameter: If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format..</param>
            <param name="endCreatedAt">Optional parameter: If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format..</param>
            <param name="status">Optional parameter: If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE)..</param>
            <param name="externalId">Optional parameter: If provided, the endpoint returns only employee entities with the specified external_id..</param>
            <param name="limit">Optional parameter: The maximum integer number of employee entities to return in a single response. Default 100, maximum 200..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <returns>Returns the List of Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.ListEmployeesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Provides summary information for all of a business's employees..
            </summary>
            <param name="order">Optional parameter: The order in which employees are listed in the response, based on their created_at field.      Default value: ASC.</param>
            <param name="beginUpdatedAt">Optional parameter: If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format.</param>
            <param name="endUpdatedAt">Optional parameter: If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format..</param>
            <param name="beginCreatedAt">Optional parameter: If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format..</param>
            <param name="endCreatedAt">Optional parameter: If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format..</param>
            <param name="status">Optional parameter: If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE)..</param>
            <param name="externalId">Optional parameter: If provided, the endpoint returns only employee entities with the specified external_id..</param>
            <param name="limit">Optional parameter: The maximum integer number of employee entities to return in a single response. Default 100, maximum 200..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the List of Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.CreateEmployee(Square.Models.V1Employee)">
            <summary>
             Use the CreateEmployee endpoint to add an employee to a Square.
            account. Employees created with the Connect API have an initial status.
            of `INACTIVE`. Inactive employees cannot sign in to Square Point of Sale.
            until they are activated from the Square Dashboard. Employee status.
            cannot be changed with the Connect API..
            Employee entities cannot be deleted. To disable employee profiles,.
            set the employee's status to <code>INACTIVE</code>.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.CreateEmployeeAsync(Square.Models.V1Employee,System.Threading.CancellationToken)">
            <summary>
             Use the CreateEmployee endpoint to add an employee to a Square.
            account. Employees created with the Connect API have an initial status.
            of `INACTIVE`. Inactive employees cannot sign in to Square Point of Sale.
            until they are activated from the Square Dashboard. Employee status.
            cannot be changed with the Connect API..
            Employee entities cannot be deleted. To disable employee profiles,.
            set the employee's status to <code>INACTIVE</code>.
            </summary>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.RetrieveEmployee(System.String)">
            <summary>
            Provides the details for a single employee..
            </summary>
            <param name="employeeId">Required parameter: The employee's ID..</param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.RetrieveEmployeeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Provides the details for a single employee..
            </summary>
            <param name="employeeId">Required parameter: The employee's ID..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.UpdateEmployee(System.String,Square.Models.V1Employee)">
            <summary>
            UpdateEmployee.
            </summary>
            <param name="employeeId">Required parameter: The ID of the role to modify..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.UpdateEmployeeAsync(System.String,Square.Models.V1Employee,System.Threading.CancellationToken)">
            <summary>
            UpdateEmployee.
            </summary>
            <param name="employeeId">Required parameter: The ID of the role to modify..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Employee response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.ListEmployeeRoles(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Provides summary information for all of a business's employee roles..
            </summary>
            <param name="order">Optional parameter: The order in which employees are listed in the response, based on their created_at field.Default value: ASC.</param>
            <param name="limit">Optional parameter: The maximum integer number of employee entities to return in a single response. Default 100, maximum 200..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <returns>Returns the List of Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.ListEmployeeRolesAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Provides summary information for all of a business's employee roles..
            </summary>
            <param name="order">Optional parameter: The order in which employees are listed in the response, based on their created_at field.Default value: ASC.</param>
            <param name="limit">Optional parameter: The maximum integer number of employee entities to return in a single response. Default 100, maximum 200..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the List of Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.CreateEmployeeRole(Square.Models.V1EmployeeRole)">
            <summary>
            Creates an employee role you can then assign to employees..
            Square accounts can include any number of roles that can be assigned to.
            employees. These roles define the actions and permissions granted to an.
            employee with that role. For example, an employee with a "Shift Manager".
            role might be able to issue refunds in Square Point of Sale, whereas an.
            employee with a "Clerk" role might not..
            Roles are assigned with the [V1UpdateEmployee]($e/V1Employees/UpdateEmployeeRole).
            endpoint. An employee can have only one role at a time..
            If an employee has no role, they have none of the permissions associated.
            with roles. All employees can accept payments with Square Point of Sale..
            </summary>
            <param name="body">Required parameter: An EmployeeRole object with a name and permissions, and an optional owner flag..</param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.CreateEmployeeRoleAsync(Square.Models.V1EmployeeRole,System.Threading.CancellationToken)">
            <summary>
            Creates an employee role you can then assign to employees..
            Square accounts can include any number of roles that can be assigned to.
            employees. These roles define the actions and permissions granted to an.
            employee with that role. For example, an employee with a "Shift Manager".
            role might be able to issue refunds in Square Point of Sale, whereas an.
            employee with a "Clerk" role might not..
            Roles are assigned with the [V1UpdateEmployee]($e/V1Employees/UpdateEmployeeRole).
            endpoint. An employee can have only one role at a time..
            If an employee has no role, they have none of the permissions associated.
            with roles. All employees can accept payments with Square Point of Sale..
            </summary>
            <param name="body">Required parameter: An EmployeeRole object with a name and permissions, and an optional owner flag..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.RetrieveEmployeeRole(System.String)">
            <summary>
            Provides the details for a single employee role..
            </summary>
            <param name="roleId">Required parameter: The role's ID..</param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.RetrieveEmployeeRoleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Provides the details for a single employee role..
            </summary>
            <param name="roleId">Required parameter: The role's ID..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.UpdateEmployeeRole(System.String,Square.Models.V1EmployeeRole)">
            <summary>
            Modifies the details of an employee role..
            </summary>
            <param name="roleId">Required parameter: The ID of the role to modify..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1EmployeesApi.UpdateEmployeeRoleAsync(System.String,Square.Models.V1EmployeeRole,System.Threading.CancellationToken)">
            <summary>
            Modifies the details of an employee role..
            </summary>
            <param name="roleId">Required parameter: The ID of the role to modify..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1EmployeeRole response from the API call.</returns>
        </member>
        <member name="T:Square.Apis.V1TransactionsApi">
            <summary>
            V1TransactionsApi.
            </summary>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.#ctor(Square.IConfiguration,Square.Http.Client.IHttpClient,System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager},Square.Http.Client.HttpCallBack)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Apis.V1TransactionsApi"/> class.
            </summary>
            <param name="config"> config instance. </param>
            <param name="httpClient"> httpClient. </param>
            <param name="authManagers"> authManager. </param>
            <param name="httpCallBack"> httpCallBack. </param>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.ListOrders(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Provides summary information for a merchant's online store orders..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list online store orders for..</param>
            <param name="order">Optional parameter: The order in which payments are listed in the response..</param>
            <param name="limit">Optional parameter: The maximum number of payments to return in a single response. This value cannot exceed 200..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <returns>Returns the List of Models.V1Order response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.ListOrdersAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Provides summary information for a merchant's online store orders..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list online store orders for..</param>
            <param name="order">Optional parameter: The order in which payments are listed in the response..</param>
            <param name="limit">Optional parameter: The maximum number of payments to return in a single response. This value cannot exceed 200..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the List of Models.V1Order response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.RetrieveOrder(System.String,System.String)">
            <summary>
            Provides comprehensive information for a single online store order, including the order's history..
            </summary>
            <param name="locationId">Required parameter: The ID of the order's associated location..</param>
            <param name="orderId">Required parameter: The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint.</param>
            <returns>Returns the Models.V1Order response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.RetrieveOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Provides comprehensive information for a single online store order, including the order's history..
            </summary>
            <param name="locationId">Required parameter: The ID of the order's associated location..</param>
            <param name="orderId">Required parameter: The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint.</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Order response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.UpdateOrder(System.String,System.String,Square.Models.V1UpdateOrderRequest)">
            <summary>
            Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:.
            </summary>
            <param name="locationId">Required parameter: The ID of the order's associated location..</param>
            <param name="orderId">Required parameter: The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint.</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.V1Order response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.UpdateOrderAsync(System.String,System.String,Square.Models.V1UpdateOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:.
            </summary>
            <param name="locationId">Required parameter: The ID of the order's associated location..</param>
            <param name="orderId">Required parameter: The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint.</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Order response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.ListPayments(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Provides summary information for all payments taken for a given.
            Square account during a date range. Date ranges cannot exceed 1 year in.
            length. See Date ranges for details of inclusive and exclusive dates..
            *Note**: Details for payments processed with Square Point of Sale while.
            in offline mode may not be transmitted to Square for up to 72 hours..
            Offline payments have a `created_at` value that reflects the time the.
            payment was originally processed, not the time it was subsequently.
            transmitted to Square. Consequently, the ListPayments endpoint might.
            list an offline payment chronologically between online payments that.
            were seen in a previous request..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list payments for. If you specify me, this endpoint returns payments aggregated from all of the business's locations..</param>
            <param name="order">Optional parameter: The order in which payments are listed in the response..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time..</param>
            <param name="limit">Optional parameter: The maximum number of payments to return in a single response. This value cannot exceed 200..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <param name="includePartial">Optional parameter: Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed..</param>
            <returns>Returns the List of Models.V1Payment response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.ListPaymentsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Provides summary information for all payments taken for a given.
            Square account during a date range. Date ranges cannot exceed 1 year in.
            length. See Date ranges for details of inclusive and exclusive dates..
            *Note**: Details for payments processed with Square Point of Sale while.
            in offline mode may not be transmitted to Square for up to 72 hours..
            Offline payments have a `created_at` value that reflects the time the.
            payment was originally processed, not the time it was subsequently.
            transmitted to Square. Consequently, the ListPayments endpoint might.
            list an offline payment chronologically between online payments that.
            were seen in a previous request..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list payments for. If you specify me, this endpoint returns payments aggregated from all of the business's locations..</param>
            <param name="order">Optional parameter: The order in which payments are listed in the response..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time..</param>
            <param name="limit">Optional parameter: The maximum number of payments to return in a single response. This value cannot exceed 200..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <param name="includePartial">Optional parameter: Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the List of Models.V1Payment response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.RetrievePayment(System.String,System.String)">
            <summary>
            Provides comprehensive information for a single payment..
            </summary>
            <param name="locationId">Required parameter: The ID of the payment's associated location..</param>
            <param name="paymentId">Required parameter: The Square-issued payment ID. payment_id comes from Payment objects returned by the List Payments endpoint, Settlement objects returned by the List Settlements endpoint, or Refund objects returned by the List Refunds endpoint..</param>
            <returns>Returns the Models.V1Payment response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.RetrievePaymentAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Provides comprehensive information for a single payment..
            </summary>
            <param name="locationId">Required parameter: The ID of the payment's associated location..</param>
            <param name="paymentId">Required parameter: The Square-issued payment ID. payment_id comes from Payment objects returned by the List Payments endpoint, Settlement objects returned by the List Settlements endpoint, or Refund objects returned by the List Refunds endpoint..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Payment response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.ListRefunds(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Provides the details for all refunds initiated by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list refunds for..</param>
            <param name="order">Optional parameter: The order in which payments are listed in the response..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time..</param>
            <param name="limit">Optional parameter: The approximate number of refunds to return in a single response. Default: 100. Max: 200. Response may contain more results than the prescribed limit when refunds are made simultaneously to multiple tenders in a payment or when refunds are generated in an exchange to account for the value of returned goods..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <returns>Returns the List of Models.V1Refund response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.ListRefundsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Provides the details for all refunds initiated by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list refunds for..</param>
            <param name="order">Optional parameter: The order in which payments are listed in the response..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time..</param>
            <param name="limit">Optional parameter: The approximate number of refunds to return in a single response. Default: 100. Max: 200. Response may contain more results than the prescribed limit when refunds are made simultaneously to multiple tenders in a payment or when refunds are generated in an exchange to account for the value of returned goods..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the List of Models.V1Refund response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.CreateRefund(System.String,Square.Models.V1CreateRefundRequest)">
            <summary>
            Issues a refund for a previously processed payment. You must issue.
            a refund within 60 days of the associated payment..
            You cannot issue a partial refund for a split tender payment. You must.
            instead issue a full or partial refund for a particular tender, by.
            providing the applicable tender id to the V1CreateRefund endpoint..
            Issuing a full refund for a split tender payment refunds all tenders.
            associated with the payment..
            Issuing a refund for a card payment is not reversible. For development.
            purposes, you can create fake cash payments in Square Point of Sale and.
            refund them..
            </summary>
            <param name="locationId">Required parameter: The ID of the original payment's associated location..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <returns>Returns the Models.V1Refund response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.CreateRefundAsync(System.String,Square.Models.V1CreateRefundRequest,System.Threading.CancellationToken)">
            <summary>
            Issues a refund for a previously processed payment. You must issue.
            a refund within 60 days of the associated payment..
            You cannot issue a partial refund for a split tender payment. You must.
            instead issue a full or partial refund for a particular tender, by.
            providing the applicable tender id to the V1CreateRefund endpoint..
            Issuing a full refund for a split tender payment refunds all tenders.
            associated with the payment..
            Issuing a refund for a card payment is not reversible. For development.
            purposes, you can create fake cash payments in Square Point of Sale and.
            refund them..
            </summary>
            <param name="locationId">Required parameter: The ID of the original payment's associated location..</param>
            <param name="body">Required parameter: An object containing the fields to POST for the request.  See the corresponding object definition for field details..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Refund response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.ListSettlements(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Provides summary information for all deposits and withdrawals.
            initiated by Square to a linked bank account during a date range. Date.
            ranges cannot exceed one year in length..
            *Note**: the ListSettlements endpoint does not provide entry.
            information..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list settlements for. If you specify me, this endpoint returns settlements aggregated from all of the business's locations..</param>
            <param name="order">Optional parameter: The order in which settlements are listed in the response..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time..</param>
            <param name="limit">Optional parameter: The maximum number of settlements to return in a single response. This value cannot exceed 200..</param>
            <param name="status">Optional parameter: Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED)..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <returns>Returns the List of Models.V1Settlement response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.ListSettlementsAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Provides summary information for all deposits and withdrawals.
            initiated by Square to a linked bank account during a date range. Date.
            ranges cannot exceed one year in length..
            *Note**: the ListSettlements endpoint does not provide entry.
            information..
            </summary>
            <param name="locationId">Required parameter: The ID of the location to list settlements for. If you specify me, this endpoint returns settlements aggregated from all of the business's locations..</param>
            <param name="order">Optional parameter: The order in which settlements are listed in the response..</param>
            <param name="beginTime">Optional parameter: The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year..</param>
            <param name="endTime">Optional parameter: The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time..</param>
            <param name="limit">Optional parameter: The maximum number of settlements to return in a single response. This value cannot exceed 200..</param>
            <param name="status">Optional parameter: Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED)..</param>
            <param name="batchToken">Optional parameter: A pagination cursor to retrieve the next set of results for your original query to the endpoint..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the List of Models.V1Settlement response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.RetrieveSettlement(System.String,System.String)">
            <summary>
            Provides comprehensive information for a single settlement..
            The returned `Settlement` objects include an `entries` field that lists.
            the transactions that contribute to the settlement total. Most.
            settlement entries correspond to a payment payout, but settlement.
            entries are also generated for less common events, like refunds, manual.
            adjustments, or chargeback holds..
            Square initiates its regular deposits as indicated in the.
            [Deposit Options with Square](https://squareup.com/help/us/en/article/3807).
            help article. Details for a regular deposit are usually not available.
            from Connect API endpoints before 10 p.m. PST the same day..
            Square does not know when an initiated settlement **completes**, only.
            whether it has failed. A completed settlement is typically reflected in.
            a bank account within 3 business days, but in exceptional cases it may.
            take longer..
            </summary>
            <param name="locationId">Required parameter: The ID of the settlements's associated location..</param>
            <param name="settlementId">Required parameter: The settlement's Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint..</param>
            <returns>Returns the Models.V1Settlement response from the API call.</returns>
        </member>
        <member name="M:Square.Apis.V1TransactionsApi.RetrieveSettlementAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Provides comprehensive information for a single settlement..
            The returned `Settlement` objects include an `entries` field that lists.
            the transactions that contribute to the settlement total. Most.
            settlement entries correspond to a payment payout, but settlement.
            entries are also generated for less common events, like refunds, manual.
            adjustments, or chargeback holds..
            Square initiates its regular deposits as indicated in the.
            [Deposit Options with Square](https://squareup.com/help/us/en/article/3807).
            help article. Details for a regular deposit are usually not available.
            from Connect API endpoints before 10 p.m. PST the same day..
            Square does not know when an initiated settlement **completes**, only.
            whether it has failed. A completed settlement is typically reflected in.
            a bank account within 3 business days, but in exceptional cases it may.
            take longer..
            </summary>
            <param name="locationId">Required parameter: The ID of the settlements's associated location..</param>
            <param name="settlementId">Required parameter: The settlement's Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint..</param>
            <param name="cancellationToken"> cancellationToken. </param>
            <returns>Returns the Models.V1Settlement response from the API call.</returns>
        </member>
        <member name="T:Square.Authentication.AccessTokenManager">
            <summary>
            AccessTokenManager.
            </summary>
        </member>
        <member name="M:Square.Authentication.AccessTokenManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Authentication.AccessTokenManager"/> class.
            </summary>
            <param name="accessToken">accessToken.</param>
        </member>
        <member name="P:Square.Authentication.AccessTokenManager.AccessToken">
            <summary>
            Gets accessToken.
            </summary>
        </member>
        <member name="M:Square.Authentication.AccessTokenManager.Equals(System.String)">
            <summary>
            Check if credentials match.
            </summary>
            <param name="accessToken"> AccessToken.</param>
            <returns> The boolean value.</returns>
        </member>
        <member name="M:Square.Authentication.AccessTokenManager.Apply(Square.Http.Request.HttpRequest)">
            <summary>
            Adds authentication to the given HttpRequest.
            </summary>
            <param name="httpRequest">Http Request.</param>
            <returns>Returns the httpRequest after adding authentication.</returns>
        </member>
        <member name="M:Square.Authentication.AccessTokenManager.ApplyAsync(Square.Http.Request.HttpRequest)">
            <summary>
            Adds authentication to the given HttpRequest.
            </summary>
            <param name="httpRequest">Http Request.</param>
            <returns>Returns the httpRequest after adding authentication.</returns>
        </member>
        <member name="P:Square.Authentication.IAccessTokenCredentials.AccessToken">
            <summary>
            Gets accessToken.
            </summary>
        </member>
        <member name="M:Square.Authentication.IAccessTokenCredentials.Equals(System.String)">
            <summary>
             Returns true if credentials matched.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Square.Authentication.IAuthManager" -->
        <member name="M:Square.Authentication.IAuthManager.Apply(Square.Http.Request.HttpRequest)">
            <summary>
            Add authentication information to the HTTP Request.
            </summary>
            <param name="httpRequest">The http request object on which authentication will be applied.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Authentication.IAuthManager.ApplyAsync(Square.Http.Request.HttpRequest)">
            <summary>
            Asynchronously add authentication information to the HTTP Request.
            </summary>
            <param name="httpRequest">The http request object on which authentication will be applied.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Square.Environment">
            <summary>
            Available environments.
            </summary>
        </member>
        <member name="F:Square.Environment.Production">
            <summary>
            Production.
            </summary>
        </member>
        <member name="F:Square.Environment.Sandbox">
            <summary>
            Sandbox.
            </summary>
        </member>
        <member name="F:Square.Environment.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="T:Square.Exceptions.ApiException">
            <summary>
            This is the base class for all exceptions that represent an error response
            from the server.
            </summary>
        </member>
        <member name="M:Square.Exceptions.ApiException.#ctor(System.String,Square.Http.Client.HttpContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Exceptions.ApiException"/> class.
            </summary>
            <param name="reason"> The reason for throwing exception.</param>
            <param name="context"> The HTTP context that encapsulates request and response objects.</param>
        </member>
        <member name="P:Square.Exceptions.ApiException.ResponseCode">
            <summary>
            Gets the HTTP response code from the API request.
            </summary>
        </member>
        <member name="P:Square.Exceptions.ApiException.HttpContext">
            <summary>
            Gets or sets the HttpContext for the request and response.
            </summary>
        </member>
        <member name="P:Square.Exceptions.ApiException.Errors">
            <summary>
            Gets or sets the list of errors.
            </summary>
        </member>
        <member name="P:Square.Exceptions.ApiException.Data">
            <summary>
            Gets or sets the data about the steps that completed successfully before
            an error was raised. This field is currently only populated for the PaymentsApi.CreatePayment
            endpoint.
            </summary>
        </member>
        <member name="T:Square.Http.Client.FileStreamInfo">
            <summary>
            An DTO class to capture information for file uploads.
            </summary>
        </member>
        <member name="M:Square.Http.Client.FileStreamInfo.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.FileStreamInfo"/> class.
            </summary>
            <param name="stream">The stream object with read access to the file data.</param>
            <param name="fileName">Optional file name associated with the stream.</param>
            <param name="contentType">Optional file content type associated with the stream.</param>
        </member>
        <member name="P:Square.Http.Client.FileStreamInfo.FileStream">
            <summary>
            Gets the stream object with read access to the file data.
            </summary>
        </member>
        <member name="P:Square.Http.Client.FileStreamInfo.FileName">
            <summary>
            Gets name of the file associated with the stream.
            </summary>
        </member>
        <member name="P:Square.Http.Client.FileStreamInfo.ContentType">
            <summary>
            Gets content type of the file associated with the stream.
            </summary>
        </member>
        <member name="T:Square.Http.Client.HttpCallBack">
            <summary>
            HttpCallBack.
            </summary>
        </member>
        <member name="P:Square.Http.Client.HttpCallBack.Request">
            <summary>
            Gets http request.
            </summary>
        </member>
        <member name="P:Square.Http.Client.HttpCallBack.Response">
            <summary>
            Gets http response.
            </summary>
        </member>
        <member name="M:Square.Http.Client.HttpCallBack.OnBeforeHttpRequestEventHandler(Square.Http.Client.IHttpClient,Square.Http.Request.HttpRequest)">
            <summary>
            BeforeHttpRequestEventHandler.
            </summary>
            <param name="source">Http Client.</param>
            <param name="request">Http Request.</param>
        </member>
        <member name="M:Square.Http.Client.HttpCallBack.OnAfterHttpResponseEventHandler(Square.Http.Client.IHttpClient,Square.Http.Response.HttpResponse)">
            <summary>
            AfterHttpResponseEventHandler.
            </summary>
            <param name="source">Http Client.</param>
            <param name="response">Http Response.</param>
        </member>
        <member name="T:Square.Http.Client.HttpClientConfiguration">
            <summary>
            HttpClientConfiguration represents the current state of the Http Client.
            </summary>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.HttpClientConfiguration"/>
            class.
            </summary>
        </member>
        <member name="P:Square.Http.Client.HttpClientConfiguration.Timeout">
            <summary>
            Gets Http client timeout.
            </summary>
        </member>
        <member name="P:Square.Http.Client.HttpClientConfiguration.NumberOfRetries">
            <summary>
            Gets Number of times the request is retried.
            </summary>
        </member>
        <member name="P:Square.Http.Client.HttpClientConfiguration.BackoffFactor">
            <summary>
            Gets Exponential backoff factor for duration between retry calls.
            </summary>
        </member>
        <member name="P:Square.Http.Client.HttpClientConfiguration.RetryInterval">
            <summary>
            Gets The time interval between the endpoint calls.
            </summary>
        </member>
        <member name="P:Square.Http.Client.HttpClientConfiguration.BackoffMax">
            <summary>
            Gets The maximum back off time.
            </summary>
        </member>
        <member name="P:Square.Http.Client.HttpClientConfiguration.StatusCodesToRetry">
            <summary>
            Gets List of Http status codes to invoke retry.
            </summary>
        </member>
        <member name="P:Square.Http.Client.HttpClientConfiguration.RequestMethodsToRetry">
            <summary>
            Gets List of Http request methods to invoke retry.
            </summary>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.ToBuilder">
            <summary>
            Creates an object of the HttpClientConfiguration using the values provided for the builder.
            </summary>
            <returns>Builder.</returns>
        </member>
        <member name="T:Square.Http.Client.HttpClientConfiguration.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.Builder.Timeout(System.TimeSpan)">
            <summary>
            Sets the Timeout.
            </summary>
            <param name="timeout"> Timeout. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.Builder.NumberOfRetries(System.Int32)">
            <summary>
            Sets the NumberOfRetries.
            </summary>
            <param name="numberOfRetries"> NumberOfRetries. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.Builder.BackoffFactor(System.Int32)">
            <summary>
            Sets the BackoffFactor.
            </summary>
            <param name="backoffFactor"> BackoffFactor. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.Builder.RetryInterval(System.Double)">
            <summary>
            Sets the RetryInterval.
            </summary>
            <param name="retryInterval"> RetryInterval. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.Builder.BackoffMax(System.TimeSpan)">
            <summary>
            Sets the BackoffMax.
            </summary>
            <param name="backoffMax"> BackoffMax. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.Builder.StatusCodesToRetry(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Sets the StatusCodesToRetry.
            </summary>
            <param name="statusCodesToRetry"> StatusCodesToRetry. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.Builder.RequestMethodsToRetry(System.Collections.Generic.IList{System.Net.Http.HttpMethod})">
            <summary>
            Sets the RequestMethodsToRetry.
            </summary>
            <param name="requestMethodsToRetry"> RequestMethodsToRetry. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientConfiguration.Builder.Build">
            <summary>
            Creates an object of the HttpClientConfiguration using the values provided for the builder.
            </summary>
            <returns>HttpClientConfiguration.</returns>
        </member>
        <member name="T:Square.Http.Client.HttpClientWrapper">
            <summary>
            HttpClientWrapper.
            </summary>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.HttpClientWrapper"/> class.
            </summary>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.#ctor(Square.Http.Client.HttpClientConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.HttpClientWrapper"/> class.
            </summary>
            <param name="httpClientConfig"> HttpClientConfiguration object.</param>
        </member>
        <member name="E:Square.Http.Client.HttpClientWrapper.OnBeforeHttpRequestEvent">
            <summary>
            OnBeforeHttpRequestEvent.
            </summary>
        </member>
        <member name="E:Square.Http.Client.HttpClientWrapper.OnAfterHttpResponseEvent">
            <summary>
            OnAfterHttpResponseEvent.
            </summary>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.ExecuteAsString(Square.Http.Request.HttpRequest)">
            <summary>
            Executes the http request.
            </summary>
            <param name="request">Http request.</param>
            <returns>HttpStringResponse.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.ExecuteAsStringAsync(Square.Http.Request.HttpRequest,System.Threading.CancellationToken)">
            <summary>
            Executes the http request asynchronously.
            </summary>
            <param name="request">Http request.</param>
            <param name="cancellationToken"> cancellationToken.</param>
            <returns>Returns the HttpStringResponse.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.ExecuteAsBinary(Square.Http.Request.HttpRequest)">
            <summary>
            Executes the http request.
            </summary>
            <param name="request">Http request.</param>
            <returns>HttpResponse.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.ExecuteAsBinaryAsync(Square.Http.Request.HttpRequest,System.Threading.CancellationToken)">
            <summary>
            Executes the http request asynchronously.
            </summary>
            <param name="request">Http request.</param>
            <param name="cancellationToken">cancellationToken.</param>
            <returns>HttpResponse.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Get http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <param name="headers">headers.</param>
            <param name="queryParameters">queryParameters.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.Get(System.String)">
            <summary>
            Get http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.Post(System.String)">
            <summary>
            Post http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.Put(System.String)">
            <summary>
            Put http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.Delete(System.String)">
            <summary>
            Delete http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.Patch(System.String)">
            <summary>
            Patch http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.Post(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Post http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <param name="headers">headers.</param>
            <param name="formParameters">formParameters.</param>
            <param name="queryParameters">queryParameters.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.PostBody(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Post http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <param name="headers">headers.</param>
            <param name="body">body.</param>
            <param name="queryParameters">queryParameters.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.Put(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Put http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <param name="headers">headers.</param>
            <param name="formParameters">formParameters.</param>
            <param name="queryParameters">queryParameters.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.PutBody(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Put http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <param name="headers">headers.</param>
            <param name="body">body.</param>
            <param name="queryParameters">queryParameters.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Patch http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <param name="headers">headers.</param>
            <param name="formParameters">formParameters.</param>
            <param name="queryParameters">queryParameters.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.PatchBody(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Patch http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <param name="headers">headers.</param>
            <param name="body">body.</param>
            <param name="queryParameters">queryParameters.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Delete http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <param name="headers">headers.</param>
            <param name="formParameters">formParameters.</param>
            <param name="queryParameters">queryParameters.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="M:Square.Http.Client.HttpClientWrapper.DeleteBody(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Delete http request.
            </summary>
            <param name="queryUrl">queryUrl.</param>
            <param name="headers">headers.</param>
            <param name="body">body.</param>
            <param name="queryParameters">queryParameters.</param>
            <param name="username">username.</param>
            <param name="password">password.</param>
            <returns>HttpRequest.</returns>
        </member>
        <member name="T:Square.Http.Client.HttpContext">
            <summary>
            Represents the contextual information of HTTP request and response.
            </summary>
        </member>
        <member name="M:Square.Http.Client.HttpContext.#ctor(Square.Http.Request.HttpRequest,Square.Http.Response.HttpResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.HttpContext"/> class.
            </summary>
            <param name="request">The http request in the current context.</param>
            <param name="response">The http response in the current context.</param>
        </member>
        <member name="P:Square.Http.Client.HttpContext.Request">
            <summary>
            Gets the http request in the current context.
            </summary>
        </member>
        <member name="P:Square.Http.Client.HttpContext.Response">
            <summary>
            Gets the http response in the current context.
            </summary>
        </member>
        <member name="M:Square.Http.Client.HttpContext.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Square.Http.Client.OnBeforeHttpRequestEventHandler">
            <summary>
            Delegate to handle the event on before http request. This event is raised before any
            network call is made, and can be used for logging, request modification, appending
            additional headers etc.
            </summary>
            <param name="source">The source HttpClient that is going to make the network call.</param>
            <param name="request">The underlying HttpRequest being sent over the network.</param>
        </member>
        <member name="T:Square.Http.Client.OnAfterHttpResponseEventHandler">
            <summary>
            Delegate to handle the event on after http response. This event is raised after any
            network response is recieved, and can be used for logging, response modification, extracting
            additional information etc.
            </summary>
            <param name="source">The source HttpClient that recieved the response from the network call.</param>
            <param name="response">The underlying HttpResponse recieved from the network.</param>
        </member>
        <member name="T:Square.Http.Client.IHttpClient">
            <summary>
            IHttpClient.
            </summary>
        </member>
        <member name="E:Square.Http.Client.IHttpClient.OnBeforeHttpRequestEvent">
            <summary>
            Event raised before an Http request is sent over the network
            This event can be used for logging, request modification, appending
            additional headers etc.
            </summary>
        </member>
        <member name="E:Square.Http.Client.IHttpClient.OnAfterHttpResponseEvent">
            <summary>
            Event raised after an Http response is recieved from the network.
            This event can be used for logging, response modification, extracting
            additional information etc.
            </summary>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.ExecuteAsString(Square.Http.Request.HttpRequest)">
            <summary>
            Execute a given HttpRequest to get string response back.
            </summary>
            <param name="request">The given HttpRequest to execute.</param>
            <returns> HttpResponse containing raw information.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.ExecuteAsBinary(Square.Http.Request.HttpRequest)">
            <summary>
            Execute a given HttpRequest to get binary response back.
            </summary>
            <param name="request">The given HttpRequest to execute.</param>
            <returns> HttpResponse containing raw information.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.ExecuteAsStringAsync(Square.Http.Request.HttpRequest,System.Threading.CancellationToken)">
            <summary>
            Execute a given HttpRequest to get async string response back.
            </summary>
            <param name="request">The given HttpRequest to execute.</param>
            <param name="cancellationToken">CancellationToken.</param>
            <returns> HttpResponse containing raw information.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.ExecuteAsBinaryAsync(Square.Http.Request.HttpRequest,System.Threading.CancellationToken)">
            <summary>
            Execute a given HttpRequest to get async binary response back.
            </summary>
            <param name="request">The given HttpRequest to execute.</param>
            <param name="cancellationToken">CancellationToken.</param>
            <returns> HttpResponse containing raw information.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.Get(System.String)">
            <summary>
            Create a simple HTTP GET request given the URL.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <returns>HttpRequest initialised with the url specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.Post(System.String)">
            <summary>
            Create a simple HTTP POST request given the URL.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <returns> HttpRequest initialised with the url specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.Put(System.String)">
            <summary>
            Create a simple HTTP PUT request given the URL.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <returns> HttpRequest initialised with the url specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.Delete(System.String)">
            <summary>
            Create a simple HTTP DELETE request given the URL.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <returns> HttpRequest initialised with the url specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.Patch(System.String)">
            <summary>
            Create a simple HTTP PATCH request given the URL.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <returns> HttpRequest initialised with the url specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Create a simple HTTP GET request given relavent parameters.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <param name="headers">HTTP headers that should be included.</param>
            <param name="queryParameters">Query parameters to be included.</param>
            <param name="username">Basic Auth username.</param>
            <param name="password">Basic Auth password.</param>
            <returns> HttpRequest initialised with the http parameters specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.Post(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
             Create a simple HTTP POST request given relavent parameters.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <param name="headers">HTTP headers that should be included.</param>
            <param name="formParameters">Form parameters to be included.</param>
            <param name="queryParameters">Query parameters to be included.</param>
            <param name="username">Basic Auth username.</param>
            <param name="password">Basic Auth password.</param>
            <returns> HttpRequest initialised with the http parameters specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.PostBody(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Create a simple HTTP POST with a body request given relavent parameters.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <param name="headers">HTTP headers that should be included.</param>
            <param name="body">The body/payload of the response.</param>
            <param name="queryParameters">Query parameters to be included.</param>
            <param name="username">Basic Auth username.</param>
            <param name="password">Basic Auth password.</param>
            <returns> HttpRequest initialised with the http parameters specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.Put(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
             Create a simple HTTP PUT request given relavent parameters.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <param name="headers">HTTP headers that should be included.</param>
            <param name="formParameters">Form parameters to be included.</param>
            <param name="queryParameters">Query parameters to be included.</param>
            <param name="username">Basic Auth username.</param>
            <param name="password">Basic Auth password.</param>
            <returns> HttpRequest initialised with the http parameters specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.PutBody(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Create a simple HTTP PUT with a body request given relavent parameters.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <param name="headers">HTTP headers that should be included.</param>
            <param name="body">The body/payload of the response.</param>
            <param name="queryParameters">Query parameters to be included.</param>
            <param name="username">Basic Auth username.</param>
            <param name="password">Basic Auth password.</param>
            <returns> HttpRequest initialised with the http parameters specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.Patch(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
             Create a simple HTTP PATCH request given relavent parameters.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <param name="headers">HTTP headers that should be included.</param>
            <param name="formParameters">Form parameters to be included.</param>
            <param name="queryParameters">Query parameters to be included.</param>
            <param name="username">Basic Auth username.</param>
            <param name="password">Basic Auth password.</param>
            <returns> HttpRequest initialised with the http parameters specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.PatchBody(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Create a simple HTTP Patch with a body request given relavent parameters.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <param name="headers">HTTP headers that should be included.</param>
            <param name="body">The body/payload of the response.</param>
            <param name="queryParameters">Query parameters to be included.</param>
            <param name="username">Basic Auth username.</param>
            <param name="password">Basic Auth password.</param>
            <returns> HttpRequest initialised with the http parameters specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.Delete(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
             Create a simple HTTP DELETE request given relavent parameters.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <param name="headers">HTTP headers that should be included.</param>
            <param name="formParameters">Form parameters to be included.</param>
            <param name="queryParameters">Query parameters to be included.</param>
            <param name="username">Basic Auth username.</param>
            <param name="password">Basic Auth password.</param>
            <returns> HttpRequest initialised with the http parameters specified.</returns>
        </member>
        <member name="M:Square.Http.Client.IHttpClient.DeleteBody(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Create a simple HTTP Delete with a body request given relavent parameters.
            </summary>
            <param name="queryUrl">Url the request should be sent to.</param>
            <param name="headers">HTTP headers that should be included.</param>
            <param name="body">The body/payload of the response.</param>
            <param name="queryParameters">Query parameters to be included.</param>
            <param name="username">Basic Auth username.</param>
            <param name="password">Basic Auth password.</param>
            <returns> HttpRequest initialised with the http parameters specified.</returns>
        </member>
        <member name="T:Square.Http.Client.IHttpClientConfiguration">
            <summary>
            Represents the current state of the Http Client.
            </summary>
        </member>
        <member name="P:Square.Http.Client.IHttpClientConfiguration.Timeout">
            <summary>
            Http client timeout.
            </summary>
        </member>
        <member name="P:Square.Http.Client.IHttpClientConfiguration.NumberOfRetries">
            <summary>
            Number of times the request is retried.
            </summary>
        </member>
        <member name="P:Square.Http.Client.IHttpClientConfiguration.BackoffFactor">
            <summary>
            Exponential backoff factor for duration between retry calls.
            </summary>
        </member>
        <member name="P:Square.Http.Client.IHttpClientConfiguration.RetryInterval">
            <summary>
            The time interval between the endpoint calls.
            </summary>
        </member>
        <member name="P:Square.Http.Client.IHttpClientConfiguration.BackoffMax">
            <summary>
            The maximum back off time.
            </summary>
        </member>
        <member name="P:Square.Http.Client.IHttpClientConfiguration.StatusCodesToRetry">
            <summary>
            List of Http status codes to invoke retry.
            </summary>
        </member>
        <member name="P:Square.Http.Client.IHttpClientConfiguration.RequestMethodsToRetry">
            <summary>
            List of Http request methods to invoke retry.
            </summary>
        </member>
        <member name="T:Square.Http.Client.MultipartByteArrayContent">
            <summary>
            MultipartByteArrayContent.
            </summary>
        </member>
        <member name="M:Square.Http.Client.MultipartByteArrayContent.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.MultipartByteArrayContent"/> class.
            </summary>
            <param name="byteArray">byteArray.</param>
        </member>
        <member name="M:Square.Http.Client.MultipartByteArrayContent.#ctor(System.Byte[],System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.MultipartByteArrayContent"/> class.
            </summary>
            <param name="byteArray"> byteArray.</param>
            <param name="headers"> headers.</param>
        </member>
        <member name="P:Square.Http.Client.MultipartByteArrayContent.ByteArray">
            <summary>
            Gets byte array.
            </summary>
        </member>
        <member name="M:Square.Http.Client.MultipartByteArrayContent.Rewind">
            <summary>
            Rewind the stream.
            </summary>
        </member>
        <member name="M:Square.Http.Client.MultipartByteArrayContent.ToHttpContent(System.String)">
            <summary>
            ToHttpContent.
            </summary>
            <param name="contentDispositionName"> contentDispositionName .</param>
            <returns>HttpContent.</returns>
        </member>
        <member name="T:Square.Http.Client.MultipartContent">
            <summary>
            MultipartContent.
            </summary>
        </member>
        <member name="M:Square.Http.Client.MultipartContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.MultipartContent"/> class.
            </summary>
        </member>
        <member name="M:Square.Http.Client.MultipartContent.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.MultipartContent"/> class.
            </summary>
            <param name="headers">headers.</param>
        </member>
        <member name="P:Square.Http.Client.MultipartContent.Headers">
            <summary>
            Gets headers.
            </summary>
        </member>
        <member name="M:Square.Http.Client.MultipartContent.Rewind">
            <summary>
            Rewind the stream.
            </summary>
        </member>
        <member name="M:Square.Http.Client.MultipartContent.ToHttpContent(System.String)">
            <summary>
            ToHttpContent.
            </summary>
            <param name="contentDispositionName">contentDispositionName.</param>
            <returns>HttpContent.</returns>
        </member>
        <member name="M:Square.Http.Client.MultipartContent.SetHeaders(System.String,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            SetHeaders.
            </summary>
            <param name="contentDispositionName">contentDispositionName.</param>
            <param name="headers">headers.</param>
        </member>
        <member name="M:Square.Http.Client.MultipartContent.IsReservedHeader(System.String)">
            <summary>
            IsReservedHeader.
            </summary>
            <param name="key">key.</param>
            <returns>boolean.</returns>
        </member>
        <member name="T:Square.Http.Client.MultipartFileContent">
            <summary>
            MultipartFileContent.
            </summary>
        </member>
        <member name="M:Square.Http.Client.MultipartFileContent.#ctor(Square.Http.Client.FileStreamInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.MultipartFileContent"/> class.
            </summary>
            <param name="file">file.</param>
        </member>
        <member name="M:Square.Http.Client.MultipartFileContent.#ctor(Square.Http.Client.FileStreamInfo,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IReadOnlyCollection{System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Client.MultipartFileContent"/> class.
            </summary>
            <param name="file">file.</param>
            <param name="headers">headers.</param>
        </member>
        <member name="P:Square.Http.Client.MultipartFileContent.File">
            <summary>
            Gets file.
            </summary>
        </member>
        <member name="M:Square.Http.Client.MultipartFileContent.Rewind">
            <summary>
            Rewind the stream.
            </summary>
        </member>
        <member name="M:Square.Http.Client.MultipartFileContent.ToHttpContent(System.String)">
            <summary>
            ToHttpContent.
            </summary>
            <param name="contentDispositionName">contentDispositionName.</param>
            <returns>HttpContent.</returns>
        </member>
        <member name="M:Square.Http.Client.MultipartFileContent.SetHeaders(System.String,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            SetHeaders.
            </summary>
            <param name="contentDispositionName">contentDispositionName.</param>
            <param name="headers">headers.</param>
        </member>
        <member name="T:Square.Http.Request.HttpRequest">
            <summary>
            HttpRequest stores necessary information about the http request.
            </summary>
        </member>
        <member name="M:Square.Http.Request.HttpRequest.#ctor(System.Net.Http.HttpMethod,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Request.HttpRequest"/> class.
            </summary>
            <param name="method">Http verb to use for the http request.</param>
            <param name="queryUrl">The query url for the http request.</param>
        </member>
        <member name="M:Square.Http.Request.HttpRequest.#ctor(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Request.HttpRequest"/> class.
            </summary>
            <param name="method">Http verb to use for the http request.</param>
            <param name="queryUrl">The query url for the http request.</param>
            <param name="headers">Headers to send with the request.</param>
            <param name="username">Basic auth username.</param>
            <param name="password">Basic auth password.</param>
            <param name="queryParameters">QueryParameters.</param>
        </member>
        <member name="M:Square.Http.Request.HttpRequest.#ctor(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Request.HttpRequest"/> class.
            </summary>
            <param name="method">Http verb to use for the http request.</param>
            <param name="queryUrl">The query url for the http request.</param>
            <param name="headers">Headers to send with the request.</param>
            <param name="body">The string to use as raw body of the http request.</param>
            <param name="username">Basic auth username.</param>
            <param name="password">Basic auth password.</param>
            <param name="queryParameters">QueryParameters.</param>
        </member>
        <member name="M:Square.Http.Request.HttpRequest.#ctor(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Request.HttpRequest"/> class.
            </summary>
            <param name="method">Http verb to use for the http request.</param>
            <param name="queryUrl">The query url for the http request.</param>
            <param name="headers">Headers to send with the request.</param>
            <param name="formParameters">Form parameters collection for the request.</param>
            <param name="username">Basic auth username.</param>
            <param name="password">Basic auth password.</param>
            <param name="queryParameters">QueryParameters.</param>
        </member>
        <member name="P:Square.Http.Request.HttpRequest.HttpMethod">
            <summary>
            Gets the HTTP verb to use for this request.
            </summary>
        </member>
        <member name="P:Square.Http.Request.HttpRequest.QueryUrl">
            <summary>
            Gets the query url for the http request.
            </summary>
        </member>
        <member name="P:Square.Http.Request.HttpRequest.QueryParameters">
            <summary>
            Gets the query parameters collection for the current http request.
            </summary>
        </member>
        <member name="P:Square.Http.Request.HttpRequest.Headers">
            <summary>
            Gets the headers collection for the current http request.
            </summary>
        </member>
        <member name="P:Square.Http.Request.HttpRequest.FormParameters">
            <summary>
            Gets the form parameters for the current http request.
            </summary>
        </member>
        <member name="P:Square.Http.Request.HttpRequest.Body">
            <summary>
            Gets the optional raw string to send as request body.
            </summary>
        </member>
        <member name="P:Square.Http.Request.HttpRequest.Username">
            <summary>
            Gets the optional username for Basic Auth.
            </summary>
        </member>
        <member name="P:Square.Http.Request.HttpRequest.Password">
            <summary>
            Gets the optional password for Basic Auth.
            </summary>
        </member>
        <member name="M:Square.Http.Request.HttpRequest.AddHeaders(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Concatenate values from a Dictionary to this object.
            </summary>
            <param name="headersToAdd"> headersToAdd. </param>
            <returns>Dictionary.</returns>
        </member>
        <member name="M:Square.Http.Request.HttpRequest.AddQueryParameters(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Concatenate values from a Dictionary to query parameters dictionary.
            </summary>
            <param name="queryParamaters"> queryParamaters. </param>
        </member>
        <member name="M:Square.Http.Request.HttpRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Square.Http.Response.HttpResponse">
            <summary>
            HttpResponse stores necessary information about the http response.
            </summary>
        </member>
        <member name="M:Square.Http.Response.HttpResponse.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Response.HttpResponse"/> class.
            </summary>
            <param name="statusCode">statusCode.</param>
            <param name="headers">headers.</param>
            <param name="rawBody">rawBody.</param>
        </member>
        <member name="P:Square.Http.Response.HttpResponse.StatusCode">
            <summary>
            Gets the HTTP Status code of the http response.
            </summary>
        </member>
        <member name="P:Square.Http.Response.HttpResponse.Headers">
            <summary>
            Gets the headers of the http response.
            </summary>
        </member>
        <member name="P:Square.Http.Response.HttpResponse.RawBody">
            <summary>
            Gets the stream of the body.
            </summary>
        </member>
        <member name="M:Square.Http.Response.HttpResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Square.Http.Response.HttpStringResponse">
            <summary>
            HttpStringResponse inherits from HttpResponse and has additional property
            of string body.
            </summary>
        </member>
        <member name="M:Square.Http.Response.HttpStringResponse.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Http.Response.HttpStringResponse"/> class.
            </summary>
            <param name="statusCode">statusCode.</param>
            <param name="headers">headers.</param>
            <param name="rawBody">rawBody.</param>
            <param name="body">body.</param>
        </member>
        <member name="P:Square.Http.Response.HttpStringResponse.Body">
            <summary>
            Gets the raw string body of the http response.
            </summary>
        </member>
        <member name="M:Square.Http.Response.HttpStringResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Square.IConfiguration">
            <summary>
            IConfiguration.
            </summary>
        </member>
        <member name="P:Square.IConfiguration.SquareVersion">
            <summary>
            Gets Square Connect API versions
            </summary>
        </member>
        <member name="P:Square.IConfiguration.Environment">
            <summary>
            Gets Current API environment.
            </summary>
        </member>
        <member name="P:Square.IConfiguration.CustomUrl">
            <summary>
            Gets Sets the base URL requests are made to. Defaults to `https://connect.squareup.com`
            </summary>
        </member>
        <member name="P:Square.IConfiguration.AccessToken">
            <summary>
            Gets the OAuth 2.0 Access Token.
            </summary>
        </member>
        <member name="M:Square.IConfiguration.GetBaseUri(Square.Server)">
            <summary>
            Gets the URL for a particular alias in the current environment and appends it with template parameters.
            </summary>
            <param name="alias">Default value:DEFAULT.</param>
            <returns>Returns the baseurl.</returns>
        </member>
        <member name="T:Square.ISquareClient">
            <summary>
            ISquareClient.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.MobileAuthorizationApi">
            <summary>
            Gets instance for IMobileAuthorizationApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.OAuthApi">
            <summary>
            Gets instance for IOAuthApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.V1EmployeesApi">
            <summary>
            Gets instance for IV1EmployeesApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.V1TransactionsApi">
            <summary>
            Gets instance for IV1TransactionsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.ApplePayApi">
            <summary>
            Gets instance for IApplePayApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.BankAccountsApi">
            <summary>
            Gets instance for IBankAccountsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.BookingsApi">
            <summary>
            Gets instance for IBookingsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.CashDrawersApi">
            <summary>
            Gets instance for ICashDrawersApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.CatalogApi">
            <summary>
            Gets instance for ICatalogApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.CustomersApi">
            <summary>
            Gets instance for ICustomersApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.CustomerGroupsApi">
            <summary>
            Gets instance for ICustomerGroupsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.CustomerSegmentsApi">
            <summary>
            Gets instance for ICustomerSegmentsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.DevicesApi">
            <summary>
            Gets instance for IDevicesApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.DisputesApi">
            <summary>
            Gets instance for IDisputesApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.EmployeesApi">
            <summary>
            Gets instance for IEmployeesApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.InventoryApi">
            <summary>
            Gets instance for IInventoryApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.InvoicesApi">
            <summary>
            Gets instance for IInvoicesApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.LaborApi">
            <summary>
            Gets instance for ILaborApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.LocationsApi">
            <summary>
            Gets instance for ILocationsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.CheckoutApi">
            <summary>
            Gets instance for ICheckoutApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.TransactionsApi">
            <summary>
            Gets instance for ITransactionsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.LoyaltyApi">
            <summary>
            Gets instance for ILoyaltyApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.MerchantsApi">
            <summary>
            Gets instance for IMerchantsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.OrdersApi">
            <summary>
            Gets instance for IOrdersApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.PaymentsApi">
            <summary>
            Gets instance for IPaymentsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.RefundsApi">
            <summary>
            Gets instance for IRefundsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.SitesApi">
            <summary>
            Gets instance for ISitesApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.SnippetsApi">
            <summary>
            Gets instance for ISnippetsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.SubscriptionsApi">
            <summary>
            Gets instance for ISubscriptionsApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.TeamApi">
            <summary>
            Gets instance for ITeamApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.TerminalApi">
            <summary>
            Gets instance for ITerminalApi.
            </summary>
        </member>
        <member name="P:Square.ISquareClient.SdkVersion">
            <summary>
            Gets the current version of the SDK.
            </summary>
        </member>
        <member name="T:Square.Models.AcceptDisputeResponse">
            <summary>
            AcceptDisputeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.AcceptDisputeResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Dispute)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.AcceptDisputeResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="dispute">dispute.</param>
        </member>
        <member name="P:Square.Models.AcceptDisputeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.AcceptDisputeResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.AcceptDisputeResponse.Dispute">
            <summary>
            Represents a dispute a cardholder initiated with their bank.
            </summary>
        </member>
        <member name="M:Square.Models.AcceptDisputeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AcceptDisputeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AcceptDisputeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AcceptDisputeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.AcceptDisputeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.AcceptDisputeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.AcceptDisputeResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AcceptDisputeResponse.Builder.Dispute(Square.Models.Dispute)">
            <summary>
            Dispute.
            </summary>
            <param name="dispute"> dispute. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AcceptDisputeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> AcceptDisputeResponse. </returns>
        </member>
        <member name="T:Square.Models.AccumulateLoyaltyPointsRequest">
            <summary>
            AccumulateLoyaltyPointsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsRequest.#ctor(Square.Models.LoyaltyEventAccumulatePoints,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.AccumulateLoyaltyPointsRequest"/> class.
            </summary>
            <param name="accumulatePoints">accumulate_points.</param>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.AccumulateLoyaltyPointsRequest.AccumulatePoints">
            <summary>
            Provides metadata when the event `type` is `ACCUMULATE_POINTS`.
            </summary>
        </member>
        <member name="P:Square.Models.AccumulateLoyaltyPointsRequest.IdempotencyKey">
            <summary>
            A unique string that identifies the `AccumulateLoyaltyPoints` request.
            Keys can be any valid string but must be unique for every request.
            </summary>
        </member>
        <member name="P:Square.Models.AccumulateLoyaltyPointsRequest.LocationId">
            <summary>
            The [location]($m/Location) where the purchase was made.
            </summary>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.AccumulateLoyaltyPointsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsRequest.Builder.AccumulatePoints(Square.Models.LoyaltyEventAccumulatePoints)">
            <summary>
            AccumulatePoints.
            </summary>
            <param name="accumulatePoints"> accumulatePoints. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> AccumulateLoyaltyPointsRequest. </returns>
        </member>
        <member name="T:Square.Models.AccumulateLoyaltyPointsResponse">
            <summary>
            AccumulateLoyaltyPointsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.LoyaltyEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.AccumulateLoyaltyPointsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="mEvent">event.</param>
        </member>
        <member name="P:Square.Models.AccumulateLoyaltyPointsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.AccumulateLoyaltyPointsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.AccumulateLoyaltyPointsResponse.MEvent">
            <summary>
            Provides information about a loyalty event.
            For more information, see [Loyalty events](https://developer.squareup.com/docs/loyalty-api/overview/#loyalty-events).
            </summary>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.AccumulateLoyaltyPointsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsResponse.Builder.MEvent(Square.Models.LoyaltyEvent)">
            <summary>
            MEvent.
            </summary>
            <param name="mEvent"> mEvent. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AccumulateLoyaltyPointsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> AccumulateLoyaltyPointsResponse. </returns>
        </member>
        <member name="T:Square.Models.ACHDetails">
            <summary>
            ACHDetails.
            </summary>
        </member>
        <member name="M:Square.Models.ACHDetails.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ACHDetails"/> class.
            </summary>
            <param name="routingNumber">routing_number.</param>
            <param name="accountNumberSuffix">account_number_suffix.</param>
            <param name="accountType">account_type.</param>
        </member>
        <member name="P:Square.Models.ACHDetails.RoutingNumber">
            <summary>
            The routing number for the bank account.
            </summary>
        </member>
        <member name="P:Square.Models.ACHDetails.AccountNumberSuffix">
            <summary>
            The last few digits of the bank account number.
            </summary>
        </member>
        <member name="P:Square.Models.ACHDetails.AccountType">
            <summary>
            The type of the bank account performing the transfer. The account type can be `CHECKING`,
            `SAVINGS`, or `UNKNOWN`.
            </summary>
        </member>
        <member name="M:Square.Models.ACHDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ACHDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ACHDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ACHDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ACHDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ACHDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ACHDetails.Builder.RoutingNumber(System.String)">
            <summary>
            RoutingNumber.
            </summary>
            <param name="routingNumber"> routingNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ACHDetails.Builder.AccountNumberSuffix(System.String)">
            <summary>
            AccountNumberSuffix.
            </summary>
            <param name="accountNumberSuffix"> accountNumberSuffix. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ACHDetails.Builder.AccountType(System.String)">
            <summary>
            AccountType.
            </summary>
            <param name="accountType"> accountType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ACHDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ACHDetails. </returns>
        </member>
        <member name="T:Square.Models.AddGroupToCustomerResponse">
            <summary>
            AddGroupToCustomerResponse.
            </summary>
        </member>
        <member name="M:Square.Models.AddGroupToCustomerResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.AddGroupToCustomerResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.AddGroupToCustomerResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.AddGroupToCustomerResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.AddGroupToCustomerResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AddGroupToCustomerResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AddGroupToCustomerResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AddGroupToCustomerResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.AddGroupToCustomerResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.AddGroupToCustomerResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.AddGroupToCustomerResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AddGroupToCustomerResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> AddGroupToCustomerResponse. </returns>
        </member>
        <member name="T:Square.Models.AdditionalRecipient">
            <summary>
            AdditionalRecipient.
            </summary>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.#ctor(System.String,Square.Models.Money,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.AdditionalRecipient"/> class.
            </summary>
            <param name="locationId">location_id.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="description">description.</param>
            <param name="receivableId">receivable_id.</param>
        </member>
        <member name="P:Square.Models.AdditionalRecipient.LocationId">
            <summary>
            The location ID for a recipient (other than the merchant) receiving a portion of this tender.
            </summary>
        </member>
        <member name="P:Square.Models.AdditionalRecipient.Description">
            <summary>
            The description of the additional recipient.
            </summary>
        </member>
        <member name="P:Square.Models.AdditionalRecipient.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.AdditionalRecipient.ReceivableId">
            <summary>
            The unique ID for this [AdditionalRecipientReceivable]($m/AdditionalRecipientReceivable), assigned by the server.
            </summary>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.AdditionalRecipient.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.Builder.ReceivableId(System.String)">
            <summary>
            ReceivableId.
            </summary>
            <param name="receivableId"> receivableId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AdditionalRecipient.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> AdditionalRecipient. </returns>
        </member>
        <member name="T:Square.Models.Address">
            <summary>
            Address.
            </summary>
        </member>
        <member name="M:Square.Models.Address.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Address"/> class.
            </summary>
            <param name="addressLine1">address_line_1.</param>
            <param name="addressLine2">address_line_2.</param>
            <param name="addressLine3">address_line_3.</param>
            <param name="locality">locality.</param>
            <param name="sublocality">sublocality.</param>
            <param name="sublocality2">sublocality_2.</param>
            <param name="sublocality3">sublocality_3.</param>
            <param name="administrativeDistrictLevel1">administrative_district_level_1.</param>
            <param name="administrativeDistrictLevel2">administrative_district_level_2.</param>
            <param name="administrativeDistrictLevel3">administrative_district_level_3.</param>
            <param name="postalCode">postal_code.</param>
            <param name="country">country.</param>
            <param name="firstName">first_name.</param>
            <param name="lastName">last_name.</param>
            <param name="organization">organization.</param>
        </member>
        <member name="P:Square.Models.Address.AddressLine1">
            <summary>
            The first line of the address.
            Fields that start with `address_line` provide the address's most specific
            details, like street number, street name, and building name. They do *not*
            provide less specific details like city, state/province, or country (these
            details are provided in other fields).
            </summary>
        </member>
        <member name="P:Square.Models.Address.AddressLine2">
            <summary>
            The second line of the address, if any.
            </summary>
        </member>
        <member name="P:Square.Models.Address.AddressLine3">
            <summary>
            The third line of the address, if any.
            </summary>
        </member>
        <member name="P:Square.Models.Address.Locality">
            <summary>
            The city or town of the address.
            </summary>
        </member>
        <member name="P:Square.Models.Address.Sublocality">
            <summary>
            A civil region within the address's `locality`, if any.
            </summary>
        </member>
        <member name="P:Square.Models.Address.Sublocality2">
            <summary>
            A civil region within the address's `sublocality`, if any.
            </summary>
        </member>
        <member name="P:Square.Models.Address.Sublocality3">
            <summary>
            A civil region within the address's `sublocality_2`, if any.
            </summary>
        </member>
        <member name="P:Square.Models.Address.AdministrativeDistrictLevel1">
            <summary>
            A civil entity within the address's country. In the US, this
            is the state.
            </summary>
        </member>
        <member name="P:Square.Models.Address.AdministrativeDistrictLevel2">
            <summary>
            A civil entity within the address's `administrative_district_level_1`.
            In the US, this is the county.
            </summary>
        </member>
        <member name="P:Square.Models.Address.AdministrativeDistrictLevel3">
            <summary>
            A civil entity within the address's `administrative_district_level_2`,
            if any.
            </summary>
        </member>
        <member name="P:Square.Models.Address.PostalCode">
            <summary>
            The address's postal code.
            </summary>
        </member>
        <member name="P:Square.Models.Address.Country">
            <summary>
            Indicates the country associated with another entity, such as a business.
            Values are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).
            </summary>
        </member>
        <member name="P:Square.Models.Address.FirstName">
            <summary>
            Optional first name when it's representing recipient.
            </summary>
        </member>
        <member name="P:Square.Models.Address.LastName">
            <summary>
            Optional last name when it's representing recipient.
            </summary>
        </member>
        <member name="P:Square.Models.Address.Organization">
            <summary>
            Optional organization name when it's representing recipient.
            </summary>
        </member>
        <member name="M:Square.Models.Address.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Address.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Address.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Address.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Address.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Address.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Address.Builder.AddressLine1(System.String)">
            <summary>
            AddressLine1.
            </summary>
            <param name="addressLine1"> addressLine1. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.AddressLine2(System.String)">
            <summary>
            AddressLine2.
            </summary>
            <param name="addressLine2"> addressLine2. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.AddressLine3(System.String)">
            <summary>
            AddressLine3.
            </summary>
            <param name="addressLine3"> addressLine3. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.Locality(System.String)">
            <summary>
            Locality.
            </summary>
            <param name="locality"> locality. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.Sublocality(System.String)">
            <summary>
            Sublocality.
            </summary>
            <param name="sublocality"> sublocality. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.Sublocality2(System.String)">
            <summary>
            Sublocality2.
            </summary>
            <param name="sublocality2"> sublocality2. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.Sublocality3(System.String)">
            <summary>
            Sublocality3.
            </summary>
            <param name="sublocality3"> sublocality3. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.AdministrativeDistrictLevel1(System.String)">
            <summary>
            AdministrativeDistrictLevel1.
            </summary>
            <param name="administrativeDistrictLevel1"> administrativeDistrictLevel1. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.AdministrativeDistrictLevel2(System.String)">
            <summary>
            AdministrativeDistrictLevel2.
            </summary>
            <param name="administrativeDistrictLevel2"> administrativeDistrictLevel2. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.AdministrativeDistrictLevel3(System.String)">
            <summary>
            AdministrativeDistrictLevel3.
            </summary>
            <param name="administrativeDistrictLevel3"> administrativeDistrictLevel3. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.PostalCode(System.String)">
            <summary>
            PostalCode.
            </summary>
            <param name="postalCode"> postalCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.Country(System.String)">
            <summary>
            Country.
            </summary>
            <param name="country"> country. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.FirstName(System.String)">
            <summary>
            FirstName.
            </summary>
            <param name="firstName"> firstName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.LastName(System.String)">
            <summary>
            LastName.
            </summary>
            <param name="lastName"> lastName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.Organization(System.String)">
            <summary>
            Organization.
            </summary>
            <param name="organization"> organization. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Address.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Address. </returns>
        </member>
        <member name="T:Square.Models.AdjustLoyaltyPointsRequest">
            <summary>
            AdjustLoyaltyPointsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsRequest.#ctor(System.String,Square.Models.LoyaltyEventAdjustPoints)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.AdjustLoyaltyPointsRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="adjustPoints">adjust_points.</param>
        </member>
        <member name="P:Square.Models.AdjustLoyaltyPointsRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this `AdjustLoyaltyPoints` request.
            Keys can be any valid string, but must be unique for every request.
            </summary>
        </member>
        <member name="P:Square.Models.AdjustLoyaltyPointsRequest.AdjustPoints">
            <summary>
            Provides metadata when the event `type` is `ADJUST_POINTS`.
            </summary>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.AdjustLoyaltyPointsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsRequest.Builder.AdjustPoints(Square.Models.LoyaltyEventAdjustPoints)">
            <summary>
            AdjustPoints.
            </summary>
            <param name="adjustPoints"> adjustPoints. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> AdjustLoyaltyPointsRequest. </returns>
        </member>
        <member name="T:Square.Models.AdjustLoyaltyPointsResponse">
            <summary>
            AdjustLoyaltyPointsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.LoyaltyEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.AdjustLoyaltyPointsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="mEvent">event.</param>
        </member>
        <member name="P:Square.Models.AdjustLoyaltyPointsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.AdjustLoyaltyPointsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.AdjustLoyaltyPointsResponse.MEvent">
            <summary>
            Provides information about a loyalty event.
            For more information, see [Loyalty events](https://developer.squareup.com/docs/loyalty-api/overview/#loyalty-events).
            </summary>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.AdjustLoyaltyPointsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsResponse.Builder.MEvent(Square.Models.LoyaltyEvent)">
            <summary>
            MEvent.
            </summary>
            <param name="mEvent"> mEvent. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AdjustLoyaltyPointsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> AdjustLoyaltyPointsResponse. </returns>
        </member>
        <member name="T:Square.Models.AppointmentSegment">
            <summary>
            AppointmentSegment.
            </summary>
        </member>
        <member name="M:Square.Models.AppointmentSegment.#ctor(System.Int32,System.String,System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.AppointmentSegment"/> class.
            </summary>
            <param name="durationMinutes">duration_minutes.</param>
            <param name="serviceVariationId">service_variation_id.</param>
            <param name="teamMemberId">team_member_id.</param>
            <param name="serviceVariationVersion">service_variation_version.</param>
        </member>
        <member name="P:Square.Models.AppointmentSegment.DurationMinutes">
            <summary>
            The time span in minutes of an appointment segment.
            </summary>
        </member>
        <member name="P:Square.Models.AppointmentSegment.ServiceVariationId">
            <summary>
            The ID of the [CatalogItemVariation]($m/CatalogItemVariation) object representing the service booked in this segment.
            </summary>
        </member>
        <member name="P:Square.Models.AppointmentSegment.TeamMemberId">
            <summary>
            The ID of the [TeamMember]($m/TeamMember) object representing the team member booked in this segment.
            </summary>
        </member>
        <member name="P:Square.Models.AppointmentSegment.ServiceVariationVersion">
            <summary>
            The current version of the item variation representing the service booked in this segment.
            </summary>
        </member>
        <member name="M:Square.Models.AppointmentSegment.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AppointmentSegment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AppointmentSegment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.AppointmentSegment.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.AppointmentSegment.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.AppointmentSegment.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.AppointmentSegment.Builder.DurationMinutes(System.Int32)">
            <summary>
            DurationMinutes.
            </summary>
            <param name="durationMinutes"> durationMinutes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AppointmentSegment.Builder.ServiceVariationId(System.String)">
            <summary>
            ServiceVariationId.
            </summary>
            <param name="serviceVariationId"> serviceVariationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AppointmentSegment.Builder.TeamMemberId(System.String)">
            <summary>
            TeamMemberId.
            </summary>
            <param name="teamMemberId"> teamMemberId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AppointmentSegment.Builder.ServiceVariationVersion(System.Int64)">
            <summary>
            ServiceVariationVersion.
            </summary>
            <param name="serviceVariationVersion"> serviceVariationVersion. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.AppointmentSegment.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> AppointmentSegment. </returns>
        </member>
        <member name="T:Square.Models.Availability">
            <summary>
            Availability.
            </summary>
        </member>
        <member name="M:Square.Models.Availability.#ctor(System.String,System.String,System.Collections.Generic.IList{Square.Models.AppointmentSegment})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Availability"/> class.
            </summary>
            <param name="startAt">start_at.</param>
            <param name="locationId">location_id.</param>
            <param name="appointmentSegments">appointment_segments.</param>
        </member>
        <member name="P:Square.Models.Availability.StartAt">
            <summary>
            The RFC 3339 timestamp specifying the beginning time of the slot available for booking.
            </summary>
        </member>
        <member name="P:Square.Models.Availability.LocationId">
            <summary>
            The ID of the location available for booking.
            </summary>
        </member>
        <member name="P:Square.Models.Availability.AppointmentSegments">
            <summary>
            The list of appointment segments available for booking
            </summary>
        </member>
        <member name="M:Square.Models.Availability.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Availability.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Availability.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Availability.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Availability.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Availability.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Availability.Builder.StartAt(System.String)">
            <summary>
            StartAt.
            </summary>
            <param name="startAt"> startAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Availability.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Availability.Builder.AppointmentSegments(System.Collections.Generic.IList{Square.Models.AppointmentSegment})">
            <summary>
            AppointmentSegments.
            </summary>
            <param name="appointmentSegments"> appointmentSegments. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Availability.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Availability. </returns>
        </member>
        <member name="T:Square.Models.BalancePaymentDetails">
            <summary>
            BalancePaymentDetails.
            </summary>
        </member>
        <member name="M:Square.Models.BalancePaymentDetails.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BalancePaymentDetails"/> class.
            </summary>
            <param name="accountId">account_id.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:Square.Models.BalancePaymentDetails.AccountId">
            <summary>
            The ID of the account used to fund the payment.
            </summary>
        </member>
        <member name="P:Square.Models.BalancePaymentDetails.Status">
            <summary>
            The balance payment’s current state. The state can be COMPLETED or FAILED.
            </summary>
        </member>
        <member name="M:Square.Models.BalancePaymentDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BalancePaymentDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BalancePaymentDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BalancePaymentDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BalancePaymentDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BalancePaymentDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BalancePaymentDetails.Builder.AccountId(System.String)">
            <summary>
            AccountId.
            </summary>
            <param name="accountId"> accountId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BalancePaymentDetails.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BalancePaymentDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BalancePaymentDetails. </returns>
        </member>
        <member name="T:Square.Models.BankAccount">
            <summary>
            BankAccount.
            </summary>
        </member>
        <member name="M:Square.Models.BankAccount.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BankAccount"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="accountNumberSuffix">account_number_suffix.</param>
            <param name="country">country.</param>
            <param name="currency">currency.</param>
            <param name="accountType">account_type.</param>
            <param name="holderName">holder_name.</param>
            <param name="primaryBankIdentificationNumber">primary_bank_identification_number.</param>
            <param name="status">status.</param>
            <param name="creditable">creditable.</param>
            <param name="debitable">debitable.</param>
            <param name="secondaryBankIdentificationNumber">secondary_bank_identification_number.</param>
            <param name="debitMandateReferenceId">debit_mandate_reference_id.</param>
            <param name="referenceId">reference_id.</param>
            <param name="locationId">location_id.</param>
            <param name="fingerprint">fingerprint.</param>
            <param name="version">version.</param>
            <param name="bankName">bank_name.</param>
        </member>
        <member name="P:Square.Models.BankAccount.Id">
            <summary>
            The unique, Square-issued identifier for the bank account.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.AccountNumberSuffix">
            <summary>
            The last few digits of the account number.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.Country">
            <summary>
            Indicates the country associated with another entity, such as a business.
            Values are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.Currency">
            <summary>
            Indicates the associated currency for an amount of money. Values correspond
            to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.AccountType">
            <summary>
            Indicates the financial purpose of the bank account.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.HolderName">
            <summary>
            Name of the account holder. This name must match the name
            on the targeted bank account record.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.PrimaryBankIdentificationNumber">
            <summary>
            Primary identifier for the bank. For more information, see
            [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.SecondaryBankIdentificationNumber">
            <summary>
            Secondary identifier for the bank. For more information, see
            [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.DebitMandateReferenceId">
            <summary>
            Reference identifier that will be displayed to UK bank account owners
            when collecting direct debit authorization. Only required for UK bank accounts.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.ReferenceId">
            <summary>
            Client-provided identifier for linking the banking account to an entity
            in a third-party system (for example, a bank account number or a user identifier).
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.LocationId">
            <summary>
            The location to which the bank account belongs.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.Status">
            <summary>
            Indicates the current verification status of a `BankAccount` object.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.Creditable">
            <summary>
            Indicates whether it is possible for Square to send money to this bank account.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.Debitable">
            <summary>
            Indicates whether it is possible for Square to take money from this
            bank account.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.Fingerprint">
            <summary>
            A Square-assigned, unique identifier for the bank account based on the
            account information. The account fingerprint can be used to compare account
            entries and determine if the they represent the same real-world bank account.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.Version">
            <summary>
            The current version of the `BankAccount`.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccount.BankName">
            <summary>
            Read only. Name of actual financial institution.
            For example "Bank of America".
            </summary>
        </member>
        <member name="M:Square.Models.BankAccount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BankAccount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BankAccount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BankAccount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BankAccount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BankAccount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.AccountNumberSuffix(System.String)">
            <summary>
            AccountNumberSuffix.
            </summary>
            <param name="accountNumberSuffix"> accountNumberSuffix. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.Country(System.String)">
            <summary>
            Country.
            </summary>
            <param name="country"> country. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.Currency(System.String)">
            <summary>
            Currency.
            </summary>
            <param name="currency"> currency. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.AccountType(System.String)">
            <summary>
            AccountType.
            </summary>
            <param name="accountType"> accountType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.HolderName(System.String)">
            <summary>
            HolderName.
            </summary>
            <param name="holderName"> holderName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.PrimaryBankIdentificationNumber(System.String)">
            <summary>
            PrimaryBankIdentificationNumber.
            </summary>
            <param name="primaryBankIdentificationNumber"> primaryBankIdentificationNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.Creditable(System.Boolean)">
            <summary>
            Creditable.
            </summary>
            <param name="creditable"> creditable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.Debitable(System.Boolean)">
            <summary>
            Debitable.
            </summary>
            <param name="debitable"> debitable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.SecondaryBankIdentificationNumber(System.String)">
            <summary>
            SecondaryBankIdentificationNumber.
            </summary>
            <param name="secondaryBankIdentificationNumber"> secondaryBankIdentificationNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.DebitMandateReferenceId(System.String)">
            <summary>
            DebitMandateReferenceId.
            </summary>
            <param name="debitMandateReferenceId"> debitMandateReferenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.Fingerprint(System.String)">
            <summary>
            Fingerprint.
            </summary>
            <param name="fingerprint"> fingerprint. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.BankName(System.String)">
            <summary>
            BankName.
            </summary>
            <param name="bankName"> bankName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BankAccount. </returns>
        </member>
        <member name="T:Square.Models.BankAccountPaymentDetails">
            <summary>
            BankAccountPaymentDetails.
            </summary>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.ACHDetails,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BankAccountPaymentDetails"/> class.
            </summary>
            <param name="bankName">bank_name.</param>
            <param name="transferType">transfer_type.</param>
            <param name="accountOwnershipType">account_ownership_type.</param>
            <param name="fingerprint">fingerprint.</param>
            <param name="country">country.</param>
            <param name="statementDescription">statement_description.</param>
            <param name="achDetails">ach_details.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.BankAccountPaymentDetails.BankName">
            <summary>
            The name of the bank associated with the bank account.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccountPaymentDetails.TransferType">
            <summary>
            The type of the bank transfer. The type can be `ACH` or `UNKNOWN`.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccountPaymentDetails.AccountOwnershipType">
            <summary>
            The ownership type of the bank account performing the transfer.
            The type can be `INDIVIDUAL`, `COMPANY`, or `UNKNOWN`.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccountPaymentDetails.Fingerprint">
            <summary>
            Uniquely identifies the bank account for this seller and can be used
            to determine if payments are from the same bank account.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccountPaymentDetails.Country">
            <summary>
            The two-letter ISO code representing the country the bank account is located in.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccountPaymentDetails.StatementDescription">
            <summary>
            The statement description as sent to the bank.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccountPaymentDetails.AchDetails">
            <summary>
            ACH-specific details about `BANK_ACCOUNT` type payments with the `transfer_type` of `ACH`.
            </summary>
        </member>
        <member name="P:Square.Models.BankAccountPaymentDetails.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BankAccountPaymentDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.Builder.BankName(System.String)">
            <summary>
            BankName.
            </summary>
            <param name="bankName"> bankName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.Builder.TransferType(System.String)">
            <summary>
            TransferType.
            </summary>
            <param name="transferType"> transferType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.Builder.AccountOwnershipType(System.String)">
            <summary>
            AccountOwnershipType.
            </summary>
            <param name="accountOwnershipType"> accountOwnershipType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.Builder.Fingerprint(System.String)">
            <summary>
            Fingerprint.
            </summary>
            <param name="fingerprint"> fingerprint. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.Builder.Country(System.String)">
            <summary>
            Country.
            </summary>
            <param name="country"> country. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.Builder.StatementDescription(System.String)">
            <summary>
            StatementDescription.
            </summary>
            <param name="statementDescription"> statementDescription. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.Builder.AchDetails(Square.Models.ACHDetails)">
            <summary>
            AchDetails.
            </summary>
            <param name="achDetails"> achDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BankAccountPaymentDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BankAccountPaymentDetails. </returns>
        </member>
        <member name="T:Square.Models.BatchChangeInventoryRequest">
            <summary>
            BatchChangeInventoryRequest.
            </summary>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryRequest.#ctor(System.String,System.Collections.Generic.IList{Square.Models.InventoryChange},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchChangeInventoryRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="changes">changes.</param>
            <param name="ignoreUnchangedCounts">ignore_unchanged_counts.</param>
        </member>
        <member name="P:Square.Models.BatchChangeInventoryRequest.IdempotencyKey">
            <summary>
            A client-supplied, universally unique identifier (UUID) for the
            request.
            See [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) in the
            [API Development 101](https://developer.squareup.com/docs/basics/api101/overview) section for more
            information.
            </summary>
        </member>
        <member name="P:Square.Models.BatchChangeInventoryRequest.Changes">
            <summary>
            The set of physical counts and inventory adjustments to be made.
            Changes are applied based on the client-supplied timestamp and may be sent
            out of order.
            </summary>
        </member>
        <member name="P:Square.Models.BatchChangeInventoryRequest.IgnoreUnchangedCounts">
            <summary>
            Indicates whether the current physical count should be ignored if
            the quantity is unchanged since the last physical count. Default: `true`.
            </summary>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchChangeInventoryRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryRequest.Builder.Changes(System.Collections.Generic.IList{Square.Models.InventoryChange})">
            <summary>
            Changes.
            </summary>
            <param name="changes"> changes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryRequest.Builder.IgnoreUnchangedCounts(System.Nullable{System.Boolean})">
            <summary>
            IgnoreUnchangedCounts.
            </summary>
            <param name="ignoreUnchangedCounts"> ignoreUnchangedCounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchChangeInventoryRequest. </returns>
        </member>
        <member name="T:Square.Models.BatchChangeInventoryResponse">
            <summary>
            BatchChangeInventoryResponse.
            </summary>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.InventoryCount})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchChangeInventoryResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="counts">counts.</param>
        </member>
        <member name="P:Square.Models.BatchChangeInventoryResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.BatchChangeInventoryResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.BatchChangeInventoryResponse.Counts">
            <summary>
            The current counts for all objects referenced in the request.
            </summary>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchChangeInventoryResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryResponse.Builder.Counts(System.Collections.Generic.IList{Square.Models.InventoryCount})">
            <summary>
            Counts.
            </summary>
            <param name="counts"> counts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchChangeInventoryResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchChangeInventoryResponse. </returns>
        </member>
        <member name="T:Square.Models.BatchDeleteCatalogObjectsRequest">
            <summary>
            BatchDeleteCatalogObjectsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsRequest.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchDeleteCatalogObjectsRequest"/> class.
            </summary>
            <param name="objectIds">object_ids.</param>
        </member>
        <member name="P:Square.Models.BatchDeleteCatalogObjectsRequest.ObjectIds">
            <summary>
            The IDs of the CatalogObjects to be deleted. When an object is deleted, other objects
            in the graph that depend on that object will be deleted as well (for example, deleting a
            CatalogItem will delete its CatalogItemVariation.
            </summary>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchDeleteCatalogObjectsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsRequest.Builder.ObjectIds(System.Collections.Generic.IList{System.String})">
            <summary>
            ObjectIds.
            </summary>
            <param name="objectIds"> objectIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchDeleteCatalogObjectsRequest. </returns>
        </member>
        <member name="T:Square.Models.BatchDeleteCatalogObjectsResponse">
            <summary>
            BatchDeleteCatalogObjectsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchDeleteCatalogObjectsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="deletedObjectIds">deleted_object_ids.</param>
            <param name="deletedAt">deleted_at.</param>
        </member>
        <member name="P:Square.Models.BatchDeleteCatalogObjectsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.BatchDeleteCatalogObjectsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.BatchDeleteCatalogObjectsResponse.DeletedObjectIds">
            <summary>
            The IDs of all CatalogObjects deleted by this request.
            </summary>
        </member>
        <member name="P:Square.Models.BatchDeleteCatalogObjectsResponse.DeletedAt">
            <summary>
            The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this deletion in RFC 3339 format, e.g., "2016-09-04T23:59:33.123Z".
            </summary>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchDeleteCatalogObjectsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsResponse.Builder.DeletedObjectIds(System.Collections.Generic.IList{System.String})">
            <summary>
            DeletedObjectIds.
            </summary>
            <param name="deletedObjectIds"> deletedObjectIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsResponse.Builder.DeletedAt(System.String)">
            <summary>
            DeletedAt.
            </summary>
            <param name="deletedAt"> deletedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchDeleteCatalogObjectsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchDeleteCatalogObjectsResponse. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveCatalogObjectsRequest">
            <summary>
            BatchRetrieveCatalogObjectsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsRequest.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchRetrieveCatalogObjectsRequest"/> class.
            </summary>
            <param name="objectIds">object_ids.</param>
            <param name="includeRelatedObjects">include_related_objects.</param>
            <param name="catalogVersion">catalog_version.</param>
        </member>
        <member name="P:Square.Models.BatchRetrieveCatalogObjectsRequest.ObjectIds">
            <summary>
            The IDs of the CatalogObjects to be retrieved.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveCatalogObjectsRequest.IncludeRelatedObjects">
            <summary>
            If `true`, the response will include additional objects that are related to the
            requested objects, as follows:
            If the `objects` field of the response contains a CatalogItem, its associated
            CatalogCategory objects, CatalogTax objects, CatalogImage objects and
            CatalogModifierLists will be returned in the `related_objects` field of the
            response. If the `objects` field of the response contains a CatalogItemVariation,
            its parent CatalogItem will be returned in the `related_objects` field of
            the response.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveCatalogObjectsRequest.CatalogVersion">
            <summary>
            The specific version of the catalog objects to be included in the response.
            This allows you to retrieve historical versions of objects. The specified version value is matched against
            the [CatalogObject]($m/CatalogObject)s' `version` attribute.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveCatalogObjectsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsRequest.Builder.ObjectIds(System.Collections.Generic.IList{System.String})">
            <summary>
            ObjectIds.
            </summary>
            <param name="objectIds"> objectIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsRequest.Builder.IncludeRelatedObjects(System.Nullable{System.Boolean})">
            <summary>
            IncludeRelatedObjects.
            </summary>
            <param name="includeRelatedObjects"> includeRelatedObjects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsRequest.Builder.CatalogVersion(System.Nullable{System.Int64})">
            <summary>
            CatalogVersion.
            </summary>
            <param name="catalogVersion"> catalogVersion. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchRetrieveCatalogObjectsRequest. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveCatalogObjectsResponse">
            <summary>
            BatchRetrieveCatalogObjectsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.CatalogObject},System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchRetrieveCatalogObjectsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="objects">objects.</param>
            <param name="relatedObjects">related_objects.</param>
        </member>
        <member name="P:Square.Models.BatchRetrieveCatalogObjectsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveCatalogObjectsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveCatalogObjectsResponse.Objects">
            <summary>
            A list of [CatalogObject]($m/CatalogObject)s returned.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveCatalogObjectsResponse.RelatedObjects">
            <summary>
            A list of [CatalogObject]($m/CatalogObject)s referenced by the object in the `objects` field.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveCatalogObjectsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsResponse.Builder.Objects(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Objects.
            </summary>
            <param name="objects"> objects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsResponse.Builder.RelatedObjects(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            RelatedObjects.
            </summary>
            <param name="relatedObjects"> relatedObjects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveCatalogObjectsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchRetrieveCatalogObjectsResponse. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveInventoryChangesRequest">
            <summary>
            BatchRetrieveInventoryChangesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchRetrieveInventoryChangesRequest"/> class.
            </summary>
            <param name="catalogObjectIds">catalog_object_ids.</param>
            <param name="locationIds">location_ids.</param>
            <param name="types">types.</param>
            <param name="states">states.</param>
            <param name="updatedAfter">updated_after.</param>
            <param name="updatedBefore">updated_before.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesRequest.CatalogObjectIds">
            <summary>
            The filter to return results by `CatalogObject` ID.
            The filter is only applicable when set. The default value is null.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesRequest.LocationIds">
            <summary>
            The filter to return results by `Location` ID.
            The filter is only applicable when set. The default value is null.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesRequest.Types">
            <summary>
            The filter to return results by `InventoryChangeType` values other than `TRANSFER`.
            The default value is `[PHYSICAL_COUNT, ADJUSTMENT]`.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesRequest.States">
            <summary>
            The filter to return `ADJUSTMENT` query results by
            `InventoryState`. This filter is only applied when set.
            The default value is null.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesRequest.UpdatedAfter">
            <summary>
            The filter to return results with their `calculated_at` value
            after the given time as specified in an RFC 3339 timestamp.
            The default value is the UNIX epoch of (`1970-01-01T00:00:00Z`).
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesRequest.UpdatedBefore">
            <summary>
            The filter to return results with their `created_at` or `calculated_at` value
            strictly before the given time as specified in an RFC 3339 timestamp.
            The default value is the UNIX epoch of (`1970-01-01T00:00:00Z`).
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.
            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveInventoryChangesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.Builder.CatalogObjectIds(System.Collections.Generic.IList{System.String})">
            <summary>
            CatalogObjectIds.
            </summary>
            <param name="catalogObjectIds"> catalogObjectIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.Builder.Types(System.Collections.Generic.IList{System.String})">
            <summary>
            Types.
            </summary>
            <param name="types"> types. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.Builder.States(System.Collections.Generic.IList{System.String})">
            <summary>
            States.
            </summary>
            <param name="states"> states. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.Builder.UpdatedAfter(System.String)">
            <summary>
            UpdatedAfter.
            </summary>
            <param name="updatedAfter"> updatedAfter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.Builder.UpdatedBefore(System.String)">
            <summary>
            UpdatedBefore.
            </summary>
            <param name="updatedBefore"> updatedBefore. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchRetrieveInventoryChangesRequest. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveInventoryChangesResponse">
            <summary>
            BatchRetrieveInventoryChangesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.InventoryChange},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchRetrieveInventoryChangesResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="changes">changes.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesResponse.Changes">
            <summary>
            The current calculated inventory changes for the requested objects
            and locations.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryChangesResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.
            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveInventoryChangesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesResponse.Builder.Changes(System.Collections.Generic.IList{Square.Models.InventoryChange})">
            <summary>
            Changes.
            </summary>
            <param name="changes"> changes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryChangesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchRetrieveInventoryChangesResponse. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveInventoryCountsRequest">
            <summary>
            BatchRetrieveInventoryCountsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchRetrieveInventoryCountsRequest"/> class.
            </summary>
            <param name="catalogObjectIds">catalog_object_ids.</param>
            <param name="locationIds">location_ids.</param>
            <param name="updatedAfter">updated_after.</param>
            <param name="cursor">cursor.</param>
            <param name="states">states.</param>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryCountsRequest.CatalogObjectIds">
            <summary>
            The filter to return results by `CatalogObject` ID.
            The filter is applicable only when set.  The default is null.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryCountsRequest.LocationIds">
            <summary>
            The filter to return results by `Location` ID.
            This filter is applicable only when set. The default is null.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryCountsRequest.UpdatedAfter">
            <summary>
            The filter to return results with their `calculated_at` value
            after the given time as specified in an RFC 3339 timestamp.
            The default value is the UNIX epoch of (`1970-01-01T00:00:00Z`).
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryCountsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.
            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryCountsRequest.States">
            <summary>
            The filter to return results by `InventoryState`. The filter is only applicable when set.
            Ignored are untracked states of `NONE`, `SOLD`, and `UNLINKED_RETURN`.
            The default is null.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveInventoryCountsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.Builder.CatalogObjectIds(System.Collections.Generic.IList{System.String})">
            <summary>
            CatalogObjectIds.
            </summary>
            <param name="catalogObjectIds"> catalogObjectIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.Builder.UpdatedAfter(System.String)">
            <summary>
            UpdatedAfter.
            </summary>
            <param name="updatedAfter"> updatedAfter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.Builder.States(System.Collections.Generic.IList{System.String})">
            <summary>
            States.
            </summary>
            <param name="states"> states. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchRetrieveInventoryCountsRequest. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveInventoryCountsResponse">
            <summary>
            BatchRetrieveInventoryCountsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.InventoryCount},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchRetrieveInventoryCountsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="counts">counts.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryCountsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryCountsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryCountsResponse.Counts">
            <summary>
            The current calculated inventory counts for the requested objects
            and locations.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveInventoryCountsResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.
            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveInventoryCountsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsResponse.Builder.Counts(System.Collections.Generic.IList{Square.Models.InventoryCount})">
            <summary>
            Counts.
            </summary>
            <param name="counts"> counts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveInventoryCountsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchRetrieveInventoryCountsResponse. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveOrdersRequest">
            <summary>
            BatchRetrieveOrdersRequest.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersRequest.#ctor(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchRetrieveOrdersRequest"/> class.
            </summary>
            <param name="orderIds">order_ids.</param>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.BatchRetrieveOrdersRequest.LocationId">
            <summary>
            The ID of the location for these orders. This field is optional: omit it to retrieve
            orders within the scope of the current authorization's merchant ID.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveOrdersRequest.OrderIds">
            <summary>
            The IDs of the orders to retrieve. A maximum of 100 orders can be retrieved per request.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveOrdersRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersRequest.Builder.OrderIds(System.Collections.Generic.IList{System.String})">
            <summary>
            OrderIds.
            </summary>
            <param name="orderIds"> orderIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchRetrieveOrdersRequest. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveOrdersResponse">
            <summary>
            BatchRetrieveOrdersResponse.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersResponse.#ctor(System.Collections.Generic.IList{Square.Models.Order},System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchRetrieveOrdersResponse"/> class.
            </summary>
            <param name="orders">orders.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.BatchRetrieveOrdersResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveOrdersResponse.Orders">
            <summary>
            The requested orders. This will omit any requested orders that do not exist.
            </summary>
        </member>
        <member name="P:Square.Models.BatchRetrieveOrdersResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchRetrieveOrdersResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersResponse.Builder.Orders(System.Collections.Generic.IList{Square.Models.Order})">
            <summary>
            Orders.
            </summary>
            <param name="orders"> orders. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchRetrieveOrdersResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchRetrieveOrdersResponse. </returns>
        </member>
        <member name="T:Square.Models.BatchUpsertCatalogObjectsRequest">
            <summary>
            BatchUpsertCatalogObjectsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsRequest.#ctor(System.String,System.Collections.Generic.IList{Square.Models.CatalogObjectBatch})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchUpsertCatalogObjectsRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="batches">batches.</param>
        </member>
        <member name="P:Square.Models.BatchUpsertCatalogObjectsRequest.IdempotencyKey">
            <summary>
            A value you specify that uniquely identifies this
            request among all your requests. A common way to create
            a valid idempotency key is to use a Universally unique
            identifier (UUID).
            If you're unsure whether a particular request was successful,
            you can reattempt it with the same idempotency key without
            worrying about creating duplicate objects.
            See [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.BatchUpsertCatalogObjectsRequest.Batches">
            <summary>
            A batch of CatalogObjects to be inserted/updated atomically.
            The objects within a batch will be inserted in an all-or-nothing fashion, i.e., if an error occurs
            attempting to insert or update an object within a batch, the entire batch will be rejected. However, an error
            in one batch will not affect other batches within the same request.
            For each object, its `updated_at` field is ignored and replaced with a current [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), and its
            `is_deleted` field must not be set to `true`.
            To modify an existing object, supply its ID. To create a new object, use an ID starting
            with `#`. These IDs may be used to create relationships between an object and attributes of
            other objects that reference it. For example, you can create a CatalogItem with
            ID `#ABC` and a CatalogItemVariation with its `item_id` attribute set to
            `#ABC` in order to associate the CatalogItemVariation with its parent
            CatalogItem.
            Any `#`-prefixed IDs are valid only within a single atomic batch, and will be replaced by server-generated IDs.
            Each batch may contain up to 1,000 objects. The total number of objects across all batches for a single request
            may not exceed 10,000. If either of these limits is violated, an error will be returned and no objects will
            be inserted or updated.
            </summary>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchUpsertCatalogObjectsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsRequest.Builder.Batches(System.Collections.Generic.IList{Square.Models.CatalogObjectBatch})">
            <summary>
            Batches.
            </summary>
            <param name="batches"> batches. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchUpsertCatalogObjectsRequest. </returns>
        </member>
        <member name="T:Square.Models.BatchUpsertCatalogObjectsResponse">
            <summary>
            BatchUpsertCatalogObjectsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.CatalogObject},System.String,System.Collections.Generic.IList{Square.Models.CatalogIdMapping})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BatchUpsertCatalogObjectsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="objects">objects.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="idMappings">id_mappings.</param>
        </member>
        <member name="P:Square.Models.BatchUpsertCatalogObjectsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.BatchUpsertCatalogObjectsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.BatchUpsertCatalogObjectsResponse.Objects">
            <summary>
            The created successfully created CatalogObjects.
            </summary>
        </member>
        <member name="P:Square.Models.BatchUpsertCatalogObjectsResponse.UpdatedAt">
            <summary>
            The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this update in RFC 3339 format, e.g., "2016-09-04T23:59:33.123Z".
            </summary>
        </member>
        <member name="P:Square.Models.BatchUpsertCatalogObjectsResponse.IdMappings">
            <summary>
            The mapping between client and server IDs for this upsert.
            </summary>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BatchUpsertCatalogObjectsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.Builder.Objects(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Objects.
            </summary>
            <param name="objects"> objects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.Builder.IdMappings(System.Collections.Generic.IList{Square.Models.CatalogIdMapping})">
            <summary>
            IdMappings.
            </summary>
            <param name="idMappings"> idMappings. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BatchUpsertCatalogObjectsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BatchUpsertCatalogObjectsResponse. </returns>
        </member>
        <member name="T:Square.Models.Booking">
            <summary>
            Booking.
            </summary>
        </member>
        <member name="M:Square.Models.Booking.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Square.Models.AppointmentSegment})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Booking"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="version">version.</param>
            <param name="status">status.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="startAt">start_at.</param>
            <param name="locationId">location_id.</param>
            <param name="customerId">customer_id.</param>
            <param name="customerNote">customer_note.</param>
            <param name="sellerNote">seller_note.</param>
            <param name="appointmentSegments">appointment_segments.</param>
        </member>
        <member name="P:Square.Models.Booking.Id">
            <summary>
            A unique ID of this object representing a booking.
            </summary>
        </member>
        <member name="P:Square.Models.Booking.Version">
            <summary>
            The revision number for the booking used for optimistic concurrency.
            </summary>
        </member>
        <member name="P:Square.Models.Booking.Status">
            <summary>
            Supported booking statuses.
            </summary>
        </member>
        <member name="P:Square.Models.Booking.CreatedAt">
            <summary>
            The timestamp specifying the creation time of this booking, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Booking.UpdatedAt">
            <summary>
            The timestamp specifying the most recent update time of this booking, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Booking.StartAt">
            <summary>
            The timestamp specifying the starting time of this booking, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Booking.LocationId">
            <summary>
            The ID of the [Location]($m/Location) object representing the location where the booked service is provided.
            </summary>
        </member>
        <member name="P:Square.Models.Booking.CustomerId">
            <summary>
            The ID of the [Customer]($m/Customer) object representing the customer attending this booking
            </summary>
        </member>
        <member name="P:Square.Models.Booking.CustomerNote">
            <summary>
            The free-text field for the customer to supply notes about the booking. For example, the note can be preferences that cannot be expressed by supported attributes of a relevant [CatalogObject]($m/CatalogObject) instance.
            </summary>
        </member>
        <member name="P:Square.Models.Booking.SellerNote">
            <summary>
            The free-text field for the seller to supply notes about the booking. For example, the note can be preferences that cannot be expressed by supported attributes of a specific [CatalogObject]($m/CatalogObject) instance.
            This field should not be visible to customers.
            </summary>
        </member>
        <member name="P:Square.Models.Booking.AppointmentSegments">
            <summary>
            A list of appointment segments for this booking.
            </summary>
        </member>
        <member name="M:Square.Models.Booking.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Booking.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Booking.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Booking.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Booking.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Booking.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Booking.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.StartAt(System.String)">
            <summary>
            StartAt.
            </summary>
            <param name="startAt"> startAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.CustomerNote(System.String)">
            <summary>
            CustomerNote.
            </summary>
            <param name="customerNote"> customerNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.SellerNote(System.String)">
            <summary>
            SellerNote.
            </summary>
            <param name="sellerNote"> sellerNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.AppointmentSegments(System.Collections.Generic.IList{Square.Models.AppointmentSegment})">
            <summary>
            AppointmentSegments.
            </summary>
            <param name="appointmentSegments"> appointmentSegments. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Booking.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Booking. </returns>
        </member>
        <member name="T:Square.Models.Break">
            <summary>
            Break.
            </summary>
        </member>
        <member name="M:Square.Models.Break.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Break"/> class.
            </summary>
            <param name="startAt">start_at.</param>
            <param name="breakTypeId">break_type_id.</param>
            <param name="name">name.</param>
            <param name="expectedDuration">expected_duration.</param>
            <param name="isPaid">is_paid.</param>
            <param name="id">id.</param>
            <param name="endAt">end_at.</param>
        </member>
        <member name="P:Square.Models.Break.Id">
            <summary>
            UUID for this object
            </summary>
        </member>
        <member name="P:Square.Models.Break.StartAt">
            <summary>
            RFC 3339; follows same timezone info as `Shift`. Precision up to
            the minute is respected; seconds are truncated.
            </summary>
        </member>
        <member name="P:Square.Models.Break.EndAt">
            <summary>
            RFC 3339; follows same timezone info as `Shift`. Precision up to
            the minute is respected; seconds are truncated.
            </summary>
        </member>
        <member name="P:Square.Models.Break.BreakTypeId">
            <summary>
            The `BreakType` this `Break` was templated on.
            </summary>
        </member>
        <member name="P:Square.Models.Break.Name">
            <summary>
            A human-readable name.
            </summary>
        </member>
        <member name="P:Square.Models.Break.ExpectedDuration">
            <summary>
            Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of
            the break.
            </summary>
        </member>
        <member name="P:Square.Models.Break.IsPaid">
            <summary>
            Whether this break counts towards time worked for compensation
            purposes.
            </summary>
        </member>
        <member name="M:Square.Models.Break.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Break.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Break.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Break.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Break.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Break.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Break.Builder.StartAt(System.String)">
            <summary>
            StartAt.
            </summary>
            <param name="startAt"> startAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Break.Builder.BreakTypeId(System.String)">
            <summary>
            BreakTypeId.
            </summary>
            <param name="breakTypeId"> breakTypeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Break.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Break.Builder.ExpectedDuration(System.String)">
            <summary>
            ExpectedDuration.
            </summary>
            <param name="expectedDuration"> expectedDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Break.Builder.IsPaid(System.Boolean)">
            <summary>
            IsPaid.
            </summary>
            <param name="isPaid"> isPaid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Break.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Break.Builder.EndAt(System.String)">
            <summary>
            EndAt.
            </summary>
            <param name="endAt"> endAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Break.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Break. </returns>
        </member>
        <member name="T:Square.Models.BreakType">
            <summary>
            BreakType.
            </summary>
        </member>
        <member name="M:Square.Models.BreakType.#ctor(System.String,System.String,System.String,System.Boolean,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BreakType"/> class.
            </summary>
            <param name="locationId">location_id.</param>
            <param name="breakName">break_name.</param>
            <param name="expectedDuration">expected_duration.</param>
            <param name="isPaid">is_paid.</param>
            <param name="id">id.</param>
            <param name="version">version.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.BreakType.Id">
            <summary>
            UUID for this object.
            </summary>
        </member>
        <member name="P:Square.Models.BreakType.LocationId">
            <summary>
            The ID of the business location this type of break applies to.
            </summary>
        </member>
        <member name="P:Square.Models.BreakType.BreakName">
            <summary>
            A human-readable name for this type of break. Will be displayed to
            employees in Square products.
            </summary>
        </member>
        <member name="P:Square.Models.BreakType.ExpectedDuration">
            <summary>
            Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of
            this break. Precision below minutes is truncated.
            </summary>
        </member>
        <member name="P:Square.Models.BreakType.IsPaid">
            <summary>
            Whether this break counts towards time worked for compensation
            purposes.
            </summary>
        </member>
        <member name="P:Square.Models.BreakType.Version">
            <summary>
            Used for resolving concurrency issues; request will fail if version
            provided does not match server version at time of request. If a value is not
            provided, Square's servers execute a "blind" write; potentially
            overwriting another writer's data.
            </summary>
        </member>
        <member name="P:Square.Models.BreakType.CreatedAt">
            <summary>
            A read-only timestamp in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.BreakType.UpdatedAt">
            <summary>
            A read-only timestamp in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.BreakType.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BreakType.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BreakType.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BreakType.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BreakType.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BreakType.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BreakType.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BreakType.Builder.BreakName(System.String)">
            <summary>
            BreakName.
            </summary>
            <param name="breakName"> breakName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BreakType.Builder.ExpectedDuration(System.String)">
            <summary>
            ExpectedDuration.
            </summary>
            <param name="expectedDuration"> expectedDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BreakType.Builder.IsPaid(System.Boolean)">
            <summary>
            IsPaid.
            </summary>
            <param name="isPaid"> isPaid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BreakType.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BreakType.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BreakType.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BreakType.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BreakType.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BreakType. </returns>
        </member>
        <member name="T:Square.Models.BulkCreateTeamMembersRequest">
            <summary>
            BulkCreateTeamMembersRequest.
            </summary>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersRequest.#ctor(System.Collections.Generic.IDictionary{System.String,Square.Models.CreateTeamMemberRequest})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BulkCreateTeamMembersRequest"/> class.
            </summary>
            <param name="teamMembers">team_members.</param>
        </member>
        <member name="P:Square.Models.BulkCreateTeamMembersRequest.TeamMembers">
            <summary>
            The data which will be used to create the `TeamMember` objects. Each key is the `idempotency_key` that maps to the `CreateTeamMemberRequest`.
            </summary>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BulkCreateTeamMembersRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersRequest.Builder.TeamMembers(System.Collections.Generic.IDictionary{System.String,Square.Models.CreateTeamMemberRequest})">
            <summary>
            TeamMembers.
            </summary>
            <param name="teamMembers"> teamMembers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BulkCreateTeamMembersRequest. </returns>
        </member>
        <member name="T:Square.Models.BulkCreateTeamMembersResponse">
            <summary>
            BulkCreateTeamMembersResponse.
            </summary>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersResponse.#ctor(System.Collections.Generic.IDictionary{System.String,Square.Models.CreateTeamMemberResponse},System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BulkCreateTeamMembersResponse"/> class.
            </summary>
            <param name="teamMembers">team_members.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.BulkCreateTeamMembersResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.BulkCreateTeamMembersResponse.TeamMembers">
            <summary>
            The successfully created `TeamMember` objects. Each key is the `idempotency_key` that maps to the `CreateTeamMemberRequest`.
            </summary>
        </member>
        <member name="P:Square.Models.BulkCreateTeamMembersResponse.Errors">
            <summary>
            The errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BulkCreateTeamMembersResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersResponse.Builder.TeamMembers(System.Collections.Generic.IDictionary{System.String,Square.Models.CreateTeamMemberResponse})">
            <summary>
            TeamMembers.
            </summary>
            <param name="teamMembers"> teamMembers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BulkCreateTeamMembersResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BulkCreateTeamMembersResponse. </returns>
        </member>
        <member name="T:Square.Models.BulkUpdateTeamMembersRequest">
            <summary>
            BulkUpdateTeamMembersRequest.
            </summary>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersRequest.#ctor(System.Collections.Generic.IDictionary{System.String,Square.Models.UpdateTeamMemberRequest})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BulkUpdateTeamMembersRequest"/> class.
            </summary>
            <param name="teamMembers">team_members.</param>
        </member>
        <member name="P:Square.Models.BulkUpdateTeamMembersRequest.TeamMembers">
            <summary>
            The data which will be used to update the `TeamMember` objects. Each key is the `team_member_id` that maps to the `UpdateTeamMemberRequest`.
            </summary>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BulkUpdateTeamMembersRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersRequest.Builder.TeamMembers(System.Collections.Generic.IDictionary{System.String,Square.Models.UpdateTeamMemberRequest})">
            <summary>
            TeamMembers.
            </summary>
            <param name="teamMembers"> teamMembers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BulkUpdateTeamMembersRequest. </returns>
        </member>
        <member name="T:Square.Models.BulkUpdateTeamMembersResponse">
            <summary>
            BulkUpdateTeamMembersResponse.
            </summary>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersResponse.#ctor(System.Collections.Generic.IDictionary{System.String,Square.Models.UpdateTeamMemberResponse},System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BulkUpdateTeamMembersResponse"/> class.
            </summary>
            <param name="teamMembers">team_members.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.BulkUpdateTeamMembersResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.BulkUpdateTeamMembersResponse.TeamMembers">
            <summary>
            The successfully updated `TeamMember` objects. Each key is the `team_member_id` that maps to the `UpdateTeamMemberRequest`.
            </summary>
        </member>
        <member name="P:Square.Models.BulkUpdateTeamMembersResponse.Errors">
            <summary>
            The errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BulkUpdateTeamMembersResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersResponse.Builder.TeamMembers(System.Collections.Generic.IDictionary{System.String,Square.Models.UpdateTeamMemberResponse})">
            <summary>
            TeamMembers.
            </summary>
            <param name="teamMembers"> teamMembers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BulkUpdateTeamMembersResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BulkUpdateTeamMembersResponse. </returns>
        </member>
        <member name="T:Square.Models.BusinessAppointmentSettings">
            <summary>
            BusinessAppointmentSettings.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.#ctor(System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Square.Models.Money,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BusinessAppointmentSettings"/> class.
            </summary>
            <param name="locationTypes">location_types.</param>
            <param name="alignmentTime">alignment_time.</param>
            <param name="minBookingLeadTimeSeconds">min_booking_lead_time_seconds.</param>
            <param name="maxBookingLeadTimeSeconds">max_booking_lead_time_seconds.</param>
            <param name="anyTeamMemberBookingEnabled">any_team_member_booking_enabled.</param>
            <param name="multipleServiceBookingEnabled">multiple_service_booking_enabled.</param>
            <param name="maxAppointmentsPerDayLimitType">max_appointments_per_day_limit_type.</param>
            <param name="maxAppointmentsPerDayLimit">max_appointments_per_day_limit.</param>
            <param name="cancellationWindowSeconds">cancellation_window_seconds.</param>
            <param name="cancellationFeeMoney">cancellation_fee_money.</param>
            <param name="cancellationPolicy">cancellation_policy.</param>
            <param name="cancellationPolicyText">cancellation_policy_text.</param>
            <param name="skipBookingFlowStaffSelection">skip_booking_flow_staff_selection.</param>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.LocationTypes">
            <summary>
            Types of the location allowed for bookings.
            See [BusinessAppointmentSettingsBookingLocationType](#type-businessappointmentsettingsbookinglocationtype) for possible values
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.AlignmentTime">
            <summary>
            Time units of a service duration for bookings.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.MinBookingLeadTimeSeconds">
            <summary>
            The minimum lead time in seconds before a service can be booked. Bookings must be created at least this far ahead of the booking's starting time.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.MaxBookingLeadTimeSeconds">
            <summary>
            The maximum lead time in seconds before a service can be booked. Bookings must be created at most this far ahead of the booking's starting time.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.AnyTeamMemberBookingEnabled">
            <summary>
            Indicates whether a customer can choose from all available time slots and have a staff member assigned
            automatically (`true`) or not (`false`).
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.MultipleServiceBookingEnabled">
            <summary>
            Indicates whether a customer can book multiple services in a single online booking.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.MaxAppointmentsPerDayLimitType">
            <summary>
            Types of daily appointment limits.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.MaxAppointmentsPerDayLimit">
            <summary>
            The maximum number of daily appointments per team member or per location.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.CancellationWindowSeconds">
            <summary>
            The cut-off time in seconds for allowing clients to cancel or reschedule an appointment.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.CancellationFeeMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.CancellationPolicy">
            <summary>
            The category of the seller’s cancellation policy.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.CancellationPolicyText">
            <summary>
            The free-form text of the seller's cancellation policy.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessAppointmentSettings.SkipBookingFlowStaffSelection">
            <summary>
            Indicates whether customers has an assigned staff member (`true`) or can select s staff member of their choice (`false`).
            </summary>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BusinessAppointmentSettings.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.LocationTypes(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationTypes.
            </summary>
            <param name="locationTypes"> locationTypes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.AlignmentTime(System.String)">
            <summary>
            AlignmentTime.
            </summary>
            <param name="alignmentTime"> alignmentTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.MinBookingLeadTimeSeconds(System.Nullable{System.Int32})">
            <summary>
            MinBookingLeadTimeSeconds.
            </summary>
            <param name="minBookingLeadTimeSeconds"> minBookingLeadTimeSeconds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.MaxBookingLeadTimeSeconds(System.Nullable{System.Int32})">
            <summary>
            MaxBookingLeadTimeSeconds.
            </summary>
            <param name="maxBookingLeadTimeSeconds"> maxBookingLeadTimeSeconds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.AnyTeamMemberBookingEnabled(System.Nullable{System.Boolean})">
            <summary>
            AnyTeamMemberBookingEnabled.
            </summary>
            <param name="anyTeamMemberBookingEnabled"> anyTeamMemberBookingEnabled. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.MultipleServiceBookingEnabled(System.Nullable{System.Boolean})">
            <summary>
            MultipleServiceBookingEnabled.
            </summary>
            <param name="multipleServiceBookingEnabled"> multipleServiceBookingEnabled. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.MaxAppointmentsPerDayLimitType(System.String)">
            <summary>
            MaxAppointmentsPerDayLimitType.
            </summary>
            <param name="maxAppointmentsPerDayLimitType"> maxAppointmentsPerDayLimitType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.MaxAppointmentsPerDayLimit(System.Nullable{System.Int32})">
            <summary>
            MaxAppointmentsPerDayLimit.
            </summary>
            <param name="maxAppointmentsPerDayLimit"> maxAppointmentsPerDayLimit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.CancellationWindowSeconds(System.Nullable{System.Int32})">
            <summary>
            CancellationWindowSeconds.
            </summary>
            <param name="cancellationWindowSeconds"> cancellationWindowSeconds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.CancellationFeeMoney(Square.Models.Money)">
            <summary>
            CancellationFeeMoney.
            </summary>
            <param name="cancellationFeeMoney"> cancellationFeeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.CancellationPolicy(System.String)">
            <summary>
            CancellationPolicy.
            </summary>
            <param name="cancellationPolicy"> cancellationPolicy. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.CancellationPolicyText(System.String)">
            <summary>
            CancellationPolicyText.
            </summary>
            <param name="cancellationPolicyText"> cancellationPolicyText. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.SkipBookingFlowStaffSelection(System.Nullable{System.Boolean})">
            <summary>
            SkipBookingFlowStaffSelection.
            </summary>
            <param name="skipBookingFlowStaffSelection"> skipBookingFlowStaffSelection. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessAppointmentSettings.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BusinessAppointmentSettings. </returns>
        </member>
        <member name="T:Square.Models.BusinessBookingProfile">
            <summary>
            BusinessBookingProfile.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},Square.Models.BusinessAppointmentSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BusinessBookingProfile"/> class.
            </summary>
            <param name="sellerId">seller_id.</param>
            <param name="createdAt">created_at.</param>
            <param name="bookingEnabled">booking_enabled.</param>
            <param name="customerTimezoneChoice">customer_timezone_choice.</param>
            <param name="bookingPolicy">booking_policy.</param>
            <param name="allowUserCancel">allow_user_cancel.</param>
            <param name="businessAppointmentSettings">business_appointment_settings.</param>
        </member>
        <member name="P:Square.Models.BusinessBookingProfile.SellerId">
            <summary>
            The ID of the seller, obtainable using the Merchants API.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessBookingProfile.CreatedAt">
            <summary>
            The RFC 3339 timestamp specifying the booking's creation time.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessBookingProfile.BookingEnabled">
            <summary>
            Indicates whether the seller is open for booking.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessBookingProfile.CustomerTimezoneChoice">
            <summary>
            Choices of customer-facing time zone used for bookings.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessBookingProfile.BookingPolicy">
            <summary>
            Policies for accepting bookings.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessBookingProfile.AllowUserCancel">
            <summary>
            Indicates whether customers can cancel or reschedule their own bookings (`true`) or not (`false`).
            </summary>
        </member>
        <member name="P:Square.Models.BusinessBookingProfile.BusinessAppointmentSettings">
            <summary>
            The service appointment settings, including where and how the service is provided.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BusinessBookingProfile.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.Builder.SellerId(System.String)">
            <summary>
            SellerId.
            </summary>
            <param name="sellerId"> sellerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.Builder.BookingEnabled(System.Nullable{System.Boolean})">
            <summary>
            BookingEnabled.
            </summary>
            <param name="bookingEnabled"> bookingEnabled. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.Builder.CustomerTimezoneChoice(System.String)">
            <summary>
            CustomerTimezoneChoice.
            </summary>
            <param name="customerTimezoneChoice"> customerTimezoneChoice. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.Builder.BookingPolicy(System.String)">
            <summary>
            BookingPolicy.
            </summary>
            <param name="bookingPolicy"> bookingPolicy. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.Builder.AllowUserCancel(System.Nullable{System.Boolean})">
            <summary>
            AllowUserCancel.
            </summary>
            <param name="allowUserCancel"> allowUserCancel. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.Builder.BusinessAppointmentSettings(Square.Models.BusinessAppointmentSettings)">
            <summary>
            BusinessAppointmentSettings.
            </summary>
            <param name="businessAppointmentSettings"> businessAppointmentSettings. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessBookingProfile.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BusinessBookingProfile. </returns>
        </member>
        <member name="T:Square.Models.BusinessHours">
            <summary>
            BusinessHours.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessHours.#ctor(System.Collections.Generic.IList{Square.Models.BusinessHoursPeriod})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BusinessHours"/> class.
            </summary>
            <param name="periods">periods.</param>
        </member>
        <member name="P:Square.Models.BusinessHours.Periods">
            <summary>
            The list of time periods during which the business is open. There may be at most 10
            periods per day.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessHours.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessHours.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessHours.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessHours.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BusinessHours.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BusinessHours.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessHours.Builder.Periods(System.Collections.Generic.IList{Square.Models.BusinessHoursPeriod})">
            <summary>
            Periods.
            </summary>
            <param name="periods"> periods. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessHours.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BusinessHours. </returns>
        </member>
        <member name="T:Square.Models.BusinessHoursPeriod">
            <summary>
            BusinessHoursPeriod.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessHoursPeriod.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.BusinessHoursPeriod"/> class.
            </summary>
            <param name="dayOfWeek">day_of_week.</param>
            <param name="startLocalTime">start_local_time.</param>
            <param name="endLocalTime">end_local_time.</param>
        </member>
        <member name="P:Square.Models.BusinessHoursPeriod.DayOfWeek">
            <summary>
            Indicates the specific day  of the week.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessHoursPeriod.StartLocalTime">
            <summary>
            The start time of a business hours period, specified in local time using partial-time
            RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.BusinessHoursPeriod.EndLocalTime">
            <summary>
            The end time of a business hours period, specified in local time using partial-time
            RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessHoursPeriod.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessHoursPeriod.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessHoursPeriod.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.BusinessHoursPeriod.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.BusinessHoursPeriod.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.BusinessHoursPeriod.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.BusinessHoursPeriod.Builder.DayOfWeek(System.String)">
            <summary>
            DayOfWeek.
            </summary>
            <param name="dayOfWeek"> dayOfWeek. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessHoursPeriod.Builder.StartLocalTime(System.String)">
            <summary>
            StartLocalTime.
            </summary>
            <param name="startLocalTime"> startLocalTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessHoursPeriod.Builder.EndLocalTime(System.String)">
            <summary>
            EndLocalTime.
            </summary>
            <param name="endLocalTime"> endLocalTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.BusinessHoursPeriod.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> BusinessHoursPeriod. </returns>
        </member>
        <member name="T:Square.Models.CalculateLoyaltyPointsRequest">
            <summary>
            CalculateLoyaltyPointsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsRequest.#ctor(System.String,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CalculateLoyaltyPointsRequest"/> class.
            </summary>
            <param name="orderId">order_id.</param>
            <param name="transactionAmountMoney">transaction_amount_money.</param>
        </member>
        <member name="P:Square.Models.CalculateLoyaltyPointsRequest.OrderId">
            <summary>
            The [order]($m/Order) ID for which to calculate the points.
            Specify this field if your application uses the Orders API to process orders.
            Otherwise, specify the `transaction_amount`.
            </summary>
        </member>
        <member name="P:Square.Models.CalculateLoyaltyPointsRequest.TransactionAmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CalculateLoyaltyPointsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsRequest.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsRequest.Builder.TransactionAmountMoney(Square.Models.Money)">
            <summary>
            TransactionAmountMoney.
            </summary>
            <param name="transactionAmountMoney"> transactionAmountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CalculateLoyaltyPointsRequest. </returns>
        </member>
        <member name="T:Square.Models.CalculateLoyaltyPointsResponse">
            <summary>
            CalculateLoyaltyPointsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CalculateLoyaltyPointsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="points">points.</param>
        </member>
        <member name="P:Square.Models.CalculateLoyaltyPointsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CalculateLoyaltyPointsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CalculateLoyaltyPointsResponse.Points">
            <summary>
            The points that the buyer can earn from a specified purchase.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CalculateLoyaltyPointsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsResponse.Builder.Points(System.Nullable{System.Int32})">
            <summary>
            Points.
            </summary>
            <param name="points"> points. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CalculateLoyaltyPointsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CalculateLoyaltyPointsResponse. </returns>
        </member>
        <member name="T:Square.Models.CalculateOrderRequest">
            <summary>
            CalculateOrderRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateOrderRequest.#ctor(Square.Models.Order,System.Collections.Generic.IList{Square.Models.OrderReward})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CalculateOrderRequest"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="proposedRewards">proposed_rewards.</param>
        </member>
        <member name="P:Square.Models.CalculateOrderRequest.Order">
            <summary>
            Contains all information related to a single order to process with Square,
            including line items that specify the products to purchase. `Order` objects also
            include information about any associated tenders, refunds, and returns.
            All Connect V2 Transactions have all been converted to Orders including all associated
            itemization data.
            </summary>
        </member>
        <member name="P:Square.Models.CalculateOrderRequest.ProposedRewards">
            <summary>
            Identifies one or more loyalty reward tiers to apply during the order calculation.
            The discounts defined by the reward tiers are added to the order only to preview the
            effect of applying the specified rewards. The rewards do not correspond to actual
            redemptions; that is, no `reward`s are created. Therefore, the reward `id`s are
            random strings used only to reference the reward tier.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateOrderRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateOrderRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateOrderRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateOrderRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CalculateOrderRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CalculateOrderRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateOrderRequest.Builder.Order(Square.Models.Order)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CalculateOrderRequest.Builder.ProposedRewards(System.Collections.Generic.IList{Square.Models.OrderReward})">
            <summary>
            ProposedRewards.
            </summary>
            <param name="proposedRewards"> proposedRewards. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CalculateOrderRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CalculateOrderRequest. </returns>
        </member>
        <member name="T:Square.Models.CalculateOrderResponse">
            <summary>
            CalculateOrderResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateOrderResponse.#ctor(Square.Models.Order,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CalculateOrderResponse"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CalculateOrderResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CalculateOrderResponse.Order">
            <summary>
            Contains all information related to a single order to process with Square,
            including line items that specify the products to purchase. `Order` objects also
            include information about any associated tenders, refunds, and returns.
            All Connect V2 Transactions have all been converted to Orders including all associated
            itemization data.
            </summary>
        </member>
        <member name="P:Square.Models.CalculateOrderResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateOrderResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateOrderResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateOrderResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CalculateOrderResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CalculateOrderResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CalculateOrderResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CalculateOrderResponse.Builder.Order(Square.Models.Order)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CalculateOrderResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CalculateOrderResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CalculateOrderResponse. </returns>
        </member>
        <member name="T:Square.Models.CancelBookingRequest">
            <summary>
            CancelBookingRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CancelBookingRequest.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CancelBookingRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="bookingVersion">booking_version.</param>
        </member>
        <member name="P:Square.Models.CancelBookingRequest.IdempotencyKey">
            <summary>
            A unique key to make this request an idempotent operation.
            </summary>
        </member>
        <member name="P:Square.Models.CancelBookingRequest.BookingVersion">
            <summary>
            The revision number for the booking used for optimistic concurrency.
            </summary>
        </member>
        <member name="M:Square.Models.CancelBookingRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelBookingRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelBookingRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelBookingRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CancelBookingRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CancelBookingRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CancelBookingRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelBookingRequest.Builder.BookingVersion(System.Nullable{System.Int32})">
            <summary>
            BookingVersion.
            </summary>
            <param name="bookingVersion"> bookingVersion. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelBookingRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CancelBookingRequest. </returns>
        </member>
        <member name="T:Square.Models.CancelBookingResponse">
            <summary>
            CancelBookingResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CancelBookingResponse.#ctor(Square.Models.Booking,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CancelBookingResponse"/> class.
            </summary>
            <param name="booking">booking.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CancelBookingResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CancelBookingResponse.Booking">
            <summary>
            Represents a booking as a time-bound service contract for a seller's staff member to provide a specified service
            at a given location to a requesting customer in one or more appointment segments.
            </summary>
        </member>
        <member name="P:Square.Models.CancelBookingResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CancelBookingResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelBookingResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelBookingResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelBookingResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CancelBookingResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CancelBookingResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CancelBookingResponse.Builder.Booking(Square.Models.Booking)">
            <summary>
            Booking.
            </summary>
            <param name="booking"> booking. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelBookingResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelBookingResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CancelBookingResponse. </returns>
        </member>
        <member name="T:Square.Models.CancelInvoiceRequest">
            <summary>
            CancelInvoiceRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CancelInvoiceRequest.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CancelInvoiceRequest"/> class.
            </summary>
            <param name="version">version.</param>
        </member>
        <member name="P:Square.Models.CancelInvoiceRequest.Version">
            <summary>
            The version of the [invoice]($m/Invoice) to cancel.
            If you do not know the version, you can call
            [GetInvoice]($e/Invoices/GetInvoice) or [ListInvoices]($e/Invoices/ListInvoices).
            </summary>
        </member>
        <member name="M:Square.Models.CancelInvoiceRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelInvoiceRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelInvoiceRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelInvoiceRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CancelInvoiceRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CancelInvoiceRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CancelInvoiceRequest.Builder.Version(System.Int32)">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelInvoiceRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CancelInvoiceRequest. </returns>
        </member>
        <member name="T:Square.Models.CancelInvoiceResponse">
            <summary>
            CancelInvoiceResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CancelInvoiceResponse.#ctor(Square.Models.Invoice,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CancelInvoiceResponse"/> class.
            </summary>
            <param name="invoice">invoice.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CancelInvoiceResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CancelInvoiceResponse.Invoice">
            <summary>
            Stores information about an invoice. You use the Invoices API to create and manage
            invoices. For more information, see [Manage Invoices Using the Invoices API](https://developer.squareup.com/docs/invoices-api/overview).
            </summary>
        </member>
        <member name="P:Square.Models.CancelInvoiceResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CancelInvoiceResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelInvoiceResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelInvoiceResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelInvoiceResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CancelInvoiceResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CancelInvoiceResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CancelInvoiceResponse.Builder.Invoice(Square.Models.Invoice)">
            <summary>
            Invoice.
            </summary>
            <param name="invoice"> invoice. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelInvoiceResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelInvoiceResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CancelInvoiceResponse. </returns>
        </member>
        <member name="T:Square.Models.CancelPaymentByIdempotencyKeyRequest">
            <summary>
            CancelPaymentByIdempotencyKeyRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CancelPaymentByIdempotencyKeyRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.CancelPaymentByIdempotencyKeyRequest.IdempotencyKey">
            <summary>
            The `idempotency_key` identifying the payment to be canceled.
            </summary>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CancelPaymentByIdempotencyKeyRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CancelPaymentByIdempotencyKeyRequest. </returns>
        </member>
        <member name="T:Square.Models.CancelPaymentByIdempotencyKeyResponse">
            <summary>
            CancelPaymentByIdempotencyKeyResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CancelPaymentByIdempotencyKeyResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CancelPaymentByIdempotencyKeyResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CancelPaymentByIdempotencyKeyResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CancelPaymentByIdempotencyKeyResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelPaymentByIdempotencyKeyResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CancelPaymentByIdempotencyKeyResponse. </returns>
        </member>
        <member name="T:Square.Models.CancelPaymentResponse">
            <summary>
            CancelPaymentResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CancelPaymentResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Payment)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CancelPaymentResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="payment">payment.</param>
        </member>
        <member name="P:Square.Models.CancelPaymentResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CancelPaymentResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CancelPaymentResponse.Payment">
            <summary>
            Represents a payment processed by the Square API.
            </summary>
        </member>
        <member name="M:Square.Models.CancelPaymentResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelPaymentResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelPaymentResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelPaymentResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CancelPaymentResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CancelPaymentResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CancelPaymentResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelPaymentResponse.Builder.Payment(Square.Models.Payment)">
            <summary>
            Payment.
            </summary>
            <param name="payment"> payment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelPaymentResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CancelPaymentResponse. </returns>
        </member>
        <member name="T:Square.Models.CancelSubscriptionResponse">
            <summary>
            CancelSubscriptionResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CancelSubscriptionResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CancelSubscriptionResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="subscription">subscription.</param>
        </member>
        <member name="P:Square.Models.CancelSubscriptionResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CancelSubscriptionResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CancelSubscriptionResponse.Subscription">
            <summary>
            Represents a customer subscription to a subscription plan.
            For an overview of the `Subscription` type, see
            [Subscription object](https://developer.squareup.com/docs/subscriptions-api/overview#subscription-object-overview).
            </summary>
        </member>
        <member name="M:Square.Models.CancelSubscriptionResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelSubscriptionResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelSubscriptionResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelSubscriptionResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CancelSubscriptionResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CancelSubscriptionResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CancelSubscriptionResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelSubscriptionResponse.Builder.Subscription(Square.Models.Subscription)">
            <summary>
            Subscription.
            </summary>
            <param name="subscription"> subscription. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelSubscriptionResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CancelSubscriptionResponse. </returns>
        </member>
        <member name="T:Square.Models.CancelTerminalCheckoutResponse">
            <summary>
            CancelTerminalCheckoutResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CancelTerminalCheckoutResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.TerminalCheckout)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CancelTerminalCheckoutResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="checkout">checkout.</param>
        </member>
        <member name="P:Square.Models.CancelTerminalCheckoutResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CancelTerminalCheckoutResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CancelTerminalCheckoutResponse.Checkout">
            <summary>
            Gets or sets Checkout.
            </summary>
        </member>
        <member name="M:Square.Models.CancelTerminalCheckoutResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelTerminalCheckoutResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelTerminalCheckoutResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelTerminalCheckoutResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CancelTerminalCheckoutResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CancelTerminalCheckoutResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CancelTerminalCheckoutResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelTerminalCheckoutResponse.Builder.Checkout(Square.Models.TerminalCheckout)">
            <summary>
            Checkout.
            </summary>
            <param name="checkout"> checkout. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelTerminalCheckoutResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CancelTerminalCheckoutResponse. </returns>
        </member>
        <member name="T:Square.Models.CancelTerminalRefundResponse">
            <summary>
            CancelTerminalRefundResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CancelTerminalRefundResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.TerminalRefund)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CancelTerminalRefundResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="refund">refund.</param>
        </member>
        <member name="P:Square.Models.CancelTerminalRefundResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CancelTerminalRefundResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CancelTerminalRefundResponse.Refund">
            <summary>
            Gets or sets Refund.
            </summary>
        </member>
        <member name="M:Square.Models.CancelTerminalRefundResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelTerminalRefundResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelTerminalRefundResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CancelTerminalRefundResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CancelTerminalRefundResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CancelTerminalRefundResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CancelTerminalRefundResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelTerminalRefundResponse.Builder.Refund(Square.Models.TerminalRefund)">
            <summary>
            Refund.
            </summary>
            <param name="refund"> refund. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CancelTerminalRefundResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CancelTerminalRefundResponse. </returns>
        </member>
        <member name="T:Square.Models.CaptureTransactionResponse">
            <summary>
            CaptureTransactionResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CaptureTransactionResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CaptureTransactionResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CaptureTransactionResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CaptureTransactionResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CaptureTransactionResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CaptureTransactionResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CaptureTransactionResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CaptureTransactionResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CaptureTransactionResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CaptureTransactionResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CaptureTransactionResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CaptureTransactionResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CaptureTransactionResponse. </returns>
        </member>
        <member name="T:Square.Models.Card">
            <summary>
            Card.
            </summary>
        </member>
        <member name="M:Square.Models.Card.#ctor(System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,Square.Models.Address,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Card"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="cardBrand">card_brand.</param>
            <param name="last4">last_4.</param>
            <param name="expMonth">exp_month.</param>
            <param name="expYear">exp_year.</param>
            <param name="cardholderName">cardholder_name.</param>
            <param name="billingAddress">billing_address.</param>
            <param name="fingerprint">fingerprint.</param>
            <param name="cardType">card_type.</param>
            <param name="prepaidType">prepaid_type.</param>
            <param name="bin">bin.</param>
        </member>
        <member name="P:Square.Models.Card.Id">
            <summary>
            Unique ID for this card. Generated by Square.
            </summary>
        </member>
        <member name="P:Square.Models.Card.CardBrand">
            <summary>
            Indicates a card's brand, such as `VISA` or `MASTERCARD`.
            </summary>
        </member>
        <member name="P:Square.Models.Card.Last4">
            <summary>
            The last 4 digits of the card number.
            </summary>
        </member>
        <member name="P:Square.Models.Card.ExpMonth">
            <summary>
            The expiration month of the associated card as an integer between 1 and 12.
            </summary>
        </member>
        <member name="P:Square.Models.Card.ExpYear">
            <summary>
            The four-digit year of the card's expiration date.
            </summary>
        </member>
        <member name="P:Square.Models.Card.CardholderName">
            <summary>
            The name of the cardholder.
            </summary>
        </member>
        <member name="P:Square.Models.Card.BillingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.Card.Fingerprint">
            <summary>
            __Not currently set.__ Intended as a Square-assigned identifier, based
            on the card number, to identify the card across multiple locations within a
            single application.
            </summary>
        </member>
        <member name="P:Square.Models.Card.CardType">
            <summary>
            Indicates a card's type, such as `CREDIT` or `DEBIT`.
            </summary>
        </member>
        <member name="P:Square.Models.Card.PrepaidType">
            <summary>
            Indicates a card's prepaid type, such as `NOT_PREPAID` or `PREPAID`.
            </summary>
        </member>
        <member name="P:Square.Models.Card.Bin">
            <summary>
            The first six digits of the card number, known as the Bank Identification Number (BIN). Only the Payments API
            returns this field.
            </summary>
        </member>
        <member name="M:Square.Models.Card.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Card.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Card.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Card.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Card.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Card.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Card.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.CardBrand(System.String)">
            <summary>
            CardBrand.
            </summary>
            <param name="cardBrand"> cardBrand. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.Last4(System.String)">
            <summary>
            Last4.
            </summary>
            <param name="last4"> last4. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.ExpMonth(System.Nullable{System.Int64})">
            <summary>
            ExpMonth.
            </summary>
            <param name="expMonth"> expMonth. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.ExpYear(System.Nullable{System.Int64})">
            <summary>
            ExpYear.
            </summary>
            <param name="expYear"> expYear. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.CardholderName(System.String)">
            <summary>
            CardholderName.
            </summary>
            <param name="cardholderName"> cardholderName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.BillingAddress(Square.Models.Address)">
            <summary>
            BillingAddress.
            </summary>
            <param name="billingAddress"> billingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.Fingerprint(System.String)">
            <summary>
            Fingerprint.
            </summary>
            <param name="fingerprint"> fingerprint. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.CardType(System.String)">
            <summary>
            CardType.
            </summary>
            <param name="cardType"> cardType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.PrepaidType(System.String)">
            <summary>
            PrepaidType.
            </summary>
            <param name="prepaidType"> prepaidType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.Bin(System.String)">
            <summary>
            Bin.
            </summary>
            <param name="bin"> bin. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Card.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Card. </returns>
        </member>
        <member name="T:Square.Models.CardPaymentDetails">
            <summary>
            CardPaymentDetails.
            </summary>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.#ctor(System.String,Square.Models.Card,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.DeviceDetails,Square.Models.CardPaymentTimeline,System.Nullable{System.Boolean},System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CardPaymentDetails"/> class.
            </summary>
            <param name="status">status.</param>
            <param name="card">card.</param>
            <param name="entryMethod">entry_method.</param>
            <param name="cvvStatus">cvv_status.</param>
            <param name="avsStatus">avs_status.</param>
            <param name="authResultCode">auth_result_code.</param>
            <param name="applicationIdentifier">application_identifier.</param>
            <param name="applicationName">application_name.</param>
            <param name="applicationCryptogram">application_cryptogram.</param>
            <param name="verificationMethod">verification_method.</param>
            <param name="verificationResults">verification_results.</param>
            <param name="statementDescription">statement_description.</param>
            <param name="deviceDetails">device_details.</param>
            <param name="cardPaymentTimeline">card_payment_timeline.</param>
            <param name="refundRequiresCardPresence">refund_requires_card_presence.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.Status">
            <summary>
            The card payment's current state. The state can be AUTHORIZED, CAPTURED, VOIDED, or
            FAILED.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.Card">
            <summary>
            Represents the payment details of a card to be used for payments. These
            details are determined by the `card_nonce` generated by `SqPaymentForm`.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.EntryMethod">
            <summary>
            The method used to enter the card's details for the payment. The method can be
            `KEYED`, `SWIPED`, `EMV`, `ON_FILE`, or `CONTACTLESS`.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.CvvStatus">
            <summary>
            The status code returned from the Card Verification Value (CVV) check. The code can be
            `CVV_ACCEPTED`, `CVV_REJECTED`, or `CVV_NOT_CHECKED`.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.AvsStatus">
            <summary>
            The status code returned from the Address Verification System (AVS) check. The code can be
            `AVS_ACCEPTED`, `AVS_REJECTED`, or `AVS_NOT_CHECKED`.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.AuthResultCode">
            <summary>
            The status code returned by the card issuer that describes the payment's
            authorization status.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.ApplicationIdentifier">
            <summary>
            For EMV payments, the application ID identifies the EMV application used for the payment.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.ApplicationName">
            <summary>
            For EMV payments, the human-readable name of the EMV application used for the payment.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.ApplicationCryptogram">
            <summary>
            For EMV payments, the cryptogram generated for the payment.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.VerificationMethod">
            <summary>
            For EMV payments, the method used to verify the cardholder's identity. The method can be
            `PIN`, `SIGNATURE`, `PIN_AND_SIGNATURE`, `ON_DEVICE`, or `NONE`.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.VerificationResults">
            <summary>
            For EMV payments, the results of the cardholder verification. The result can be
            `SUCCESS`, `FAILURE`, or `UNKNOWN`.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.StatementDescription">
            <summary>
            The statement description sent to the card networks.
            Note: The actual statement description varies and is likely to be truncated and appended with
            additional information on a per issuer basis.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.DeviceDetails">
            <summary>
            Details about the device that took the payment.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.CardPaymentTimeline">
            <summary>
            The timeline for card payments.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.RefundRequiresCardPresence">
            <summary>
            Whether the card must be physically present for the payment to
            be refunded.  If set to `true`, the card must be present.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentDetails.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CardPaymentDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.Card(Square.Models.Card)">
            <summary>
            Card.
            </summary>
            <param name="card"> card. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.EntryMethod(System.String)">
            <summary>
            EntryMethod.
            </summary>
            <param name="entryMethod"> entryMethod. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.CvvStatus(System.String)">
            <summary>
            CvvStatus.
            </summary>
            <param name="cvvStatus"> cvvStatus. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.AvsStatus(System.String)">
            <summary>
            AvsStatus.
            </summary>
            <param name="avsStatus"> avsStatus. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.AuthResultCode(System.String)">
            <summary>
            AuthResultCode.
            </summary>
            <param name="authResultCode"> authResultCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.ApplicationIdentifier(System.String)">
            <summary>
            ApplicationIdentifier.
            </summary>
            <param name="applicationIdentifier"> applicationIdentifier. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.ApplicationName(System.String)">
            <summary>
            ApplicationName.
            </summary>
            <param name="applicationName"> applicationName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.ApplicationCryptogram(System.String)">
            <summary>
            ApplicationCryptogram.
            </summary>
            <param name="applicationCryptogram"> applicationCryptogram. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.VerificationMethod(System.String)">
            <summary>
            VerificationMethod.
            </summary>
            <param name="verificationMethod"> verificationMethod. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.VerificationResults(System.String)">
            <summary>
            VerificationResults.
            </summary>
            <param name="verificationResults"> verificationResults. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.StatementDescription(System.String)">
            <summary>
            StatementDescription.
            </summary>
            <param name="statementDescription"> statementDescription. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.DeviceDetails(Square.Models.DeviceDetails)">
            <summary>
            DeviceDetails.
            </summary>
            <param name="deviceDetails"> deviceDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.CardPaymentTimeline(Square.Models.CardPaymentTimeline)">
            <summary>
            CardPaymentTimeline.
            </summary>
            <param name="cardPaymentTimeline"> cardPaymentTimeline. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.RefundRequiresCardPresence(System.Nullable{System.Boolean})">
            <summary>
            RefundRequiresCardPresence.
            </summary>
            <param name="refundRequiresCardPresence"> refundRequiresCardPresence. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CardPaymentDetails. </returns>
        </member>
        <member name="T:Square.Models.CardPaymentTimeline">
            <summary>
            CardPaymentTimeline.
            </summary>
        </member>
        <member name="M:Square.Models.CardPaymentTimeline.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CardPaymentTimeline"/> class.
            </summary>
            <param name="authorizedAt">authorized_at.</param>
            <param name="capturedAt">captured_at.</param>
            <param name="voidedAt">voided_at.</param>
        </member>
        <member name="P:Square.Models.CardPaymentTimeline.AuthorizedAt">
            <summary>
            The timestamp when the payment was authorized, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentTimeline.CapturedAt">
            <summary>
            The timestamp when the payment was captured, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.CardPaymentTimeline.VoidedAt">
            <summary>
            The timestamp when the payment was voided, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.CardPaymentTimeline.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CardPaymentTimeline.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CardPaymentTimeline.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CardPaymentTimeline.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CardPaymentTimeline.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CardPaymentTimeline.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CardPaymentTimeline.Builder.AuthorizedAt(System.String)">
            <summary>
            AuthorizedAt.
            </summary>
            <param name="authorizedAt"> authorizedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentTimeline.Builder.CapturedAt(System.String)">
            <summary>
            CapturedAt.
            </summary>
            <param name="capturedAt"> capturedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentTimeline.Builder.VoidedAt(System.String)">
            <summary>
            VoidedAt.
            </summary>
            <param name="voidedAt"> voidedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CardPaymentTimeline.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CardPaymentTimeline. </returns>
        </member>
        <member name="T:Square.Models.CashDrawerDevice">
            <summary>
            CashDrawerDevice.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerDevice.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CashDrawerDevice"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="name">name.</param>
        </member>
        <member name="P:Square.Models.CashDrawerDevice.Id">
            <summary>
            The device Square-issued ID
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerDevice.Name">
            <summary>
            The device merchant-specified name.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerDevice.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerDevice.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerDevice.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerDevice.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CashDrawerDevice.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CashDrawerDevice.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerDevice.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerDevice.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerDevice.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CashDrawerDevice. </returns>
        </member>
        <member name="T:Square.Models.CashDrawerShift">
            <summary>
            CashDrawerShift.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerShift.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.CashDrawerDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CashDrawerShift"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="state">state.</param>
            <param name="openedAt">opened_at.</param>
            <param name="endedAt">ended_at.</param>
            <param name="closedAt">closed_at.</param>
            <param name="employeeIds">employee_ids.</param>
            <param name="openingEmployeeId">opening_employee_id.</param>
            <param name="endingEmployeeId">ending_employee_id.</param>
            <param name="closingEmployeeId">closing_employee_id.</param>
            <param name="description">description.</param>
            <param name="openedCashMoney">opened_cash_money.</param>
            <param name="cashPaymentMoney">cash_payment_money.</param>
            <param name="cashRefundsMoney">cash_refunds_money.</param>
            <param name="cashPaidInMoney">cash_paid_in_money.</param>
            <param name="cashPaidOutMoney">cash_paid_out_money.</param>
            <param name="expectedCashMoney">expected_cash_money.</param>
            <param name="closedCashMoney">closed_cash_money.</param>
            <param name="device">device.</param>
        </member>
        <member name="P:Square.Models.CashDrawerShift.Id">
            <summary>
            The shift unique ID.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.State">
            <summary>
            The current state of a cash drawer shift.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.OpenedAt">
            <summary>
            The time when the shift began, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.EndedAt">
            <summary>
            The time when the shift ended, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.ClosedAt">
            <summary>
            The time when the shift was closed, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.EmployeeIds">
            <summary>
            The IDs of all employees that were logged into Square Point of Sale at any
            point while the cash drawer shift was open.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.OpeningEmployeeId">
            <summary>
            The ID of the employee that started the cash drawer shift.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.EndingEmployeeId">
            <summary>
            The ID of the employee that ended the cash drawer shift.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.ClosingEmployeeId">
            <summary>
            The ID of the employee that closed the cash drawer shift by auditing
            the cash drawer contents.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.Description">
            <summary>
            The free-form text description of a cash drawer by an employee.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.OpenedCashMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.CashPaymentMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.CashRefundsMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.CashPaidInMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.CashPaidOutMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.ExpectedCashMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.ClosedCashMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShift.Device">
            <summary>
            Gets or sets Device.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerShift.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerShift.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerShift.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CashDrawerShift.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CashDrawerShift.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.OpenedAt(System.String)">
            <summary>
            OpenedAt.
            </summary>
            <param name="openedAt"> openedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.EndedAt(System.String)">
            <summary>
            EndedAt.
            </summary>
            <param name="endedAt"> endedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.ClosedAt(System.String)">
            <summary>
            ClosedAt.
            </summary>
            <param name="closedAt"> closedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.EmployeeIds(System.Collections.Generic.IList{System.String})">
            <summary>
            EmployeeIds.
            </summary>
            <param name="employeeIds"> employeeIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.OpeningEmployeeId(System.String)">
            <summary>
            OpeningEmployeeId.
            </summary>
            <param name="openingEmployeeId"> openingEmployeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.EndingEmployeeId(System.String)">
            <summary>
            EndingEmployeeId.
            </summary>
            <param name="endingEmployeeId"> endingEmployeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.ClosingEmployeeId(System.String)">
            <summary>
            ClosingEmployeeId.
            </summary>
            <param name="closingEmployeeId"> closingEmployeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.OpenedCashMoney(Square.Models.Money)">
            <summary>
            OpenedCashMoney.
            </summary>
            <param name="openedCashMoney"> openedCashMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.CashPaymentMoney(Square.Models.Money)">
            <summary>
            CashPaymentMoney.
            </summary>
            <param name="cashPaymentMoney"> cashPaymentMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.CashRefundsMoney(Square.Models.Money)">
            <summary>
            CashRefundsMoney.
            </summary>
            <param name="cashRefundsMoney"> cashRefundsMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.CashPaidInMoney(Square.Models.Money)">
            <summary>
            CashPaidInMoney.
            </summary>
            <param name="cashPaidInMoney"> cashPaidInMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.CashPaidOutMoney(Square.Models.Money)">
            <summary>
            CashPaidOutMoney.
            </summary>
            <param name="cashPaidOutMoney"> cashPaidOutMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.ExpectedCashMoney(Square.Models.Money)">
            <summary>
            ExpectedCashMoney.
            </summary>
            <param name="expectedCashMoney"> expectedCashMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.ClosedCashMoney(Square.Models.Money)">
            <summary>
            ClosedCashMoney.
            </summary>
            <param name="closedCashMoney"> closedCashMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.Device(Square.Models.CashDrawerDevice)">
            <summary>
            Device.
            </summary>
            <param name="device"> device. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShift.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CashDrawerShift. </returns>
        </member>
        <member name="T:Square.Models.CashDrawerShiftEvent">
            <summary>
            CashDrawerShiftEvent.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.#ctor(System.String,System.String,System.String,Square.Models.Money,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CashDrawerShiftEvent"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="employeeId">employee_id.</param>
            <param name="eventType">event_type.</param>
            <param name="eventMoney">event_money.</param>
            <param name="createdAt">created_at.</param>
            <param name="description">description.</param>
        </member>
        <member name="P:Square.Models.CashDrawerShiftEvent.Id">
            <summary>
            The unique ID of the event.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftEvent.EmployeeId">
            <summary>
            The ID of the employee that created the event.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftEvent.EventType">
            <summary>
            The types of events on a CashDrawerShift.
            Each event type represents an employee action on the actual cash drawer
            represented by a CashDrawerShift.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftEvent.EventMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftEvent.CreatedAt">
            <summary>
            The event time in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftEvent.Description">
            <summary>
            An optional description of the event, entered by the employee that
            created the event.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CashDrawerShiftEvent.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.Builder.EmployeeId(System.String)">
            <summary>
            EmployeeId.
            </summary>
            <param name="employeeId"> employeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.Builder.EventType(System.String)">
            <summary>
            EventType.
            </summary>
            <param name="eventType"> eventType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.Builder.EventMoney(Square.Models.Money)">
            <summary>
            EventMoney.
            </summary>
            <param name="eventMoney"> eventMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftEvent.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CashDrawerShiftEvent. </returns>
        </member>
        <member name="T:Square.Models.CashDrawerShiftSummary">
            <summary>
            CashDrawerShiftSummary.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.Money,Square.Models.Money,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CashDrawerShiftSummary"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="state">state.</param>
            <param name="openedAt">opened_at.</param>
            <param name="endedAt">ended_at.</param>
            <param name="closedAt">closed_at.</param>
            <param name="description">description.</param>
            <param name="openedCashMoney">opened_cash_money.</param>
            <param name="expectedCashMoney">expected_cash_money.</param>
            <param name="closedCashMoney">closed_cash_money.</param>
        </member>
        <member name="P:Square.Models.CashDrawerShiftSummary.Id">
            <summary>
            The shift unique ID.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftSummary.State">
            <summary>
            The current state of a cash drawer shift.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftSummary.OpenedAt">
            <summary>
            The shift start time in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftSummary.EndedAt">
            <summary>
            The shift end time in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftSummary.ClosedAt">
            <summary>
            The shift close time in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftSummary.Description">
            <summary>
            An employee free-text description of a cash drawer shift.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftSummary.OpenedCashMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftSummary.ExpectedCashMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashDrawerShiftSummary.ClosedCashMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CashDrawerShiftSummary.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Builder.OpenedAt(System.String)">
            <summary>
            OpenedAt.
            </summary>
            <param name="openedAt"> openedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Builder.EndedAt(System.String)">
            <summary>
            EndedAt.
            </summary>
            <param name="endedAt"> endedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Builder.ClosedAt(System.String)">
            <summary>
            ClosedAt.
            </summary>
            <param name="closedAt"> closedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Builder.OpenedCashMoney(Square.Models.Money)">
            <summary>
            OpenedCashMoney.
            </summary>
            <param name="openedCashMoney"> openedCashMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Builder.ExpectedCashMoney(Square.Models.Money)">
            <summary>
            ExpectedCashMoney.
            </summary>
            <param name="expectedCashMoney"> expectedCashMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Builder.ClosedCashMoney(Square.Models.Money)">
            <summary>
            ClosedCashMoney.
            </summary>
            <param name="closedCashMoney"> closedCashMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashDrawerShiftSummary.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CashDrawerShiftSummary. </returns>
        </member>
        <member name="T:Square.Models.CashPaymentDetails">
            <summary>
            CashPaymentDetails.
            </summary>
        </member>
        <member name="M:Square.Models.CashPaymentDetails.#ctor(Square.Models.Money,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CashPaymentDetails"/> class.
            </summary>
            <param name="buyerSuppliedMoney">buyer_supplied_money.</param>
            <param name="changeBackMoney">change_back_money.</param>
        </member>
        <member name="P:Square.Models.CashPaymentDetails.BuyerSuppliedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CashPaymentDetails.ChangeBackMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.CashPaymentDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashPaymentDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashPaymentDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CashPaymentDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CashPaymentDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CashPaymentDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CashPaymentDetails.Builder.BuyerSuppliedMoney(Square.Models.Money)">
            <summary>
            BuyerSuppliedMoney.
            </summary>
            <param name="buyerSuppliedMoney"> buyerSuppliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashPaymentDetails.Builder.ChangeBackMoney(Square.Models.Money)">
            <summary>
            ChangeBackMoney.
            </summary>
            <param name="changeBackMoney"> changeBackMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CashPaymentDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CashPaymentDetails. </returns>
        </member>
        <member name="T:Square.Models.CatalogCategory">
            <summary>
            CatalogCategory.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCategory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogCategory"/> class.
            </summary>
            <param name="name">name.</param>
        </member>
        <member name="P:Square.Models.CatalogCategory.Name">
            <summary>
            The category name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCategory.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCategory.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCategory.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCategory.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogCategory.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogCategory.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCategory.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCategory.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogCategory. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeDefinition">
            <summary>
            CatalogCustomAttributeDefinition.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.String,Square.Models.SourceApplication,System.String,System.String,Square.Models.CatalogCustomAttributeDefinitionStringConfig,Square.Models.CatalogCustomAttributeDefinitionNumberConfig,Square.Models.CatalogCustomAttributeDefinitionSelectionConfig,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogCustomAttributeDefinition"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="name">name.</param>
            <param name="allowedObjectTypes">allowed_object_types.</param>
            <param name="description">description.</param>
            <param name="sourceApplication">source_application.</param>
            <param name="sellerVisibility">seller_visibility.</param>
            <param name="appVisibility">app_visibility.</param>
            <param name="stringConfig">string_config.</param>
            <param name="numberConfig">number_config.</param>
            <param name="selectionConfig">selection_config.</param>
            <param name="customAttributeUsageCount">custom_attribute_usage_count.</param>
            <param name="key">key.</param>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.Type">
            <summary>
            Defines the possible types for a custom attribute.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.Name">
            <summary>
            The name of this definition for API and seller-facing UI purposes.
            The name must be unique within the (merchant, application) pair. Required.
            May not be empty and may not exceed 255 characters. Can be modified after creation.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.Description">
            <summary>
            Seller-oriented description of the meaning of this Custom Attribute,
            any constraints that the seller should observe, etc. May be displayed as a tooltip in Square UIs.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.SourceApplication">
            <summary>
            Provides information about the application used to generate a change.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.AllowedObjectTypes">
            <summary>
            The set of Catalog Object Types that this Custom Attribute may be applied to.
            Currently, only `ITEM` and `ITEM_VARIATION` are allowed. At least one type must be included.
            See [CatalogObjectType](#type-catalogobjecttype) for possible values
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.SellerVisibility">
            <summary>
            Defines the visibility of a custom attribute to sellers in Square
            client applications, Square APIs or in Square UIs (including Square Point
            of Sale applications and Square Dashboard).
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.AppVisibility">
            <summary>
            Defines the visibility of a custom attribute to applications other than their
            creating application.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.StringConfig">
            <summary>
            Configuration associated with Custom Attribute Definitions of type `STRING`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.NumberConfig">
            <summary>
            Gets or sets NumberConfig.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.SelectionConfig">
            <summary>
            Configuration associated with `SELECTION`-type custom attribute definitions.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.CustomAttributeUsageCount">
            <summary>
            __Read-only.__ The number of custom attributes that reference this
            custom attribute definition. Set by the server in response to a ListCatalog
            request with `include_counts` set to `true`.  If the actual count is greater
            than 100, `custom_attribute_usage_count` will be set to `100`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinition.Key">
            <summary>
            The name of the desired custom attribute key that can be used to access
            the custom attribute value on catalog objects. Cannot be modified after the
            custom attribute definition has been created.
            Must be between 1 and 60 characters, and may only contain the characters `[a-zA-Z0-9_-]`.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeDefinition.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.AllowedObjectTypes(System.Collections.Generic.IList{System.String})">
            <summary>
            AllowedObjectTypes.
            </summary>
            <param name="allowedObjectTypes"> allowedObjectTypes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.SourceApplication(Square.Models.SourceApplication)">
            <summary>
            SourceApplication.
            </summary>
            <param name="sourceApplication"> sourceApplication. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.SellerVisibility(System.String)">
            <summary>
            SellerVisibility.
            </summary>
            <param name="sellerVisibility"> sellerVisibility. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.AppVisibility(System.String)">
            <summary>
            AppVisibility.
            </summary>
            <param name="appVisibility"> appVisibility. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.StringConfig(Square.Models.CatalogCustomAttributeDefinitionStringConfig)">
            <summary>
            StringConfig.
            </summary>
            <param name="stringConfig"> stringConfig. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.NumberConfig(Square.Models.CatalogCustomAttributeDefinitionNumberConfig)">
            <summary>
            NumberConfig.
            </summary>
            <param name="numberConfig"> numberConfig. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.SelectionConfig(Square.Models.CatalogCustomAttributeDefinitionSelectionConfig)">
            <summary>
            SelectionConfig.
            </summary>
            <param name="selectionConfig"> selectionConfig. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.CustomAttributeUsageCount(System.Nullable{System.Int32})">
            <summary>
            CustomAttributeUsageCount.
            </summary>
            <param name="customAttributeUsageCount"> customAttributeUsageCount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.Key(System.String)">
            <summary>
            Key.
            </summary>
            <param name="key"> key. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinition.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogCustomAttributeDefinition. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeDefinitionNumberConfig">
            <summary>
            CatalogCustomAttributeDefinitionNumberConfig.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionNumberConfig.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogCustomAttributeDefinitionNumberConfig"/> class.
            </summary>
            <param name="precision">precision.</param>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinitionNumberConfig.Precision">
            <summary>
            An integer between 0 and 5 that represents the maximum number of
            positions allowed after the decimal in number custom attribute values
            For example:
            - if the precision is 0, the quantity can be 1, 2, 3, etc.
            - if the precision is 1, the quantity can be 0.1, 0.2, etc.
            - if the precision is 2, the quantity can be 0.01, 0.12, etc.
            Default: 5
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionNumberConfig.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionNumberConfig.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionNumberConfig.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionNumberConfig.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionNumberConfig.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeDefinitionNumberConfig.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionNumberConfig.Builder.Precision(System.Nullable{System.Int32})">
            <summary>
            Precision.
            </summary>
            <param name="precision"> precision. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionNumberConfig.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogCustomAttributeDefinitionNumberConfig. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig">
            <summary>
            CatalogCustomAttributeDefinitionSelectionConfig.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.#ctor(System.Nullable{System.Int32},System.Collections.Generic.IList{Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig"/> class.
            </summary>
            <param name="maxAllowedSelections">max_allowed_selections.</param>
            <param name="allowedSelections">allowed_selections.</param>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.MaxAllowedSelections">
            <summary>
            The maximum number of selections that can be set. The maximum value for this
            attribute is 100. The default value is 1. The value can be modified, but changing the value will not
            affect existing custom attribute values on objects. Clients need to
            handle custom attributes with more selected values than allowed by this limit.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.AllowedSelections">
            <summary>
            The set of valid `CatalogCustomAttributeSelections`. Up to a maximum of 100
            selections can be defined. Can be modified.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.Builder.MaxAllowedSelections(System.Nullable{System.Int32})">
            <summary>
            MaxAllowedSelections.
            </summary>
            <param name="maxAllowedSelections"> maxAllowedSelections. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.Builder.AllowedSelections(System.Collections.Generic.IList{Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection})">
            <summary>
            AllowedSelections.
            </summary>
            <param name="allowedSelections"> allowedSelections. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfig.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogCustomAttributeDefinitionSelectionConfig. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection">
            <summary>
            CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="uid">uid.</param>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.Uid">
            <summary>
            Unique ID set by Square.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.Name">
            <summary>
            Selection name, unique within `allowed_selections`.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeDefinitionStringConfig">
            <summary>
            CatalogCustomAttributeDefinitionStringConfig.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionStringConfig.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogCustomAttributeDefinitionStringConfig"/> class.
            </summary>
            <param name="enforceUniqueness">enforce_uniqueness.</param>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeDefinitionStringConfig.EnforceUniqueness">
            <summary>
            If true, each Custom Attribute instance associated with this Custom Attribute
            Definition must have a unique value within the seller's catalog. For
            example, this may be used for a value like a SKU that should not be
            duplicated within a seller's catalog. May not be modified after the
            definition has been created.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionStringConfig.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionStringConfig.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionStringConfig.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionStringConfig.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionStringConfig.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeDefinitionStringConfig.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionStringConfig.Builder.EnforceUniqueness(System.Nullable{System.Boolean})">
            <summary>
            EnforceUniqueness.
            </summary>
            <param name="enforceUniqueness"> enforceUniqueness. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeDefinitionStringConfig.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogCustomAttributeDefinitionStringConfig. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeValue">
            <summary>
            CatalogCustomAttributeValue.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogCustomAttributeValue"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="stringValue">string_value.</param>
            <param name="customAttributeDefinitionId">custom_attribute_definition_id.</param>
            <param name="type">type.</param>
            <param name="numberValue">number_value.</param>
            <param name="booleanValue">boolean_value.</param>
            <param name="selectionUidValues">selection_uid_values.</param>
            <param name="key">key.</param>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeValue.Name">
            <summary>
            The name of the custom attribute.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeValue.StringValue">
            <summary>
            The string value of the custom attribute.  Populated if `type` = `STRING`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeValue.CustomAttributeDefinitionId">
            <summary>
            __Read-only.__ The id of the [CatalogCustomAttributeDefinition]($m/CatalogCustomAttributeDefinition) this value belongs to.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeValue.Type">
            <summary>
            Defines the possible types for a custom attribute.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeValue.NumberValue">
            <summary>
            Populated if `type` = `NUMBER`. Contains a string
            representation of a decimal number, using a `.` as the decimal separator.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeValue.BooleanValue">
            <summary>
            A `true` or `false` value. Populated if `type` = `BOOLEAN`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeValue.SelectionUidValues">
            <summary>
            One or more choices from `allowed_selections`. Populated if `type` = `SELECTION`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogCustomAttributeValue.Key">
            <summary>
            __Read-only.__ A copy of key from the associated `CatalogCustomAttributeDefinition`.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogCustomAttributeValue.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.Builder.StringValue(System.String)">
            <summary>
            StringValue.
            </summary>
            <param name="stringValue"> stringValue. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.Builder.CustomAttributeDefinitionId(System.String)">
            <summary>
            CustomAttributeDefinitionId.
            </summary>
            <param name="customAttributeDefinitionId"> customAttributeDefinitionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.Builder.NumberValue(System.String)">
            <summary>
            NumberValue.
            </summary>
            <param name="numberValue"> numberValue. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.Builder.BooleanValue(System.Nullable{System.Boolean})">
            <summary>
            BooleanValue.
            </summary>
            <param name="booleanValue"> booleanValue. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.Builder.SelectionUidValues(System.Collections.Generic.IList{System.String})">
            <summary>
            SelectionUidValues.
            </summary>
            <param name="selectionUidValues"> selectionUidValues. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.Builder.Key(System.String)">
            <summary>
            Key.
            </summary>
            <param name="key"> key. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogCustomAttributeValue.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogCustomAttributeValue. </returns>
        </member>
        <member name="T:Square.Models.CatalogDiscount">
            <summary>
            CatalogDiscount.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogDiscount.#ctor(System.String,System.String,System.String,Square.Models.Money,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogDiscount"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="discountType">discount_type.</param>
            <param name="percentage">percentage.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="pinRequired">pin_required.</param>
            <param name="labelColor">label_color.</param>
            <param name="modifyTaxBasis">modify_tax_basis.</param>
        </member>
        <member name="P:Square.Models.CatalogDiscount.Name">
            <summary>
            The discount name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogDiscount.DiscountType">
            <summary>
            How to apply a CatalogDiscount to a CatalogItem.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogDiscount.Percentage">
            <summary>
            The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal
            separator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`
            is `VARIABLE_PERCENTAGE`.
            Do not use this field for amount-based or variable discounts.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogDiscount.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogDiscount.PinRequired">
            <summary>
            Indicates whether a mobile staff member needs to enter their PIN to apply the
            discount to a payment in the Square Point of Sale app.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogDiscount.LabelColor">
            <summary>
            The color of the discount display label in the Square Point of Sale app. This must be a valid hex color code.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogDiscount.ModifyTaxBasis">
            <summary>
            Gets or sets ModifyTaxBasis.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogDiscount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogDiscount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogDiscount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogDiscount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogDiscount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogDiscount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogDiscount.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogDiscount.Builder.DiscountType(System.String)">
            <summary>
            DiscountType.
            </summary>
            <param name="discountType"> discountType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogDiscount.Builder.Percentage(System.String)">
            <summary>
            Percentage.
            </summary>
            <param name="percentage"> percentage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogDiscount.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogDiscount.Builder.PinRequired(System.Nullable{System.Boolean})">
            <summary>
            PinRequired.
            </summary>
            <param name="pinRequired"> pinRequired. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogDiscount.Builder.LabelColor(System.String)">
            <summary>
            LabelColor.
            </summary>
            <param name="labelColor"> labelColor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogDiscount.Builder.ModifyTaxBasis(System.String)">
            <summary>
            ModifyTaxBasis.
            </summary>
            <param name="modifyTaxBasis"> modifyTaxBasis. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogDiscount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogDiscount. </returns>
        </member>
        <member name="T:Square.Models.CatalogIdMapping">
            <summary>
            CatalogIdMapping.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogIdMapping.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogIdMapping"/> class.
            </summary>
            <param name="clientObjectId">client_object_id.</param>
            <param name="objectId">object_id.</param>
        </member>
        <member name="P:Square.Models.CatalogIdMapping.ClientObjectId">
            <summary>
            The client-supplied temporary `#`-prefixed ID for a new `CatalogObject`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogIdMapping.ObjectId">
            <summary>
            The permanent ID for the CatalogObject created by the server.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogIdMapping.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogIdMapping.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogIdMapping.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogIdMapping.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogIdMapping.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogIdMapping.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogIdMapping.Builder.ClientObjectId(System.String)">
            <summary>
            ClientObjectId.
            </summary>
            <param name="clientObjectId"> clientObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogIdMapping.Builder.ObjectId(System.String)">
            <summary>
            ObjectId.
            </summary>
            <param name="objectId"> objectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogIdMapping.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogIdMapping. </returns>
        </member>
        <member name="T:Square.Models.CatalogImage">
            <summary>
            CatalogImage.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogImage.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogImage"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="url">url.</param>
            <param name="caption">caption.</param>
        </member>
        <member name="P:Square.Models.CatalogImage.Name">
            <summary>
            The internal name to identify this image in calls to the Square API.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogImage.Url">
            <summary>
            The URL of this image, generated by Square after an image is uploaded
            using the [CreateCatalogImage]($e/Catalog/CreateCatalogImage) endpoint.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogImage.Caption">
            <summary>
            A caption that describes what is shown in the image. Displayed in the
            Square Online Store. This is a searchable attribute for use in applicable query filters.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogImage.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogImage.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogImage.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogImage.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogImage.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogImage.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogImage.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogImage.Builder.Url(System.String)">
            <summary>
            Url.
            </summary>
            <param name="url"> url. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogImage.Builder.Caption(System.String)">
            <summary>
            Caption.
            </summary>
            <param name="caption"> caption. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogImage.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogImage. </returns>
        </member>
        <member name="T:Square.Models.CatalogInfoResponse">
            <summary>
            CatalogInfoResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogInfoResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.CatalogInfoResponseLimits,Square.Models.StandardUnitDescriptionGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogInfoResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="limits">limits.</param>
            <param name="standardUnitDescriptionGroup">standard_unit_description_group.</param>
        </member>
        <member name="P:Square.Models.CatalogInfoResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponse.Limits">
            <summary>
            Gets or sets Limits.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponse.StandardUnitDescriptionGroup">
            <summary>
            Group of standard measurement units.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogInfoResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogInfoResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogInfoResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogInfoResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogInfoResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogInfoResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogInfoResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponse.Builder.Limits(Square.Models.CatalogInfoResponseLimits)">
            <summary>
            Limits.
            </summary>
            <param name="limits"> limits. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponse.Builder.StandardUnitDescriptionGroup(Square.Models.StandardUnitDescriptionGroup)">
            <summary>
            StandardUnitDescriptionGroup.
            </summary>
            <param name="standardUnitDescriptionGroup"> standardUnitDescriptionGroup. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogInfoResponse. </returns>
        </member>
        <member name="T:Square.Models.CatalogInfoResponseLimits">
            <summary>
            CatalogInfoResponseLimits.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogInfoResponseLimits"/> class.
            </summary>
            <param name="batchUpsertMaxObjectsPerBatch">batch_upsert_max_objects_per_batch.</param>
            <param name="batchUpsertMaxTotalObjects">batch_upsert_max_total_objects.</param>
            <param name="batchRetrieveMaxObjectIds">batch_retrieve_max_object_ids.</param>
            <param name="searchMaxPageLimit">search_max_page_limit.</param>
            <param name="batchDeleteMaxObjectIds">batch_delete_max_object_ids.</param>
            <param name="updateItemTaxesMaxItemIds">update_item_taxes_max_item_ids.</param>
            <param name="updateItemTaxesMaxTaxesToEnable">update_item_taxes_max_taxes_to_enable.</param>
            <param name="updateItemTaxesMaxTaxesToDisable">update_item_taxes_max_taxes_to_disable.</param>
            <param name="updateItemModifierListsMaxItemIds">update_item_modifier_lists_max_item_ids.</param>
            <param name="updateItemModifierListsMaxModifierListsToEnable">update_item_modifier_lists_max_modifier_lists_to_enable.</param>
            <param name="updateItemModifierListsMaxModifierListsToDisable">update_item_modifier_lists_max_modifier_lists_to_disable.</param>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.BatchUpsertMaxObjectsPerBatch">
            <summary>
            The maximum number of objects that may appear within a single batch in a
            `/v2/catalog/batch-upsert` request.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.BatchUpsertMaxTotalObjects">
            <summary>
            The maximum number of objects that may appear across all batches in a
            `/v2/catalog/batch-upsert` request.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.BatchRetrieveMaxObjectIds">
            <summary>
            The maximum number of object IDs that may appear in a `/v2/catalog/batch-retrieve`
            request.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.SearchMaxPageLimit">
            <summary>
            The maximum number of results that may be returned in a page of a
            `/v2/catalog/search` response.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.BatchDeleteMaxObjectIds">
            <summary>
            The maximum number of object IDs that may be included in a single
            `/v2/catalog/batch-delete` request.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.UpdateItemTaxesMaxItemIds">
            <summary>
            The maximum number of item IDs that may be included in a single
            `/v2/catalog/update-item-taxes` request.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.UpdateItemTaxesMaxTaxesToEnable">
            <summary>
            The maximum number of tax IDs to be enabled that may be included in a single
            `/v2/catalog/update-item-taxes` request.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.UpdateItemTaxesMaxTaxesToDisable">
            <summary>
            The maximum number of tax IDs to be disabled that may be included in a single
            `/v2/catalog/update-item-taxes` request.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.UpdateItemModifierListsMaxItemIds">
            <summary>
            The maximum number of item IDs that may be included in a single
            `/v2/catalog/update-item-modifier-lists` request.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.UpdateItemModifierListsMaxModifierListsToEnable">
            <summary>
            The maximum number of modifier list IDs to be enabled that may be included in
            a single `/v2/catalog/update-item-modifier-lists` request.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogInfoResponseLimits.UpdateItemModifierListsMaxModifierListsToDisable">
            <summary>
            The maximum number of modifier list IDs to be disabled that may be included in
            a single `/v2/catalog/update-item-modifier-lists` request.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogInfoResponseLimits.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.BatchUpsertMaxObjectsPerBatch(System.Nullable{System.Int32})">
            <summary>
            BatchUpsertMaxObjectsPerBatch.
            </summary>
            <param name="batchUpsertMaxObjectsPerBatch"> batchUpsertMaxObjectsPerBatch. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.BatchUpsertMaxTotalObjects(System.Nullable{System.Int32})">
            <summary>
            BatchUpsertMaxTotalObjects.
            </summary>
            <param name="batchUpsertMaxTotalObjects"> batchUpsertMaxTotalObjects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.BatchRetrieveMaxObjectIds(System.Nullable{System.Int32})">
            <summary>
            BatchRetrieveMaxObjectIds.
            </summary>
            <param name="batchRetrieveMaxObjectIds"> batchRetrieveMaxObjectIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.SearchMaxPageLimit(System.Nullable{System.Int32})">
            <summary>
            SearchMaxPageLimit.
            </summary>
            <param name="searchMaxPageLimit"> searchMaxPageLimit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.BatchDeleteMaxObjectIds(System.Nullable{System.Int32})">
            <summary>
            BatchDeleteMaxObjectIds.
            </summary>
            <param name="batchDeleteMaxObjectIds"> batchDeleteMaxObjectIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.UpdateItemTaxesMaxItemIds(System.Nullable{System.Int32})">
            <summary>
            UpdateItemTaxesMaxItemIds.
            </summary>
            <param name="updateItemTaxesMaxItemIds"> updateItemTaxesMaxItemIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.UpdateItemTaxesMaxTaxesToEnable(System.Nullable{System.Int32})">
            <summary>
            UpdateItemTaxesMaxTaxesToEnable.
            </summary>
            <param name="updateItemTaxesMaxTaxesToEnable"> updateItemTaxesMaxTaxesToEnable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.UpdateItemTaxesMaxTaxesToDisable(System.Nullable{System.Int32})">
            <summary>
            UpdateItemTaxesMaxTaxesToDisable.
            </summary>
            <param name="updateItemTaxesMaxTaxesToDisable"> updateItemTaxesMaxTaxesToDisable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.UpdateItemModifierListsMaxItemIds(System.Nullable{System.Int32})">
            <summary>
            UpdateItemModifierListsMaxItemIds.
            </summary>
            <param name="updateItemModifierListsMaxItemIds"> updateItemModifierListsMaxItemIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.UpdateItemModifierListsMaxModifierListsToEnable(System.Nullable{System.Int32})">
            <summary>
            UpdateItemModifierListsMaxModifierListsToEnable.
            </summary>
            <param name="updateItemModifierListsMaxModifierListsToEnable"> updateItemModifierListsMaxModifierListsToEnable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.UpdateItemModifierListsMaxModifierListsToDisable(System.Nullable{System.Int32})">
            <summary>
            UpdateItemModifierListsMaxModifierListsToDisable.
            </summary>
            <param name="updateItemModifierListsMaxModifierListsToDisable"> updateItemModifierListsMaxModifierListsToDisable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogInfoResponseLimits.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogInfoResponseLimits. </returns>
        </member>
        <member name="T:Square.Models.CatalogItem">
            <summary>
            CatalogItem.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItem.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Square.Models.CatalogItemModifierListInfo},System.Collections.Generic.IList{Square.Models.CatalogObject},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Square.Models.CatalogItemOptionForItem},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogItem"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="abbreviation">abbreviation.</param>
            <param name="labelColor">label_color.</param>
            <param name="availableOnline">available_online.</param>
            <param name="availableForPickup">available_for_pickup.</param>
            <param name="availableElectronically">available_electronically.</param>
            <param name="categoryId">category_id.</param>
            <param name="taxIds">tax_ids.</param>
            <param name="modifierListInfo">modifier_list_info.</param>
            <param name="variations">variations.</param>
            <param name="productType">product_type.</param>
            <param name="skipModifierScreen">skip_modifier_screen.</param>
            <param name="itemOptions">item_options.</param>
            <param name="sortName">sort_name.</param>
        </member>
        <member name="P:Square.Models.CatalogItem.Name">
            <summary>
            The item's name. This is a searchable attribute for use in applicable query filters, its value must not be empty, and the length is of Unicode code points.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.Description">
            <summary>
            The item's description. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.Abbreviation">
            <summary>
            The text of the item's display label in the Square Point of Sale app. Only up to the first five characters of the string are used.
            This attribute is searchable, and its value length is of Unicode code points.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.LabelColor">
            <summary>
            The color of the item's display label in the Square Point of Sale app. This must be a valid hex color code.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.AvailableOnline">
            <summary>
            If `true`, the item can be added to shipping orders from the merchant's online store.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.AvailableForPickup">
            <summary>
            If `true`, the item can be added to pickup orders from the merchant's online store.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.AvailableElectronically">
            <summary>
            If `true`, the item can be added to electronically fulfilled orders from the merchant's online store.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.CategoryId">
            <summary>
            The ID of the item's category, if any.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.TaxIds">
            <summary>
            A set of IDs indicating the taxes enabled for
            this item. When updating an item, any taxes listed here will be added to the item.
            Taxes may also be added to or deleted from an item using `UpdateItemTaxes`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.ModifierListInfo">
            <summary>
            A set of `CatalogItemModifierListInfo` objects
            representing the modifier lists that apply to this item, along with the overrides and min
            and max limits that are specific to this item. Modifier lists
            may also be added to or deleted from an item using `UpdateItemModifierLists`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.Variations">
            <summary>
            A list of CatalogObjects containing the `CatalogItemVariation`s for this item.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.ProductType">
            <summary>
            The type of a CatalogItem. Connect V2 only allows the creation of `REGULAR` or `APPOINTMENTS_SERVICE` items.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.SkipModifierScreen">
            <summary>
            If `false`, the Square Point of Sale app will present the `CatalogItem`'s
            details screen immediately, allowing the merchant to choose `CatalogModifier`s
            before adding the item to the cart.  This is the default behavior.
            If `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected
            modifiers, and merchants can edit modifiers by drilling down onto the item's details.
            Third-party clients are encouraged to implement similar behaviors.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.ItemOptions">
            <summary>
            List of item options IDs for this item. Used to manage and group item
            variations in a specified order.
            Maximum: 6 item options.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItem.SortName">
            <summary>
            A name to sort the item by. If this name is unspecified, namely, the `sort_name` field is absent, the regular `name` field is used for sorting.
            It is currently supported for sellers of the Japanese locale only.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItem.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItem.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItem.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItem.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogItem.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogItem.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.Abbreviation(System.String)">
            <summary>
            Abbreviation.
            </summary>
            <param name="abbreviation"> abbreviation. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.LabelColor(System.String)">
            <summary>
            LabelColor.
            </summary>
            <param name="labelColor"> labelColor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.AvailableOnline(System.Nullable{System.Boolean})">
            <summary>
            AvailableOnline.
            </summary>
            <param name="availableOnline"> availableOnline. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.AvailableForPickup(System.Nullable{System.Boolean})">
            <summary>
            AvailableForPickup.
            </summary>
            <param name="availableForPickup"> availableForPickup. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.AvailableElectronically(System.Nullable{System.Boolean})">
            <summary>
            AvailableElectronically.
            </summary>
            <param name="availableElectronically"> availableElectronically. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.CategoryId(System.String)">
            <summary>
            CategoryId.
            </summary>
            <param name="categoryId"> categoryId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.TaxIds(System.Collections.Generic.IList{System.String})">
            <summary>
            TaxIds.
            </summary>
            <param name="taxIds"> taxIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.ModifierListInfo(System.Collections.Generic.IList{Square.Models.CatalogItemModifierListInfo})">
            <summary>
            ModifierListInfo.
            </summary>
            <param name="modifierListInfo"> modifierListInfo. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.Variations(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Variations.
            </summary>
            <param name="variations"> variations. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.ProductType(System.String)">
            <summary>
            ProductType.
            </summary>
            <param name="productType"> productType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.SkipModifierScreen(System.Nullable{System.Boolean})">
            <summary>
            SkipModifierScreen.
            </summary>
            <param name="skipModifierScreen"> skipModifierScreen. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.ItemOptions(System.Collections.Generic.IList{Square.Models.CatalogItemOptionForItem})">
            <summary>
            ItemOptions.
            </summary>
            <param name="itemOptions"> itemOptions. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.SortName(System.String)">
            <summary>
            SortName.
            </summary>
            <param name="sortName"> sortName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItem.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogItem. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemModifierListInfo">
            <summary>
            CatalogItemModifierListInfo.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.#ctor(System.String,System.Collections.Generic.IList{Square.Models.CatalogModifierOverride},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogItemModifierListInfo"/> class.
            </summary>
            <param name="modifierListId">modifier_list_id.</param>
            <param name="modifierOverrides">modifier_overrides.</param>
            <param name="minSelectedModifiers">min_selected_modifiers.</param>
            <param name="maxSelectedModifiers">max_selected_modifiers.</param>
            <param name="enabled">enabled.</param>
        </member>
        <member name="P:Square.Models.CatalogItemModifierListInfo.ModifierListId">
            <summary>
            The ID of the `CatalogModifierList` controlled by this `CatalogModifierListInfo`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemModifierListInfo.ModifierOverrides">
            <summary>
            A set of `CatalogModifierOverride` objects that override whether a given `CatalogModifier` is enabled by default.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemModifierListInfo.MinSelectedModifiers">
            <summary>
            If 0 or larger, the smallest number of `CatalogModifier`s that must be selected from this `CatalogModifierList`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemModifierListInfo.MaxSelectedModifiers">
            <summary>
            If 0 or larger, the largest number of `CatalogModifier`s that can be selected from this `CatalogModifierList`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemModifierListInfo.Enabled">
            <summary>
            If `true`, enable this `CatalogModifierList`. The default value is `true`.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemModifierListInfo.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.Builder.ModifierListId(System.String)">
            <summary>
            ModifierListId.
            </summary>
            <param name="modifierListId"> modifierListId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.Builder.ModifierOverrides(System.Collections.Generic.IList{Square.Models.CatalogModifierOverride})">
            <summary>
            ModifierOverrides.
            </summary>
            <param name="modifierOverrides"> modifierOverrides. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.Builder.MinSelectedModifiers(System.Nullable{System.Int32})">
            <summary>
            MinSelectedModifiers.
            </summary>
            <param name="minSelectedModifiers"> minSelectedModifiers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.Builder.MaxSelectedModifiers(System.Nullable{System.Int32})">
            <summary>
            MaxSelectedModifiers.
            </summary>
            <param name="maxSelectedModifiers"> maxSelectedModifiers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.Builder.Enabled(System.Nullable{System.Boolean})">
            <summary>
            Enabled.
            </summary>
            <param name="enabled"> enabled. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemModifierListInfo.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogItemModifierListInfo. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemOption">
            <summary>
            CatalogItemOption.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOption.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogItemOption"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="displayName">display_name.</param>
            <param name="description">description.</param>
            <param name="showColors">show_colors.</param>
            <param name="values">values.</param>
        </member>
        <member name="P:Square.Models.CatalogItemOption.Name">
            <summary>
            The item option's display name for the seller. Must be unique across
            all item options. This is a searchable attribute for use in applicable query filters.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemOption.DisplayName">
            <summary>
            The item option's display name for the customer. This is a searchable attribute for use in applicable query filters.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemOption.Description">
            <summary>
            The item option's human-readable description. Displayed in the Square
            Point of Sale app for the seller and in the Online Store or on receipts for
            the buyer. This is a searchable attribute for use in applicable query filters.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemOption.ShowColors">
            <summary>
            If true, display colors for entries in `values` when present.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemOption.Values">
            <summary>
            A list of CatalogObjects containing the
            `CatalogItemOptionValue`s for this item.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOption.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOption.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOption.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOption.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogItemOption.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemOption.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOption.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOption.Builder.DisplayName(System.String)">
            <summary>
            DisplayName.
            </summary>
            <param name="displayName"> displayName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOption.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOption.Builder.ShowColors(System.Nullable{System.Boolean})">
            <summary>
            ShowColors.
            </summary>
            <param name="showColors"> showColors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOption.Builder.Values(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Values.
            </summary>
            <param name="values"> values. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOption.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogItemOption. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemOptionForItem">
            <summary>
            CatalogItemOptionForItem.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOptionForItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogItemOptionForItem"/> class.
            </summary>
            <param name="itemOptionId">item_option_id.</param>
        </member>
        <member name="P:Square.Models.CatalogItemOptionForItem.ItemOptionId">
            <summary>
            The unique id of the item option, used to form the dimensions of the item option matrix in a specified order.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOptionForItem.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOptionForItem.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOptionForItem.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOptionForItem.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogItemOptionForItem.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemOptionForItem.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOptionForItem.Builder.ItemOptionId(System.String)">
            <summary>
            ItemOptionId.
            </summary>
            <param name="itemOptionId"> itemOptionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOptionForItem.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogItemOptionForItem. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemOptionValue">
            <summary>
            CatalogItemOptionValue.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogItemOptionValue"/> class.
            </summary>
            <param name="itemOptionId">item_option_id.</param>
            <param name="name">name.</param>
            <param name="description">description.</param>
            <param name="color">color.</param>
            <param name="ordinal">ordinal.</param>
        </member>
        <member name="P:Square.Models.CatalogItemOptionValue.ItemOptionId">
            <summary>
            Unique ID of the associated item option.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemOptionValue.Name">
            <summary>
            Name of this item option value. This is a searchable attribute for use in applicable query filters.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemOptionValue.Description">
            <summary>
            A human-readable description for the option value. This is a searchable attribute for use in applicable query filters.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemOptionValue.Color">
            <summary>
            The HTML-supported hex color for the item option (e.g., "#ff8d4e85").
            Only displayed if `show_colors` is enabled on the parent `ItemOption`. When
            left unset, `color` defaults to white ("#ffffff") when `show_colors` is
            enabled on the parent `ItemOption`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemOptionValue.Ordinal">
            <summary>
            Determines where this option value appears in a list of option values.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemOptionValue.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.Builder.ItemOptionId(System.String)">
            <summary>
            ItemOptionId.
            </summary>
            <param name="itemOptionId"> itemOptionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.Builder.Color(System.String)">
            <summary>
            Color.
            </summary>
            <param name="color"> color. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.Builder.Ordinal(System.Nullable{System.Int32})">
            <summary>
            Ordinal.
            </summary>
            <param name="ordinal"> ordinal. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValue.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogItemOptionValue. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemOptionValueForItemVariation">
            <summary>
            CatalogItemOptionValueForItemVariation.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValueForItemVariation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogItemOptionValueForItemVariation"/> class.
            </summary>
            <param name="itemOptionId">item_option_id.</param>
            <param name="itemOptionValueId">item_option_value_id.</param>
        </member>
        <member name="P:Square.Models.CatalogItemOptionValueForItemVariation.ItemOptionId">
            <summary>
            The unique id of an item option.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemOptionValueForItemVariation.ItemOptionValueId">
            <summary>
            The unique id of the selected value for the item option.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValueForItemVariation.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValueForItemVariation.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValueForItemVariation.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValueForItemVariation.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValueForItemVariation.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemOptionValueForItemVariation.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValueForItemVariation.Builder.ItemOptionId(System.String)">
            <summary>
            ItemOptionId.
            </summary>
            <param name="itemOptionId"> itemOptionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValueForItemVariation.Builder.ItemOptionValueId(System.String)">
            <summary>
            ItemOptionValueId.
            </summary>
            <param name="itemOptionValueId"> itemOptionValueId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemOptionValueForItemVariation.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogItemOptionValueForItemVariation. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemVariation">
            <summary>
            CatalogItemVariation.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,Square.Models.Money,System.Collections.Generic.IList{Square.Models.ItemVariationLocationOverrides},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Collections.Generic.IList{Square.Models.CatalogItemOptionValueForItemVariation},System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogItemVariation"/> class.
            </summary>
            <param name="itemId">item_id.</param>
            <param name="name">name.</param>
            <param name="sku">sku.</param>
            <param name="upc">upc.</param>
            <param name="ordinal">ordinal.</param>
            <param name="pricingType">pricing_type.</param>
            <param name="priceMoney">price_money.</param>
            <param name="locationOverrides">location_overrides.</param>
            <param name="trackInventory">track_inventory.</param>
            <param name="inventoryAlertType">inventory_alert_type.</param>
            <param name="inventoryAlertThreshold">inventory_alert_threshold.</param>
            <param name="userData">user_data.</param>
            <param name="serviceDuration">service_duration.</param>
            <param name="availableForBooking">available_for_booking.</param>
            <param name="itemOptionValues">item_option_values.</param>
            <param name="measurementUnitId">measurement_unit_id.</param>
            <param name="teamMemberIds">team_member_ids.</param>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.ItemId">
            <summary>
            The ID of the `CatalogItem` associated with this item variation.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.Name">
            <summary>
            The item variation's name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.Sku">
            <summary>
            The item variation's SKU, if any. This is a searchable attribute for use in applicable query filters.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.Upc">
            <summary>
            The universal product code (UPC) of the item variation, if any. This is a searchable attribute for use in applicable query filters.
            The value of this attribute should be a number of 12-14 digits long.  This restriction is enforced on the Square Seller Dashboard,
            Square Point of Sale or Retail Point of Sale apps, where this attribute shows in the GTIN field. If a non-compliant UPC value is assigned
            to this attribute using the API, the value is not editable on the Seller Dashboard, Square Point of Sale or Retail Point of Sale apps
            unless it is updated to fit the expected format.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.Ordinal">
            <summary>
            The order in which this item variation should be displayed. This value is read-only. On writes, the ordinal
            for each item variation within a parent `CatalogItem` is set according to the item variations's
            position. On reads, the value is not guaranteed to be sequential or unique.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.PricingType">
            <summary>
            Indicates whether the price of a CatalogItemVariation should be entered manually at the time of sale.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.PriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.LocationOverrides">
            <summary>
            Per-location price and inventory overrides.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.TrackInventory">
            <summary>
            If `true`, inventory tracking is active for the variation.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.InventoryAlertType">
            <summary>
            Indicates whether Square should alert the merchant when the inventory quantity of a CatalogItemVariation is low.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.InventoryAlertThreshold">
            <summary>
            If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`
            is `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.
            This value is always an integer.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.UserData">
            <summary>
            Arbitrary user metadata to associate with the item variation. This attribute value length is of Unicode code points.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.ServiceDuration">
            <summary>
            If the `CatalogItem` that owns this item variation is of type
            `APPOINTMENTS_SERVICE`, then this is the duration of the service in milliseconds. For
            example, a 30 minute appointment would have the value `1800000`, which is equal to
            30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per second).
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.AvailableForBooking">
            <summary>
            If the `CatalogItem` that owns this item variation is of type
            `APPOINTMENTS_SERVICE`, a bool representing whether this service is available for booking.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.ItemOptionValues">
            <summary>
            List of item option values associated with this item variation. Listed
            in the same order as the item options of the parent item.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.MeasurementUnitId">
            <summary>
            ID of the ‘CatalogMeasurementUnit’ that is used to measure the quantity
            sold of this item variation. If left unset, the item will be sold in
            whole quantities.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogItemVariation.TeamMemberIds">
            <summary>
            Tokens of employees that can perform the service represented by this variation. Only valid for
            variations of type `APPOINTMENTS_SERVICE`.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogItemVariation.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.ItemId(System.String)">
            <summary>
            ItemId.
            </summary>
            <param name="itemId"> itemId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.Sku(System.String)">
            <summary>
            Sku.
            </summary>
            <param name="sku"> sku. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.Upc(System.String)">
            <summary>
            Upc.
            </summary>
            <param name="upc"> upc. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.Ordinal(System.Nullable{System.Int32})">
            <summary>
            Ordinal.
            </summary>
            <param name="ordinal"> ordinal. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.PricingType(System.String)">
            <summary>
            PricingType.
            </summary>
            <param name="pricingType"> pricingType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.PriceMoney(Square.Models.Money)">
            <summary>
            PriceMoney.
            </summary>
            <param name="priceMoney"> priceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.LocationOverrides(System.Collections.Generic.IList{Square.Models.ItemVariationLocationOverrides})">
            <summary>
            LocationOverrides.
            </summary>
            <param name="locationOverrides"> locationOverrides. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.TrackInventory(System.Nullable{System.Boolean})">
            <summary>
            TrackInventory.
            </summary>
            <param name="trackInventory"> trackInventory. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.InventoryAlertType(System.String)">
            <summary>
            InventoryAlertType.
            </summary>
            <param name="inventoryAlertType"> inventoryAlertType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.InventoryAlertThreshold(System.Nullable{System.Int64})">
            <summary>
            InventoryAlertThreshold.
            </summary>
            <param name="inventoryAlertThreshold"> inventoryAlertThreshold. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.UserData(System.String)">
            <summary>
            UserData.
            </summary>
            <param name="userData"> userData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.ServiceDuration(System.Nullable{System.Int64})">
            <summary>
            ServiceDuration.
            </summary>
            <param name="serviceDuration"> serviceDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.AvailableForBooking(System.Nullable{System.Boolean})">
            <summary>
            AvailableForBooking.
            </summary>
            <param name="availableForBooking"> availableForBooking. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.ItemOptionValues(System.Collections.Generic.IList{Square.Models.CatalogItemOptionValueForItemVariation})">
            <summary>
            ItemOptionValues.
            </summary>
            <param name="itemOptionValues"> itemOptionValues. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.MeasurementUnitId(System.String)">
            <summary>
            MeasurementUnitId.
            </summary>
            <param name="measurementUnitId"> measurementUnitId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.TeamMemberIds(System.Collections.Generic.IList{System.String})">
            <summary>
            TeamMemberIds.
            </summary>
            <param name="teamMemberIds"> teamMemberIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogItemVariation.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogItemVariation. </returns>
        </member>
        <member name="T:Square.Models.CatalogMeasurementUnit">
            <summary>
            CatalogMeasurementUnit.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogMeasurementUnit.#ctor(Square.Models.MeasurementUnit,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogMeasurementUnit"/> class.
            </summary>
            <param name="measurementUnit">measurement_unit.</param>
            <param name="precision">precision.</param>
        </member>
        <member name="P:Square.Models.CatalogMeasurementUnit.MeasurementUnit">
            <summary>
            Represents a unit of measurement to use with a quantity, such as ounces
            or inches. Exactly one of the following fields are required: `custom_unit`,
            `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogMeasurementUnit.Precision">
            <summary>
            An integer between 0 and 5 that represents the maximum number of
            positions allowed after the decimal in quantities measured with this unit.
            For example:
            - if the precision is 0, the quantity can be 1, 2, 3, etc.
            - if the precision is 1, the quantity can be 0.1, 0.2, etc.
            - if the precision is 2, the quantity can be 0.01, 0.12, etc.
            Default: 3
            </summary>
        </member>
        <member name="M:Square.Models.CatalogMeasurementUnit.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogMeasurementUnit.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogMeasurementUnit.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogMeasurementUnit.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogMeasurementUnit.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogMeasurementUnit.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogMeasurementUnit.Builder.MeasurementUnit(Square.Models.MeasurementUnit)">
            <summary>
            MeasurementUnit.
            </summary>
            <param name="measurementUnit"> measurementUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogMeasurementUnit.Builder.Precision(System.Nullable{System.Int32})">
            <summary>
            Precision.
            </summary>
            <param name="precision"> precision. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogMeasurementUnit.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogMeasurementUnit. </returns>
        </member>
        <member name="T:Square.Models.CatalogModifier">
            <summary>
            CatalogModifier.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogModifier.#ctor(System.String,Square.Models.Money,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogModifier"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="priceMoney">price_money.</param>
            <param name="ordinal">ordinal.</param>
            <param name="modifierListId">modifier_list_id.</param>
        </member>
        <member name="P:Square.Models.CatalogModifier.Name">
            <summary>
            The modifier name.  This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogModifier.PriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogModifier.Ordinal">
            <summary>
            Determines where this `CatalogModifier` appears in the `CatalogModifierList`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogModifier.ModifierListId">
            <summary>
            The ID of the `CatalogModifierList` associated with this modifier.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogModifier.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogModifier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogModifier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogModifier.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogModifier.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogModifier.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogModifier.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogModifier.Builder.PriceMoney(Square.Models.Money)">
            <summary>
            PriceMoney.
            </summary>
            <param name="priceMoney"> priceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogModifier.Builder.Ordinal(System.Nullable{System.Int32})">
            <summary>
            Ordinal.
            </summary>
            <param name="ordinal"> ordinal. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogModifier.Builder.ModifierListId(System.String)">
            <summary>
            ModifierListId.
            </summary>
            <param name="modifierListId"> modifierListId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogModifier.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogModifier. </returns>
        </member>
        <member name="T:Square.Models.CatalogModifierList">
            <summary>
            CatalogModifierList.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogModifierList.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogModifierList"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="ordinal">ordinal.</param>
            <param name="selectionType">selection_type.</param>
            <param name="modifiers">modifiers.</param>
        </member>
        <member name="P:Square.Models.CatalogModifierList.Name">
            <summary>
            The name for the `CatalogModifierList` instance. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogModifierList.Ordinal">
            <summary>
            Determines where this modifier list appears in a list of `CatalogModifierList` values.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogModifierList.SelectionType">
            <summary>
            Indicates whether a CatalogModifierList supports multiple selections.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogModifierList.Modifiers">
            <summary>
            The options included in the `CatalogModifierList`.
            You must include at least one `CatalogModifier`.
            Each CatalogObject must have type `MODIFIER` and contain
            `CatalogModifier` data.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogModifierList.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogModifierList.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogModifierList.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogModifierList.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogModifierList.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogModifierList.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogModifierList.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogModifierList.Builder.Ordinal(System.Nullable{System.Int32})">
            <summary>
            Ordinal.
            </summary>
            <param name="ordinal"> ordinal. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogModifierList.Builder.SelectionType(System.String)">
            <summary>
            SelectionType.
            </summary>
            <param name="selectionType"> selectionType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogModifierList.Builder.Modifiers(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Modifiers.
            </summary>
            <param name="modifiers"> modifiers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogModifierList.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogModifierList. </returns>
        </member>
        <member name="T:Square.Models.CatalogModifierOverride">
            <summary>
            CatalogModifierOverride.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogModifierOverride.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogModifierOverride"/> class.
            </summary>
            <param name="modifierId">modifier_id.</param>
            <param name="onByDefault">on_by_default.</param>
        </member>
        <member name="P:Square.Models.CatalogModifierOverride.ModifierId">
            <summary>
            The ID of the `CatalogModifier` whose default behavior is being overridden.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogModifierOverride.OnByDefault">
            <summary>
            If `true`, this `CatalogModifier` should be selected by default for this `CatalogItem`.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogModifierOverride.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogModifierOverride.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogModifierOverride.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogModifierOverride.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogModifierOverride.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogModifierOverride.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogModifierOverride.Builder.ModifierId(System.String)">
            <summary>
            ModifierId.
            </summary>
            <param name="modifierId"> modifierId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogModifierOverride.Builder.OnByDefault(System.Nullable{System.Boolean})">
            <summary>
            OnByDefault.
            </summary>
            <param name="onByDefault"> onByDefault. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogModifierOverride.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogModifierOverride. </returns>
        </member>
        <member name="T:Square.Models.CatalogObject">
            <summary>
            CatalogObject.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogObject.#ctor(System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,Square.Models.CatalogCustomAttributeValue},System.Collections.Generic.IList{Square.Models.CatalogV1Id},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,Square.Models.CatalogItem,Square.Models.CatalogCategory,Square.Models.CatalogItemVariation,Square.Models.CatalogTax,Square.Models.CatalogDiscount,Square.Models.CatalogModifierList,Square.Models.CatalogModifier,Square.Models.CatalogTimePeriod,Square.Models.CatalogProductSet,Square.Models.CatalogPricingRule,Square.Models.CatalogImage,Square.Models.CatalogMeasurementUnit,Square.Models.CatalogSubscriptionPlan,Square.Models.CatalogItemOption,Square.Models.CatalogItemOptionValue,Square.Models.CatalogCustomAttributeDefinition,Square.Models.CatalogQuickAmountsSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogObject"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="id">id.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="version">version.</param>
            <param name="isDeleted">is_deleted.</param>
            <param name="customAttributeValues">custom_attribute_values.</param>
            <param name="catalogV1Ids">catalog_v1_ids.</param>
            <param name="presentAtAllLocations">present_at_all_locations.</param>
            <param name="presentAtLocationIds">present_at_location_ids.</param>
            <param name="absentAtLocationIds">absent_at_location_ids.</param>
            <param name="imageId">image_id.</param>
            <param name="itemData">item_data.</param>
            <param name="categoryData">category_data.</param>
            <param name="itemVariationData">item_variation_data.</param>
            <param name="taxData">tax_data.</param>
            <param name="discountData">discount_data.</param>
            <param name="modifierListData">modifier_list_data.</param>
            <param name="modifierData">modifier_data.</param>
            <param name="timePeriodData">time_period_data.</param>
            <param name="productSetData">product_set_data.</param>
            <param name="pricingRuleData">pricing_rule_data.</param>
            <param name="imageData">image_data.</param>
            <param name="measurementUnitData">measurement_unit_data.</param>
            <param name="subscriptionPlanData">subscription_plan_data.</param>
            <param name="itemOptionData">item_option_data.</param>
            <param name="itemOptionValueData">item_option_value_data.</param>
            <param name="customAttributeDefinitionData">custom_attribute_definition_data.</param>
            <param name="quickAmountsSettingsData">quick_amounts_settings_data.</param>
        </member>
        <member name="P:Square.Models.CatalogObject.Type">
            <summary>
            Possible types of CatalogObjects returned from the Catalog, each
            containing type-specific properties in the `*_data` field corresponding to the object type.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.Id">
            <summary>
            An identifier to reference this object in the catalog. When a new `CatalogObject`
            is inserted, the client should set the id to a temporary identifier starting with
            a "`#`" character. Other objects being inserted or updated within the same request
            may use this identifier to refer to the new object.
            When the server receives the new object, it will supply a unique identifier that
            replaces the temporary identifier for all future references.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.UpdatedAt">
            <summary>
            Last modification [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`
            would indicate the UTC time (denoted by `Z`) of August 15, 2016 at 23:59:33 and 123 milliseconds.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.Version">
            <summary>
            The version of the object. When updating an object, the version supplied
            must match the version in the database, otherwise the write will be rejected as conflicting.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.IsDeleted">
            <summary>
            If `true`, the object has been deleted from the database. Must be `false` for new objects
            being inserted. When deleted, the `updated_at` field will equal the deletion time.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.CustomAttributeValues">
            <summary>
            A map (key-value pairs) of application-defined custom attribute values. The value of a key-value pair
            is a [CatalogCustomAttributeValue]($m/CatalogCustomAttributeValue) object. The key is the `key` attribute
            value defined in the associated [CatalogCustomAttributeDefinition]($m/CatalogCustomAttributeDefinition)
            object defined by the application making the request.
            If the `CatalogCustomAttributeDefinition` object is
            defined by another application, the `CatalogCustomAttributeDefinition`'s key attribute value is prefixed by
            the defining application ID. For example, if the `CatalogCustomAttributeDefinition` has a `key` attribute of
            `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the key in the map is `"abcd1234:cocoa_brand"`
            if the application making the request is different from the application defining the custom attribute definition.
            Otherwise, the key used in the map is simply `"cocoa_brand"`.
            Application-defined custom attributes that are set at a global (location-independent) level.
            Custom attribute values are intended to store additional information about a catalog object
            or associations with an entity in another system. Do not use custom attributes
            to store any sensitive information (personally identifiable information, card details, etc.).
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.CatalogV1Ids">
            <summary>
            The Connect v1 IDs for this object at each location where it is present, where they
            differ from the object's Connect V2 ID. The field will only be present for objects that
            have been created or modified by legacy APIs.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.PresentAtAllLocations">
            <summary>
            If `true`, this object is present at all locations (including future locations), except where specified in
            the `absent_at_location_ids` field. If `false`, this object is not present at any locations (including future locations),
            except where specified in the `present_at_location_ids` field. If not specified, defaults to `true`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.PresentAtLocationIds">
            <summary>
            A list of locations where the object is present, even if `present_at_all_locations` is `false`.
            This can include locations that are deactivated.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.AbsentAtLocationIds">
            <summary>
            A list of locations where the object is not present, even if `present_at_all_locations` is `true`.
            This can include locations that are deactivated.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.ImageId">
            <summary>
            Identifies the `CatalogImage` attached to this `CatalogObject`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.ItemData">
            <summary>
            A [CatalogObject]($m/CatalogObject) instance of the `ITEM` type, also referred to as an item, in the catalog.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.CategoryData">
            <summary>
            A category to which a `CatalogItem` instance belongs.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.ItemVariationData">
            <summary>
            An item variation (i.e., product) in the Catalog object model. Each item
            may have a maximum of 250 item variations.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.TaxData">
            <summary>
            A tax applicable to an item.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.DiscountData">
            <summary>
            A discount applicable to items.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.ModifierListData">
            <summary>
            A list of modifiers applicable to items at the time of sale.
            For example, a "Condiments" modifier list applicable to a "Hot Dog" item
            may contain "Ketchup", "Mustard", and "Relish" modifiers.
            Use the `selection_type` field to specify whether or not multiple selections from
            the modifier list are allowed.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.ModifierData">
            <summary>
            A modifier applicable to items at the time of sale.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.TimePeriodData">
            <summary>
            Represents a time period - either a single period or a repeating period.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.ProductSetData">
            <summary>
            Represents a collection of catalog objects for the purpose of applying a
            `PricingRule`. Including a catalog object will include all of its subtypes.
            For example, including a category in a product set will include all of its
            items and associated item variations in the product set. Including an item in
            a product set will also include its item variations.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.PricingRuleData">
            <summary>
            Defines how discounts are automatically applied to a set of items that match the pricing rule
            during the active time period.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.ImageData">
            <summary>
            An image file to use in Square catalogs. It can be associated with catalog
            items, item variations, and categories.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.MeasurementUnitData">
            <summary>
            Represents the unit used to measure a `CatalogItemVariation` and
            specifies the precision for decimal quantities.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.SubscriptionPlanData">
            <summary>
            Describes a subscription plan. For more information, see
            [Set Up and Manage a Subscription Plan](https://developer.squareup.com/docs/subscriptions-api/setup-plan).
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.ItemOptionData">
            <summary>
            A group of variations for a `CatalogItem`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.ItemOptionValueData">
            <summary>
            An enumerated value that can link a
            `CatalogItemVariation` to an item option as one of
            its item option values.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.CustomAttributeDefinitionData">
            <summary>
            Contains information defining a custom attribute. Custom attributes are
            intended to store additional information about a catalog object or to associate a
            catalog object with an entity in another system. Do not use custom attributes
            to store any sensitive information (personally identifiable information, card details, etc.).
            [Read more about custom attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes)
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObject.QuickAmountsSettingsData">
            <summary>
            A parent Catalog Object model represents a set of Quick Amounts and the settings control the amounts.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogObject.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogObject.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogObject.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogObject.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogObject.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogObject.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.Version(System.Nullable{System.Int64})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.IsDeleted(System.Nullable{System.Boolean})">
            <summary>
            IsDeleted.
            </summary>
            <param name="isDeleted"> isDeleted. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.CustomAttributeValues(System.Collections.Generic.IDictionary{System.String,Square.Models.CatalogCustomAttributeValue})">
            <summary>
            CustomAttributeValues.
            </summary>
            <param name="customAttributeValues"> customAttributeValues. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.CatalogV1Ids(System.Collections.Generic.IList{Square.Models.CatalogV1Id})">
            <summary>
            CatalogV1Ids.
            </summary>
            <param name="catalogV1Ids"> catalogV1Ids. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.PresentAtAllLocations(System.Nullable{System.Boolean})">
            <summary>
            PresentAtAllLocations.
            </summary>
            <param name="presentAtAllLocations"> presentAtAllLocations. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.PresentAtLocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            PresentAtLocationIds.
            </summary>
            <param name="presentAtLocationIds"> presentAtLocationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.AbsentAtLocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            AbsentAtLocationIds.
            </summary>
            <param name="absentAtLocationIds"> absentAtLocationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.ImageId(System.String)">
            <summary>
            ImageId.
            </summary>
            <param name="imageId"> imageId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.ItemData(Square.Models.CatalogItem)">
            <summary>
            ItemData.
            </summary>
            <param name="itemData"> itemData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.CategoryData(Square.Models.CatalogCategory)">
            <summary>
            CategoryData.
            </summary>
            <param name="categoryData"> categoryData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.ItemVariationData(Square.Models.CatalogItemVariation)">
            <summary>
            ItemVariationData.
            </summary>
            <param name="itemVariationData"> itemVariationData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.TaxData(Square.Models.CatalogTax)">
            <summary>
            TaxData.
            </summary>
            <param name="taxData"> taxData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.DiscountData(Square.Models.CatalogDiscount)">
            <summary>
            DiscountData.
            </summary>
            <param name="discountData"> discountData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.ModifierListData(Square.Models.CatalogModifierList)">
            <summary>
            ModifierListData.
            </summary>
            <param name="modifierListData"> modifierListData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.ModifierData(Square.Models.CatalogModifier)">
            <summary>
            ModifierData.
            </summary>
            <param name="modifierData"> modifierData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.TimePeriodData(Square.Models.CatalogTimePeriod)">
            <summary>
            TimePeriodData.
            </summary>
            <param name="timePeriodData"> timePeriodData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.ProductSetData(Square.Models.CatalogProductSet)">
            <summary>
            ProductSetData.
            </summary>
            <param name="productSetData"> productSetData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.PricingRuleData(Square.Models.CatalogPricingRule)">
            <summary>
            PricingRuleData.
            </summary>
            <param name="pricingRuleData"> pricingRuleData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.ImageData(Square.Models.CatalogImage)">
            <summary>
            ImageData.
            </summary>
            <param name="imageData"> imageData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.MeasurementUnitData(Square.Models.CatalogMeasurementUnit)">
            <summary>
            MeasurementUnitData.
            </summary>
            <param name="measurementUnitData"> measurementUnitData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.SubscriptionPlanData(Square.Models.CatalogSubscriptionPlan)">
            <summary>
            SubscriptionPlanData.
            </summary>
            <param name="subscriptionPlanData"> subscriptionPlanData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.ItemOptionData(Square.Models.CatalogItemOption)">
            <summary>
            ItemOptionData.
            </summary>
            <param name="itemOptionData"> itemOptionData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.ItemOptionValueData(Square.Models.CatalogItemOptionValue)">
            <summary>
            ItemOptionValueData.
            </summary>
            <param name="itemOptionValueData"> itemOptionValueData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.CustomAttributeDefinitionData(Square.Models.CatalogCustomAttributeDefinition)">
            <summary>
            CustomAttributeDefinitionData.
            </summary>
            <param name="customAttributeDefinitionData"> customAttributeDefinitionData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.QuickAmountsSettingsData(Square.Models.CatalogQuickAmountsSettings)">
            <summary>
            QuickAmountsSettingsData.
            </summary>
            <param name="quickAmountsSettingsData"> quickAmountsSettingsData. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObject.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogObject. </returns>
        </member>
        <member name="T:Square.Models.CatalogObjectBatch">
            <summary>
            CatalogObjectBatch.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogObjectBatch.#ctor(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogObjectBatch"/> class.
            </summary>
            <param name="objects">objects.</param>
        </member>
        <member name="P:Square.Models.CatalogObjectBatch.Objects">
            <summary>
            A list of CatalogObjects belonging to this batch.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogObjectBatch.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogObjectBatch.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogObjectBatch.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogObjectBatch.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogObjectBatch.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogObjectBatch.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogObjectBatch.Builder.Objects(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Objects.
            </summary>
            <param name="objects"> objects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObjectBatch.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogObjectBatch. </returns>
        </member>
        <member name="T:Square.Models.CatalogObjectReference">
            <summary>
            CatalogObjectReference.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogObjectReference.#ctor(System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogObjectReference"/> class.
            </summary>
            <param name="objectId">object_id.</param>
            <param name="catalogVersion">catalog_version.</param>
        </member>
        <member name="P:Square.Models.CatalogObjectReference.ObjectId">
            <summary>
            The ID of the referenced object.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogObjectReference.CatalogVersion">
            <summary>
            The version of the object.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogObjectReference.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogObjectReference.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogObjectReference.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogObjectReference.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogObjectReference.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogObjectReference.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogObjectReference.Builder.ObjectId(System.String)">
            <summary>
            ObjectId.
            </summary>
            <param name="objectId"> objectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObjectReference.Builder.CatalogVersion(System.Nullable{System.Int64})">
            <summary>
            CatalogVersion.
            </summary>
            <param name="catalogVersion"> catalogVersion. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogObjectReference.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogObjectReference. </returns>
        </member>
        <member name="T:Square.Models.CatalogPricingRule">
            <summary>
            CatalogPricingRule.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogPricingRule"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="timePeriodIds">time_period_ids.</param>
            <param name="discountId">discount_id.</param>
            <param name="matchProductsId">match_products_id.</param>
            <param name="applyProductsId">apply_products_id.</param>
            <param name="excludeProductsId">exclude_products_id.</param>
            <param name="validFromDate">valid_from_date.</param>
            <param name="validFromLocalTime">valid_from_local_time.</param>
            <param name="validUntilDate">valid_until_date.</param>
            <param name="validUntilLocalTime">valid_until_local_time.</param>
            <param name="excludeStrategy">exclude_strategy.</param>
            <param name="customerGroupIdsAny">customer_group_ids_any.</param>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.Name">
            <summary>
            User-defined name for the pricing rule. For example, "Buy one get one
            free" or "10% off".
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.TimePeriodIds">
            <summary>
            A list of unique IDs for the catalog time periods when
            this pricing rule is in effect. If left unset, the pricing rule is always
            in effect.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.DiscountId">
            <summary>
            Unique ID for the `CatalogDiscount` to take off
            the price of all matched items.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.MatchProductsId">
            <summary>
            Unique ID for the `CatalogProductSet` that will be matched by this rule. A match rule
            matches within the entire cart, and can match multiple times. This field will always be set.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.ApplyProductsId">
            <summary>
            __Deprecated__: Please use the `exclude_products_id` field to apply
            an exclude set instead. Exclude sets allow better control over quantity
            ranges and offer more flexibility for which matched items receive a discount.
            `CatalogProductSet` to apply the pricing to.
            An apply rule matches within the subset of the cart that fits the match rules (the match set).
            An apply rule can only match once in the match set.
            If not supplied, the pricing will be applied to all products in the match set.
            Other products retain their base price, or a price generated by other rules.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.ExcludeProductsId">
            <summary>
            `CatalogProductSet` to exclude from the pricing rule.
            An exclude rule matches within the subset of the cart that fits the match rules (the match set).
            An exclude rule can only match once in the match set.
            If not supplied, the pricing will be applied to all products in the match set.
            Other products retain their base price, or a price generated by other rules.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.ValidFromDate">
            <summary>
            Represents the date the Pricing Rule is valid from. Represented in RFC 3339 full-date format (YYYY-MM-DD).
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.ValidFromLocalTime">
            <summary>
            Represents the local time the pricing rule should be valid from. Represented in RFC 3339 partial-time format
            (HH:MM:SS). Partial seconds will be truncated.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.ValidUntilDate">
            <summary>
            Represents the date the Pricing Rule is valid until. Represented in RFC 3339 full-date format (YYYY-MM-DD).
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.ValidUntilLocalTime">
            <summary>
            Represents the local time the pricing rule should be valid until. Represented in RFC 3339 partial-time format
            (HH:MM:SS). Partial seconds will be truncated.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.ExcludeStrategy">
            <summary>
            Indicates which products matched by a CatalogPricingRule
            will be excluded if the pricing rule uses an exclude set.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogPricingRule.CustomerGroupIdsAny">
            <summary>
            A list of IDs of customer groups, the members of which are eligible for discounts specified in this pricing rule.
            Notice that a group ID is generated by the Customers API.
            If this field is not set, the specified discount applies to matched products sold to anyone whether the buyer
            has a customer profile created or not. If this `customer_group_ids_any` field is set, the specified discount
            applies only to matched products sold to customers belonging to the specified customer groups.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogPricingRule.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.TimePeriodIds(System.Collections.Generic.IList{System.String})">
            <summary>
            TimePeriodIds.
            </summary>
            <param name="timePeriodIds"> timePeriodIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.DiscountId(System.String)">
            <summary>
            DiscountId.
            </summary>
            <param name="discountId"> discountId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.MatchProductsId(System.String)">
            <summary>
            MatchProductsId.
            </summary>
            <param name="matchProductsId"> matchProductsId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.ApplyProductsId(System.String)">
            <summary>
            ApplyProductsId.
            </summary>
            <param name="applyProductsId"> applyProductsId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.ExcludeProductsId(System.String)">
            <summary>
            ExcludeProductsId.
            </summary>
            <param name="excludeProductsId"> excludeProductsId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.ValidFromDate(System.String)">
            <summary>
            ValidFromDate.
            </summary>
            <param name="validFromDate"> validFromDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.ValidFromLocalTime(System.String)">
            <summary>
            ValidFromLocalTime.
            </summary>
            <param name="validFromLocalTime"> validFromLocalTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.ValidUntilDate(System.String)">
            <summary>
            ValidUntilDate.
            </summary>
            <param name="validUntilDate"> validUntilDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.ValidUntilLocalTime(System.String)">
            <summary>
            ValidUntilLocalTime.
            </summary>
            <param name="validUntilLocalTime"> validUntilLocalTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.ExcludeStrategy(System.String)">
            <summary>
            ExcludeStrategy.
            </summary>
            <param name="excludeStrategy"> excludeStrategy. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.CustomerGroupIdsAny(System.Collections.Generic.IList{System.String})">
            <summary>
            CustomerGroupIdsAny.
            </summary>
            <param name="customerGroupIdsAny"> customerGroupIdsAny. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogPricingRule.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogPricingRule. </returns>
        </member>
        <member name="T:Square.Models.CatalogProductSet">
            <summary>
            CatalogProductSet.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogProductSet.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogProductSet"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="productIdsAny">product_ids_any.</param>
            <param name="productIdsAll">product_ids_all.</param>
            <param name="quantityExact">quantity_exact.</param>
            <param name="quantityMin">quantity_min.</param>
            <param name="quantityMax">quantity_max.</param>
            <param name="allProducts">all_products.</param>
        </member>
        <member name="P:Square.Models.CatalogProductSet.Name">
            <summary>
            User-defined name for the product set. For example, "Clearance Items"
            or "Winter Sale Items".
            </summary>
        </member>
        <member name="P:Square.Models.CatalogProductSet.ProductIdsAny">
            <summary>
            Unique IDs for any `CatalogObject` included in this product set. Any
            number of these catalog objects can be in an order for a pricing rule to apply.
            This can be used with `product_ids_all` in a parent `CatalogProductSet` to
            match groups of products for a bulk discount, such as a discount for an
            entree and side combo.
            Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
            Max: 500 catalog object IDs.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogProductSet.ProductIdsAll">
            <summary>
            Unique IDs for any `CatalogObject` included in this product set.
            All objects in this set must be included in an order for a pricing rule to apply.
            Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
            Max: 500 catalog object IDs.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogProductSet.QuantityExact">
            <summary>
            If set, there must be exactly this many items from `products_any` or `products_all`
            in the cart for the discount to apply.
            Cannot be combined with either `quantity_min` or `quantity_max`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogProductSet.QuantityMin">
            <summary>
            If set, there must be at least this many items from `products_any` or `products_all`
            in a cart for the discount to apply. See `quantity_exact`. Defaults to 0 if
            `quantity_exact`, `quantity_min` and `quantity_max` are all unspecified.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogProductSet.QuantityMax">
            <summary>
            If set, the pricing rule will apply to a maximum of this many items from
            `products_any` or `products_all`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogProductSet.AllProducts">
            <summary>
            If set to `true`, the product set will include every item in the catalog.
            Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogProductSet.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogProductSet.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogProductSet.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogProductSet.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogProductSet.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogProductSet.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogProductSet.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogProductSet.Builder.ProductIdsAny(System.Collections.Generic.IList{System.String})">
            <summary>
            ProductIdsAny.
            </summary>
            <param name="productIdsAny"> productIdsAny. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogProductSet.Builder.ProductIdsAll(System.Collections.Generic.IList{System.String})">
            <summary>
            ProductIdsAll.
            </summary>
            <param name="productIdsAll"> productIdsAll. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogProductSet.Builder.QuantityExact(System.Nullable{System.Int64})">
            <summary>
            QuantityExact.
            </summary>
            <param name="quantityExact"> quantityExact. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogProductSet.Builder.QuantityMin(System.Nullable{System.Int64})">
            <summary>
            QuantityMin.
            </summary>
            <param name="quantityMin"> quantityMin. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogProductSet.Builder.QuantityMax(System.Nullable{System.Int64})">
            <summary>
            QuantityMax.
            </summary>
            <param name="quantityMax"> quantityMax. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogProductSet.Builder.AllProducts(System.Nullable{System.Boolean})">
            <summary>
            AllProducts.
            </summary>
            <param name="allProducts"> allProducts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogProductSet.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogProductSet. </returns>
        </member>
        <member name="T:Square.Models.CatalogQuery">
            <summary>
            CatalogQuery.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuery.#ctor(Square.Models.CatalogQuerySortedAttribute,Square.Models.CatalogQueryExact,Square.Models.CatalogQuerySet,Square.Models.CatalogQueryPrefix,Square.Models.CatalogQueryRange,Square.Models.CatalogQueryText,Square.Models.CatalogQueryItemsForTax,Square.Models.CatalogQueryItemsForModifierList,Square.Models.CatalogQueryItemsForItemOptions,Square.Models.CatalogQueryItemVariationsForItemOptionValues)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQuery"/> class.
            </summary>
            <param name="sortedAttributeQuery">sorted_attribute_query.</param>
            <param name="exactQuery">exact_query.</param>
            <param name="setQuery">set_query.</param>
            <param name="prefixQuery">prefix_query.</param>
            <param name="rangeQuery">range_query.</param>
            <param name="textQuery">text_query.</param>
            <param name="itemsForTaxQuery">items_for_tax_query.</param>
            <param name="itemsForModifierListQuery">items_for_modifier_list_query.</param>
            <param name="itemsForItemOptionsQuery">items_for_item_options_query.</param>
            <param name="itemVariationsForItemOptionValuesQuery">item_variations_for_item_option_values_query.</param>
        </member>
        <member name="P:Square.Models.CatalogQuery.SortedAttributeQuery">
            <summary>
            The query expression to specify the key to sort search results.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuery.ExactQuery">
            <summary>
            The query filter to return the search result by exact match of the specified attribute name and value.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuery.SetQuery">
            <summary>
            The query filter to return the search result(s) by exact match of the specified `attribute_name` and any of
            the `attribute_values`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuery.PrefixQuery">
            <summary>
            The query filter to return the search result whose named attribute values are prefixed by the specified attribute value.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuery.RangeQuery">
            <summary>
            The query filter to return the search result whose named attribute values fall between the specified range.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuery.TextQuery">
            <summary>
            The query filter to return the search result whose searchable attribute values contain all of the specified keywords or tokens, independent of the token order or case.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuery.ItemsForTaxQuery">
            <summary>
            The query filter to return the items containing the specified tax IDs.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuery.ItemsForModifierListQuery">
            <summary>
            The query filter to return the items containing the specified modifier list IDs.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuery.ItemsForItemOptionsQuery">
            <summary>
            The query filter to return the items containing the specified item option IDs.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuery.ItemVariationsForItemOptionValuesQuery">
            <summary>
            The query filter to return the item variations containing the specified item option value IDs.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.SortedAttributeQuery(Square.Models.CatalogQuerySortedAttribute)">
            <summary>
            SortedAttributeQuery.
            </summary>
            <param name="sortedAttributeQuery"> sortedAttributeQuery. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.ExactQuery(Square.Models.CatalogQueryExact)">
            <summary>
            ExactQuery.
            </summary>
            <param name="exactQuery"> exactQuery. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.SetQuery(Square.Models.CatalogQuerySet)">
            <summary>
            SetQuery.
            </summary>
            <param name="setQuery"> setQuery. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.PrefixQuery(Square.Models.CatalogQueryPrefix)">
            <summary>
            PrefixQuery.
            </summary>
            <param name="prefixQuery"> prefixQuery. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.RangeQuery(Square.Models.CatalogQueryRange)">
            <summary>
            RangeQuery.
            </summary>
            <param name="rangeQuery"> rangeQuery. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.TextQuery(Square.Models.CatalogQueryText)">
            <summary>
            TextQuery.
            </summary>
            <param name="textQuery"> textQuery. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.ItemsForTaxQuery(Square.Models.CatalogQueryItemsForTax)">
            <summary>
            ItemsForTaxQuery.
            </summary>
            <param name="itemsForTaxQuery"> itemsForTaxQuery. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.ItemsForModifierListQuery(Square.Models.CatalogQueryItemsForModifierList)">
            <summary>
            ItemsForModifierListQuery.
            </summary>
            <param name="itemsForModifierListQuery"> itemsForModifierListQuery. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.ItemsForItemOptionsQuery(Square.Models.CatalogQueryItemsForItemOptions)">
            <summary>
            ItemsForItemOptionsQuery.
            </summary>
            <param name="itemsForItemOptionsQuery"> itemsForItemOptionsQuery. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.ItemVariationsForItemOptionValuesQuery(Square.Models.CatalogQueryItemVariationsForItemOptionValues)">
            <summary>
            ItemVariationsForItemOptionValuesQuery.
            </summary>
            <param name="itemVariationsForItemOptionValuesQuery"> itemVariationsForItemOptionValuesQuery. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQuery. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryExact">
            <summary>
            CatalogQueryExact.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryExact.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQueryExact"/> class.
            </summary>
            <param name="attributeName">attribute_name.</param>
            <param name="attributeValue">attribute_value.</param>
        </member>
        <member name="P:Square.Models.CatalogQueryExact.AttributeName">
            <summary>
            The name of the attribute to be searched. Matching of the attribute name is exact.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQueryExact.AttributeValue">
            <summary>
            The desired value of the search attribute. Matching of the attribute value is case insensitive and can be partial.
            For example, if a specified value of "sma", objects with the named attribute value of "Small", "small" are both matched.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryExact.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryExact.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryExact.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryExact.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQueryExact.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryExact.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryExact.Builder.AttributeName(System.String)">
            <summary>
            AttributeName.
            </summary>
            <param name="attributeName"> attributeName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryExact.Builder.AttributeValue(System.String)">
            <summary>
            AttributeValue.
            </summary>
            <param name="attributeValue"> attributeValue. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryExact.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQueryExact. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryItemsForItemOptions">
            <summary>
            CatalogQueryItemsForItemOptions.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForItemOptions.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQueryItemsForItemOptions"/> class.
            </summary>
            <param name="itemOptionIds">item_option_ids.</param>
        </member>
        <member name="P:Square.Models.CatalogQueryItemsForItemOptions.ItemOptionIds">
            <summary>
            A set of `CatalogItemOption` IDs to be used to find associated
            `CatalogItem`s. All Items that contain all of the given Item Options (in any order)
            will be returned.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForItemOptions.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForItemOptions.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForItemOptions.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForItemOptions.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForItemOptions.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryItemsForItemOptions.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForItemOptions.Builder.ItemOptionIds(System.Collections.Generic.IList{System.String})">
            <summary>
            ItemOptionIds.
            </summary>
            <param name="itemOptionIds"> itemOptionIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForItemOptions.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQueryItemsForItemOptions. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryItemsForModifierList">
            <summary>
            CatalogQueryItemsForModifierList.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForModifierList.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQueryItemsForModifierList"/> class.
            </summary>
            <param name="modifierListIds">modifier_list_ids.</param>
        </member>
        <member name="P:Square.Models.CatalogQueryItemsForModifierList.ModifierListIds">
            <summary>
            A set of `CatalogModifierList` IDs to be used to find associated `CatalogItem`s.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForModifierList.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForModifierList.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForModifierList.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForModifierList.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForModifierList.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryItemsForModifierList.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForModifierList.Builder.ModifierListIds(System.Collections.Generic.IList{System.String})">
            <summary>
            ModifierListIds.
            </summary>
            <param name="modifierListIds"> modifierListIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForModifierList.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQueryItemsForModifierList. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryItemsForTax">
            <summary>
            CatalogQueryItemsForTax.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForTax.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQueryItemsForTax"/> class.
            </summary>
            <param name="taxIds">tax_ids.</param>
        </member>
        <member name="P:Square.Models.CatalogQueryItemsForTax.TaxIds">
            <summary>
            A set of `CatalogTax` IDs to be used to find associated `CatalogItem`s.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForTax.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForTax.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForTax.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForTax.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForTax.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryItemsForTax.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForTax.Builder.TaxIds(System.Collections.Generic.IList{System.String})">
            <summary>
            TaxIds.
            </summary>
            <param name="taxIds"> taxIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryItemsForTax.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQueryItemsForTax. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryItemVariationsForItemOptionValues">
            <summary>
            CatalogQueryItemVariationsForItemOptionValues.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemVariationsForItemOptionValues.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQueryItemVariationsForItemOptionValues"/> class.
            </summary>
            <param name="itemOptionValueIds">item_option_value_ids.</param>
        </member>
        <member name="P:Square.Models.CatalogQueryItemVariationsForItemOptionValues.ItemOptionValueIds">
            <summary>
            A set of `CatalogItemOptionValue` IDs to be used to find associated
            `CatalogItemVariation`s. All ItemVariations that contain all of the given
            Item Option Values (in any order) will be returned.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemVariationsForItemOptionValues.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemVariationsForItemOptionValues.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemVariationsForItemOptionValues.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryItemVariationsForItemOptionValues.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQueryItemVariationsForItemOptionValues.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryItemVariationsForItemOptionValues.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryItemVariationsForItemOptionValues.Builder.ItemOptionValueIds(System.Collections.Generic.IList{System.String})">
            <summary>
            ItemOptionValueIds.
            </summary>
            <param name="itemOptionValueIds"> itemOptionValueIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryItemVariationsForItemOptionValues.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQueryItemVariationsForItemOptionValues. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryPrefix">
            <summary>
            CatalogQueryPrefix.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryPrefix.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQueryPrefix"/> class.
            </summary>
            <param name="attributeName">attribute_name.</param>
            <param name="attributePrefix">attribute_prefix.</param>
        </member>
        <member name="P:Square.Models.CatalogQueryPrefix.AttributeName">
            <summary>
            The name of the attribute to be searched.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQueryPrefix.AttributePrefix">
            <summary>
            The desired prefix of the search attribute value.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryPrefix.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryPrefix.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryPrefix.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryPrefix.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQueryPrefix.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryPrefix.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryPrefix.Builder.AttributeName(System.String)">
            <summary>
            AttributeName.
            </summary>
            <param name="attributeName"> attributeName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryPrefix.Builder.AttributePrefix(System.String)">
            <summary>
            AttributePrefix.
            </summary>
            <param name="attributePrefix"> attributePrefix. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryPrefix.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQueryPrefix. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryRange">
            <summary>
            CatalogQueryRange.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryRange.#ctor(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQueryRange"/> class.
            </summary>
            <param name="attributeName">attribute_name.</param>
            <param name="attributeMinValue">attribute_min_value.</param>
            <param name="attributeMaxValue">attribute_max_value.</param>
        </member>
        <member name="P:Square.Models.CatalogQueryRange.AttributeName">
            <summary>
            The name of the attribute to be searched.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQueryRange.AttributeMinValue">
            <summary>
            The desired minimum value for the search attribute (inclusive).
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQueryRange.AttributeMaxValue">
            <summary>
            The desired maximum value for the search attribute (inclusive).
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryRange.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryRange.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryRange.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryRange.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQueryRange.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryRange.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryRange.Builder.AttributeName(System.String)">
            <summary>
            AttributeName.
            </summary>
            <param name="attributeName"> attributeName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryRange.Builder.AttributeMinValue(System.Nullable{System.Int64})">
            <summary>
            AttributeMinValue.
            </summary>
            <param name="attributeMinValue"> attributeMinValue. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryRange.Builder.AttributeMaxValue(System.Nullable{System.Int64})">
            <summary>
            AttributeMaxValue.
            </summary>
            <param name="attributeMaxValue"> attributeMaxValue. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryRange.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQueryRange. </returns>
        </member>
        <member name="T:Square.Models.CatalogQuerySet">
            <summary>
            CatalogQuerySet.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuerySet.#ctor(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQuerySet"/> class.
            </summary>
            <param name="attributeName">attribute_name.</param>
            <param name="attributeValues">attribute_values.</param>
        </member>
        <member name="P:Square.Models.CatalogQuerySet.AttributeName">
            <summary>
            The name of the attribute to be searched. Matching of the attribute name is exact.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuerySet.AttributeValues">
            <summary>
            The desired values of the search attribute. Matching of the attribute values is exact and case insensitive.
            A maximum of 250 values may be searched in a request.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuerySet.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuerySet.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuerySet.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuerySet.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQuerySet.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQuerySet.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuerySet.Builder.AttributeName(System.String)">
            <summary>
            AttributeName.
            </summary>
            <param name="attributeName"> attributeName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuerySet.Builder.AttributeValues(System.Collections.Generic.IList{System.String})">
            <summary>
            AttributeValues.
            </summary>
            <param name="attributeValues"> attributeValues. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuerySet.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQuerySet. </returns>
        </member>
        <member name="T:Square.Models.CatalogQuerySortedAttribute">
            <summary>
            CatalogQuerySortedAttribute.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuerySortedAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQuerySortedAttribute"/> class.
            </summary>
            <param name="attributeName">attribute_name.</param>
            <param name="initialAttributeValue">initial_attribute_value.</param>
            <param name="sortOrder">sort_order.</param>
        </member>
        <member name="P:Square.Models.CatalogQuerySortedAttribute.AttributeName">
            <summary>
            The attribute whose value is used as the sort key.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuerySortedAttribute.InitialAttributeValue">
            <summary>
            The first attribute value to be returned by the query. Ascending sorts will return only
            objects with this value or greater, while descending sorts will return only objects with this value
            or less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts).
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuerySortedAttribute.SortOrder">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuerySortedAttribute.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuerySortedAttribute.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuerySortedAttribute.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuerySortedAttribute.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQuerySortedAttribute.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQuerySortedAttribute.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuerySortedAttribute.Builder.AttributeName(System.String)">
            <summary>
            AttributeName.
            </summary>
            <param name="attributeName"> attributeName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuerySortedAttribute.Builder.InitialAttributeValue(System.String)">
            <summary>
            InitialAttributeValue.
            </summary>
            <param name="initialAttributeValue"> initialAttributeValue. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuerySortedAttribute.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuerySortedAttribute.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQuerySortedAttribute. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryText">
            <summary>
            CatalogQueryText.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryText.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQueryText"/> class.
            </summary>
            <param name="keywords">keywords.</param>
        </member>
        <member name="P:Square.Models.CatalogQueryText.Keywords">
            <summary>
            A list of 1, 2, or 3 search keywords. Keywords with fewer than 3 characters are ignored.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryText.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryText.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryText.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQueryText.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQueryText.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQueryText.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQueryText.Builder.Keywords(System.Collections.Generic.IList{System.String})">
            <summary>
            Keywords.
            </summary>
            <param name="keywords"> keywords. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQueryText.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQueryText. </returns>
        </member>
        <member name="T:Square.Models.CatalogQuickAmount">
            <summary>
            CatalogQuickAmount.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.#ctor(System.String,Square.Models.Money,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQuickAmount"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="amount">amount.</param>
            <param name="score">score.</param>
            <param name="ordinal">ordinal.</param>
        </member>
        <member name="P:Square.Models.CatalogQuickAmount.Type">
            <summary>
            Determines the type of a specific Quick Amount.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuickAmount.Amount">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuickAmount.Score">
            <summary>
            Describes the ranking of the Quick Amount provided by machine learning model, in the range [0, 100].
            MANUAL type amount will always have score = 100.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuickAmount.Ordinal">
            <summary>
            The order in which this Quick Amount should be displayed.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQuickAmount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.Builder.Amount(Square.Models.Money)">
            <summary>
            Amount.
            </summary>
            <param name="amount"> amount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.Builder.Score(System.Nullable{System.Int64})">
            <summary>
            Score.
            </summary>
            <param name="score"> score. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.Builder.Ordinal(System.Nullable{System.Int64})">
            <summary>
            Ordinal.
            </summary>
            <param name="ordinal"> ordinal. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuickAmount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQuickAmount. </returns>
        </member>
        <member name="T:Square.Models.CatalogQuickAmountsSettings">
            <summary>
            CatalogQuickAmountsSettings.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuickAmountsSettings.#ctor(System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Square.Models.CatalogQuickAmount})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogQuickAmountsSettings"/> class.
            </summary>
            <param name="option">option.</param>
            <param name="eligibleForAutoAmounts">eligible_for_auto_amounts.</param>
            <param name="amounts">amounts.</param>
        </member>
        <member name="P:Square.Models.CatalogQuickAmountsSettings.Option">
            <summary>
            Determines a seller's option on Quick Amounts feature.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuickAmountsSettings.EligibleForAutoAmounts">
            <summary>
            Represents location's eligibility for auto amounts
            The boolean should be consistent with whether there are AUTO amounts in the `amounts`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogQuickAmountsSettings.Amounts">
            <summary>
            Represents a set of Quick Amounts at this location.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuickAmountsSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuickAmountsSettings.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuickAmountsSettings.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogQuickAmountsSettings.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogQuickAmountsSettings.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogQuickAmountsSettings.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogQuickAmountsSettings.Builder.Option(System.String)">
            <summary>
            Option.
            </summary>
            <param name="option"> option. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuickAmountsSettings.Builder.EligibleForAutoAmounts(System.Nullable{System.Boolean})">
            <summary>
            EligibleForAutoAmounts.
            </summary>
            <param name="eligibleForAutoAmounts"> eligibleForAutoAmounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuickAmountsSettings.Builder.Amounts(System.Collections.Generic.IList{Square.Models.CatalogQuickAmount})">
            <summary>
            Amounts.
            </summary>
            <param name="amounts"> amounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogQuickAmountsSettings.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogQuickAmountsSettings. </returns>
        </member>
        <member name="T:Square.Models.CatalogSubscriptionPlan">
            <summary>
            CatalogSubscriptionPlan.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogSubscriptionPlan.#ctor(System.String,System.Collections.Generic.IList{Square.Models.SubscriptionPhase})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogSubscriptionPlan"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="phases">phases.</param>
        </member>
        <member name="P:Square.Models.CatalogSubscriptionPlan.Name">
            <summary>
            The name of the plan.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogSubscriptionPlan.Phases">
            <summary>
            A list of SubscriptionPhase containing the [SubscriptionPhase]($m/SubscriptionPhase) for this plan.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogSubscriptionPlan.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogSubscriptionPlan.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogSubscriptionPlan.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogSubscriptionPlan.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogSubscriptionPlan.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogSubscriptionPlan.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogSubscriptionPlan.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogSubscriptionPlan.Builder.Phases(System.Collections.Generic.IList{Square.Models.SubscriptionPhase})">
            <summary>
            Phases.
            </summary>
            <param name="phases"> phases. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogSubscriptionPlan.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogSubscriptionPlan. </returns>
        </member>
        <member name="T:Square.Models.CatalogTax">
            <summary>
            CatalogTax.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogTax.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogTax"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="calculationPhase">calculation_phase.</param>
            <param name="inclusionType">inclusion_type.</param>
            <param name="percentage">percentage.</param>
            <param name="appliesToCustomAmounts">applies_to_custom_amounts.</param>
            <param name="enabled">enabled.</param>
        </member>
        <member name="P:Square.Models.CatalogTax.Name">
            <summary>
            The tax's name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogTax.CalculationPhase">
            <summary>
            When to calculate the taxes due on a cart.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogTax.InclusionType">
            <summary>
            Whether to the tax amount should be additional to or included in the CatalogItem price.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogTax.Percentage">
            <summary>
            The percentage of the tax in decimal form, using a `'.'` as the decimal separator and without a `'%'` sign.
            A value of `7.5` corresponds to 7.5%.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogTax.AppliesToCustomAmounts">
            <summary>
            If `true`, the fee applies to custom amounts entered into the Square Point of Sale
            app that are not associated with a particular `CatalogItem`.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogTax.Enabled">
            <summary>
            A Boolean flag to indicate whether the tax is displayed as enabled (`true`) in the Square Point of Sale app or not (`false`).
            </summary>
        </member>
        <member name="M:Square.Models.CatalogTax.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogTax.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogTax.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogTax.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogTax.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogTax.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogTax.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogTax.Builder.CalculationPhase(System.String)">
            <summary>
            CalculationPhase.
            </summary>
            <param name="calculationPhase"> calculationPhase. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogTax.Builder.InclusionType(System.String)">
            <summary>
            InclusionType.
            </summary>
            <param name="inclusionType"> inclusionType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogTax.Builder.Percentage(System.String)">
            <summary>
            Percentage.
            </summary>
            <param name="percentage"> percentage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogTax.Builder.AppliesToCustomAmounts(System.Nullable{System.Boolean})">
            <summary>
            AppliesToCustomAmounts.
            </summary>
            <param name="appliesToCustomAmounts"> appliesToCustomAmounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogTax.Builder.Enabled(System.Nullable{System.Boolean})">
            <summary>
            Enabled.
            </summary>
            <param name="enabled"> enabled. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogTax.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogTax. </returns>
        </member>
        <member name="T:Square.Models.CatalogTimePeriod">
            <summary>
            CatalogTimePeriod.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogTimePeriod.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogTimePeriod"/> class.
            </summary>
            <param name="mEvent">event.</param>
        </member>
        <member name="P:Square.Models.CatalogTimePeriod.MEvent">
            <summary>
            An iCalendar (RFC 5545) [event](https://tools.ietf.org/html/rfc5545#section-3.6.1), which
            specifies the name, timing, duration and recurrence of this time period.
            Example:
            ```
            DTSTART:20190707T180000
            DURATION:P2H
            RRULE:FREQ=WEEKLY;BYDAY=MO,WE,FR
            ```
            Only `SUMMARY`, `DTSTART`, `DURATION` and `RRULE` fields are supported.
            `DTSTART` must be in local (unzoned) time format. Note that while `BEGIN:VEVENT`
            and `END:VEVENT` is not required in the request. The response will always
            include them.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogTimePeriod.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogTimePeriod.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogTimePeriod.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogTimePeriod.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogTimePeriod.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogTimePeriod.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogTimePeriod.Builder.MEvent(System.String)">
            <summary>
            MEvent.
            </summary>
            <param name="mEvent"> mEvent. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogTimePeriod.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogTimePeriod. </returns>
        </member>
        <member name="T:Square.Models.CatalogV1Id">
            <summary>
            CatalogV1Id.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogV1Id.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CatalogV1Id"/> class.
            </summary>
            <param name="catalogV1IdProp">catalog_v1_id.</param>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.CatalogV1Id.CatalogV1IdProp">
            <summary>
            The ID for an object used in the Square API V1, if the object ID differs from the Square API V2 object ID.
            </summary>
        </member>
        <member name="P:Square.Models.CatalogV1Id.LocationId">
            <summary>
            The ID of the `Location` this Connect V1 ID is associated with.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogV1Id.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogV1Id.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogV1Id.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CatalogV1Id.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CatalogV1Id.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CatalogV1Id.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CatalogV1Id.Builder.CatalogV1IdProp(System.String)">
            <summary>
            CatalogV1IdProp.
            </summary>
            <param name="catalogV1IdProp"> catalogV1IdProp. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogV1Id.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CatalogV1Id.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CatalogV1Id. </returns>
        </member>
        <member name="T:Square.Models.ChargeRequest">
            <summary>
            ChargeRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ChargeRequest.#ctor(System.String,Square.Models.Money,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,Square.Models.Address,Square.Models.Address,System.String,System.String,System.Collections.Generic.IList{Square.Models.ChargeRequestAdditionalRecipient},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ChargeRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="cardNonce">card_nonce.</param>
            <param name="customerCardId">customer_card_id.</param>
            <param name="delayCapture">delay_capture.</param>
            <param name="referenceId">reference_id.</param>
            <param name="note">note.</param>
            <param name="customerId">customer_id.</param>
            <param name="billingAddress">billing_address.</param>
            <param name="shippingAddress">shipping_address.</param>
            <param name="buyerEmailAddress">buyer_email_address.</param>
            <param name="orderId">order_id.</param>
            <param name="additionalRecipients">additional_recipients.</param>
            <param name="verificationToken">verification_token.</param>
        </member>
        <member name="P:Square.Models.ChargeRequest.IdempotencyKey">
            <summary>
            A value you specify that uniquely identifies this
            transaction among transactions you've created.
            If you're unsure whether a particular transaction succeeded,
            you can reattempt it with the same idempotency key without
            worrying about double-charging the buyer.
            See [Idempotency keys](https://developer.squareup.com/docs/working-with-apis/idempotency) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.CardNonce">
            <summary>
            A nonce generated from the `SqPaymentForm` that represents the card
            to charge.
            The application that provides a nonce to this endpoint must be the
            _same application_ that generated the nonce with the `SqPaymentForm`.
            Otherwise, the nonce is invalid.
            Do not provide a value for this field if you provide a value for
            `customer_card_id`.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.CustomerCardId">
            <summary>
            The ID of the customer card on file to charge. Do
            not provide a value for this field if you provide a value for `card_nonce`.
            If you provide this value, you _must_ also provide a value for
            `customer_id`.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.DelayCapture">
            <summary>
            If `true`, the request will only perform an Auth on the provided
            card. You can then later perform either a Capture (with the
            [CaptureTransaction]($e/Transactions/CaptureTransaction) endpoint) or a Void
            (with the [VoidTransaction]($e/Transactions/VoidTransaction) endpoint).
            Default value: `false`
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.ReferenceId">
            <summary>
            An optional ID you can associate with the transaction for your own
            purposes (such as to associate the transaction with an entity ID in your
            own database).
            This value cannot exceed 40 characters.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.Note">
            <summary>
            An optional note to associate with the transaction.
            This value cannot exceed 60 characters.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.CustomerId">
            <summary>
            The ID of the customer to associate this transaction with. This field
            is required if you provide a value for `customer_card_id`, and optional
            otherwise.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.BillingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.ShippingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.BuyerEmailAddress">
            <summary>
            The buyer's email address, if available. This value is optional,
            but this transaction is ineligible for chargeback protection if it is not
            provided.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.OrderId">
            <summary>
            The ID of the order to associate with this transaction.
            If you provide this value, the `amount_money` value of your request must
            __exactly match__ the value of the order's `total_money` field.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.AdditionalRecipients">
            <summary>
            The basic primitive of multi-party transaction. The value is optional.
            The transaction facilitated by you can be split from here.
            If you provide this value, the `amount_money` value in your additional_recipients
            must not be more than 90% of the `amount_money` value in the charge request.
            The `location_id` must be the valid location of the app owner merchant.
            This field requires the `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission.
            This field is currently not supported in sandbox.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequest.VerificationToken">
            <summary>
            A token generated by SqPaymentForm's verifyBuyer() that represents
            customer's device info and 3ds challenge result.
            </summary>
        </member>
        <member name="M:Square.Models.ChargeRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ChargeRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ChargeRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ChargeRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ChargeRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ChargeRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.CardNonce(System.String)">
            <summary>
            CardNonce.
            </summary>
            <param name="cardNonce"> cardNonce. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.CustomerCardId(System.String)">
            <summary>
            CustomerCardId.
            </summary>
            <param name="customerCardId"> customerCardId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.DelayCapture(System.Nullable{System.Boolean})">
            <summary>
            DelayCapture.
            </summary>
            <param name="delayCapture"> delayCapture. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.BillingAddress(Square.Models.Address)">
            <summary>
            BillingAddress.
            </summary>
            <param name="billingAddress"> billingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.ShippingAddress(Square.Models.Address)">
            <summary>
            ShippingAddress.
            </summary>
            <param name="shippingAddress"> shippingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.BuyerEmailAddress(System.String)">
            <summary>
            BuyerEmailAddress.
            </summary>
            <param name="buyerEmailAddress"> buyerEmailAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.AdditionalRecipients(System.Collections.Generic.IList{Square.Models.ChargeRequestAdditionalRecipient})">
            <summary>
            AdditionalRecipients.
            </summary>
            <param name="additionalRecipients"> additionalRecipients. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.VerificationToken(System.String)">
            <summary>
            VerificationToken.
            </summary>
            <param name="verificationToken"> verificationToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ChargeRequest. </returns>
        </member>
        <member name="T:Square.Models.ChargeRequestAdditionalRecipient">
            <summary>
            ChargeRequestAdditionalRecipient.
            </summary>
        </member>
        <member name="M:Square.Models.ChargeRequestAdditionalRecipient.#ctor(System.String,System.String,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ChargeRequestAdditionalRecipient"/> class.
            </summary>
            <param name="locationId">location_id.</param>
            <param name="description">description.</param>
            <param name="amountMoney">amount_money.</param>
        </member>
        <member name="P:Square.Models.ChargeRequestAdditionalRecipient.LocationId">
            <summary>
            The location ID for a recipient (other than the merchant) receiving a portion of the tender.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequestAdditionalRecipient.Description">
            <summary>
            The description of the additional recipient.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeRequestAdditionalRecipient.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.ChargeRequestAdditionalRecipient.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ChargeRequestAdditionalRecipient.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ChargeRequestAdditionalRecipient.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ChargeRequestAdditionalRecipient.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ChargeRequestAdditionalRecipient.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ChargeRequestAdditionalRecipient.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ChargeRequestAdditionalRecipient.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequestAdditionalRecipient.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequestAdditionalRecipient.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeRequestAdditionalRecipient.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ChargeRequestAdditionalRecipient. </returns>
        </member>
        <member name="T:Square.Models.ChargeResponse">
            <summary>
            ChargeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ChargeResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Transaction)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ChargeResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="transaction">transaction.</param>
        </member>
        <member name="P:Square.Models.ChargeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ChargeResponse.Transaction">
            <summary>
            Represents a transaction processed with Square, either with the
            Connect API or with Square Point of Sale.
            The `tenders` field of this object lists all methods of payment used to pay in
            the transaction.
            </summary>
        </member>
        <member name="M:Square.Models.ChargeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ChargeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ChargeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ChargeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ChargeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ChargeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ChargeResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeResponse.Builder.Transaction(Square.Models.Transaction)">
            <summary>
            Transaction.
            </summary>
            <param name="transaction"> transaction. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ChargeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ChargeResponse. </returns>
        </member>
        <member name="T:Square.Models.Checkout">
            <summary>
            Checkout.
            </summary>
        </member>
        <member name="M:Square.Models.Checkout.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,Square.Models.Address,System.String,Square.Models.Order,System.String,System.Collections.Generic.IList{Square.Models.AdditionalRecipient})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Checkout"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="checkoutPageUrl">checkout_page_url.</param>
            <param name="askForShippingAddress">ask_for_shipping_address.</param>
            <param name="merchantSupportEmail">merchant_support_email.</param>
            <param name="prePopulateBuyerEmail">pre_populate_buyer_email.</param>
            <param name="prePopulateShippingAddress">pre_populate_shipping_address.</param>
            <param name="redirectUrl">redirect_url.</param>
            <param name="order">order.</param>
            <param name="createdAt">created_at.</param>
            <param name="additionalRecipients">additional_recipients.</param>
        </member>
        <member name="P:Square.Models.Checkout.Id">
            <summary>
            ID generated by Square Checkout when a new checkout is requested.
            </summary>
        </member>
        <member name="P:Square.Models.Checkout.CheckoutPageUrl">
            <summary>
            The URL that the buyer's browser should be redirected to after the
            checkout is completed.
            </summary>
        </member>
        <member name="P:Square.Models.Checkout.AskForShippingAddress">
            <summary>
            If `true`, Square Checkout will collect shipping information on your
            behalf and store that information with the transaction information in your
            Square Dashboard.
            Default: `false`.
            </summary>
        </member>
        <member name="P:Square.Models.Checkout.MerchantSupportEmail">
            <summary>
            The email address to display on the Square Checkout confirmation page
            and confirmation email that the buyer can use to contact the merchant.
            If this value is not set, the confirmation page and email will display the
            primary email address associated with the merchant's Square account.
            Default: none; only exists if explicitly set.
            </summary>
        </member>
        <member name="P:Square.Models.Checkout.PrePopulateBuyerEmail">
            <summary>
            If provided, the buyer's email is pre-populated on the checkout page
            as an editable text field.
            Default: none; only exists if explicitly set.
            </summary>
        </member>
        <member name="P:Square.Models.Checkout.PrePopulateShippingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.Checkout.RedirectUrl">
            <summary>
            The URL to redirect to after checkout is completed with `checkoutId`,
            Square's `orderId`, `transactionId`, and `referenceId` appended as URL
            parameters. For example, if the provided redirect_url is
            `http://www.example.com/order-complete`, a successful transaction redirects
            the customer to:
            <pre><code>http://www.example.com/order-complete?checkoutId=xxxxxx&amp;orderId=xxxxxx&amp;referenceId=xxxxxx&amp;transactionId=xxxxxx</code></pre>
            If you do not provide a redirect URL, Square Checkout will display an order
            confirmation page on your behalf; however Square strongly recommends that
            you provide a redirect URL so you can verify the transaction results and
            finalize the order through your existing/normal confirmation workflow.
            </summary>
        </member>
        <member name="P:Square.Models.Checkout.Order">
            <summary>
            Contains all information related to a single order to process with Square,
            including line items that specify the products to purchase. `Order` objects also
            include information about any associated tenders, refunds, and returns.
            All Connect V2 Transactions have all been converted to Orders including all associated
            itemization data.
            </summary>
        </member>
        <member name="P:Square.Models.Checkout.CreatedAt">
            <summary>
            The time when the checkout was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Checkout.AdditionalRecipients">
            <summary>
            Additional recipients (other than the merchant) receiving a portion of this checkout.
            For example, fees assessed on the purchase by a third party integration.
            </summary>
        </member>
        <member name="M:Square.Models.Checkout.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Checkout.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Checkout.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Checkout.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Checkout.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Checkout.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Checkout.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Checkout.Builder.CheckoutPageUrl(System.String)">
            <summary>
            CheckoutPageUrl.
            </summary>
            <param name="checkoutPageUrl"> checkoutPageUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Checkout.Builder.AskForShippingAddress(System.Nullable{System.Boolean})">
            <summary>
            AskForShippingAddress.
            </summary>
            <param name="askForShippingAddress"> askForShippingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Checkout.Builder.MerchantSupportEmail(System.String)">
            <summary>
            MerchantSupportEmail.
            </summary>
            <param name="merchantSupportEmail"> merchantSupportEmail. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Checkout.Builder.PrePopulateBuyerEmail(System.String)">
            <summary>
            PrePopulateBuyerEmail.
            </summary>
            <param name="prePopulateBuyerEmail"> prePopulateBuyerEmail. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Checkout.Builder.PrePopulateShippingAddress(Square.Models.Address)">
            <summary>
            PrePopulateShippingAddress.
            </summary>
            <param name="prePopulateShippingAddress"> prePopulateShippingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Checkout.Builder.RedirectUrl(System.String)">
            <summary>
            RedirectUrl.
            </summary>
            <param name="redirectUrl"> redirectUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Checkout.Builder.Order(Square.Models.Order)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Checkout.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Checkout.Builder.AdditionalRecipients(System.Collections.Generic.IList{Square.Models.AdditionalRecipient})">
            <summary>
            AdditionalRecipients.
            </summary>
            <param name="additionalRecipients"> additionalRecipients. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Checkout.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Checkout. </returns>
        </member>
        <member name="T:Square.Models.CompletePaymentResponse">
            <summary>
            CompletePaymentResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CompletePaymentResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Payment)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CompletePaymentResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="payment">payment.</param>
        </member>
        <member name="P:Square.Models.CompletePaymentResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CompletePaymentResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CompletePaymentResponse.Payment">
            <summary>
            Represents a payment processed by the Square API.
            </summary>
        </member>
        <member name="M:Square.Models.CompletePaymentResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CompletePaymentResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CompletePaymentResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CompletePaymentResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CompletePaymentResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CompletePaymentResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CompletePaymentResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CompletePaymentResponse.Builder.Payment(Square.Models.Payment)">
            <summary>
            Payment.
            </summary>
            <param name="payment"> payment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CompletePaymentResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CompletePaymentResponse. </returns>
        </member>
        <member name="T:Square.Models.Coordinates">
            <summary>
            Coordinates.
            </summary>
        </member>
        <member name="M:Square.Models.Coordinates.#ctor(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Coordinates"/> class.
            </summary>
            <param name="latitude">latitude.</param>
            <param name="longitude">longitude.</param>
        </member>
        <member name="P:Square.Models.Coordinates.Latitude">
            <summary>
            The latitude of the coordinate expressed in degrees.
            </summary>
        </member>
        <member name="P:Square.Models.Coordinates.Longitude">
            <summary>
            The longitude of the coordinate expressed in degrees.
            </summary>
        </member>
        <member name="M:Square.Models.Coordinates.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Coordinates.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Coordinates.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Coordinates.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Coordinates.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Coordinates.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Coordinates.Builder.Latitude(System.Nullable{System.Double})">
            <summary>
            Latitude.
            </summary>
            <param name="latitude"> latitude. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Coordinates.Builder.Longitude(System.Nullable{System.Double})">
            <summary>
            Longitude.
            </summary>
            <param name="longitude"> longitude. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Coordinates.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Coordinates. </returns>
        </member>
        <member name="T:Square.Models.CreateBookingRequest">
            <summary>
            CreateBookingRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBookingRequest.#ctor(Square.Models.Booking,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateBookingRequest"/> class.
            </summary>
            <param name="booking">booking.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.CreateBookingRequest.IdempotencyKey">
            <summary>
            A unique key to make this request an idempotent operation.
            </summary>
        </member>
        <member name="P:Square.Models.CreateBookingRequest.Booking">
            <summary>
            Represents a booking as a time-bound service contract for a seller's staff member to provide a specified service
            at a given location to a requesting customer in one or more appointment segments.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBookingRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBookingRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBookingRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBookingRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateBookingRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateBookingRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBookingRequest.Builder.Booking(Square.Models.Booking)">
            <summary>
            Booking.
            </summary>
            <param name="booking"> booking. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateBookingRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateBookingRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateBookingRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateBookingResponse">
            <summary>
            CreateBookingResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBookingResponse.#ctor(Square.Models.Booking,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateBookingResponse"/> class.
            </summary>
            <param name="booking">booking.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CreateBookingResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateBookingResponse.Booking">
            <summary>
            Represents a booking as a time-bound service contract for a seller's staff member to provide a specified service
            at a given location to a requesting customer in one or more appointment segments.
            </summary>
        </member>
        <member name="P:Square.Models.CreateBookingResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBookingResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBookingResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBookingResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBookingResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateBookingResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateBookingResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBookingResponse.Builder.Booking(Square.Models.Booking)">
            <summary>
            Booking.
            </summary>
            <param name="booking"> booking. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateBookingResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateBookingResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateBookingResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateBreakTypeRequest">
            <summary>
            CreateBreakTypeRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBreakTypeRequest.#ctor(Square.Models.BreakType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateBreakTypeRequest"/> class.
            </summary>
            <param name="breakType">break_type.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.CreateBreakTypeRequest.IdempotencyKey">
            <summary>
            Unique string value to insure idempotency of the operation
            </summary>
        </member>
        <member name="P:Square.Models.CreateBreakTypeRequest.BreakType">
            <summary>
            A defined break template that sets an expectation for possible `Break`
            instances on a `Shift`.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBreakTypeRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBreakTypeRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBreakTypeRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBreakTypeRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateBreakTypeRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateBreakTypeRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBreakTypeRequest.Builder.BreakType(Square.Models.BreakType)">
            <summary>
            BreakType.
            </summary>
            <param name="breakType"> breakType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateBreakTypeRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateBreakTypeRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateBreakTypeRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateBreakTypeResponse">
            <summary>
            CreateBreakTypeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBreakTypeResponse.#ctor(Square.Models.BreakType,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateBreakTypeResponse"/> class.
            </summary>
            <param name="breakType">break_type.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CreateBreakTypeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateBreakTypeResponse.BreakType">
            <summary>
            A defined break template that sets an expectation for possible `Break`
            instances on a `Shift`.
            </summary>
        </member>
        <member name="P:Square.Models.CreateBreakTypeResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBreakTypeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBreakTypeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBreakTypeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateBreakTypeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateBreakTypeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateBreakTypeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateBreakTypeResponse.Builder.BreakType(Square.Models.BreakType)">
            <summary>
            BreakType.
            </summary>
            <param name="breakType"> breakType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateBreakTypeResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateBreakTypeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateBreakTypeResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateCatalogImageRequest">
            <summary>
            CreateCatalogImageRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCatalogImageRequest.#ctor(System.String,System.String,Square.Models.CatalogObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateCatalogImageRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="objectId">object_id.</param>
            <param name="image">image.</param>
        </member>
        <member name="P:Square.Models.CreateCatalogImageRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this CreateCatalogImage request.
            Keys can be any valid string but must be unique for every CreateCatalogImage request.
            See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCatalogImageRequest.ObjectId">
            <summary>
            Unique ID of the `CatalogObject` to attach to this `CatalogImage`. Leave this
            field empty to create unattached images, for example if you are building an integration
            where these images can be attached to catalog items at a later time.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCatalogImageRequest.Image">
            <summary>
            The wrapper object for the Catalog entries of a given object type.
            The type of a particular `CatalogObject` is determined by the value of the
            `type` attribute and only the corresponding data attribute can be set on the `CatalogObject` instance.
            For example, the following list shows some instances of `CatalogObject` of a given `type` and
            their corresponding data attribute that can be set:
            - For a `CatalogObject` of the `ITEM` type, set the `item_data` attribute to yield the `CatalogItem` object.
            - For a `CatalogObject` of the `ITEM_VARIATION` type, set the `item_variation_data` attribute to yield the `CatalogItemVariation` object.
            - For a `CatalogObject` of the `MODIFIER` type, set the `modifier_data` attribute to yield the `CatalogModifier` object.
            - For a `CatalogObject` of the `MODIFIER_LIST` type, set the `modifier_list_data` attribute to yield the `CatalogModifierList` object.
            - For a `CatalogObject` of the `CATEGORY` type, set the `category_data` attribute to yield the `CatalogCategory` object.
            - For a `CatalogObject` of the `DISCOUNT` type, set the `discount_data` attribute to yield the `CatalogDiscount` object.
            - For a `CatalogObject` of the `TAX` type, set the `tax_data` attribute to yield the `CatalogTax` object.
            - For a `CatalogObject` of the `IMAGE` type, set the `image_data` attribute to yield the `CatalogImageData`  object.
            - For a `CatalogObject` of the `QUICK_AMOUNTS_SETTINGS` type, set the `quick_amounts_settings_data` attribute to yield the `CatalogQuickAmountsSettings` object.
            - For a `CatalogObject` of the `PRICING_RULE` type, set the `pricing_rule_data` attribute to yield the `CatalogPricingRule` object.
            - For a `CatalogObject` of the `TIME_PERIOD` type, set the `time_period_data` attribute to yield the `CatalogTimePeriod` object.
            - For a `CatalogObject` of the `PRODUCT_SET` type, set the `product_set_data` attribute to yield the `CatalogProductSet`  object.
            - For a `CatalogObject` of the `SUBSCRIPTION_PLAN` type, set the `subscription_plan_data` attribute to yield the `CatalogSubscriptionPlan` object.
            For a more detailed discussion of the Catalog data model, please see the
            [Design a Catalog](https://developer.squareup.com/docs/catalog-api/design-a-catalog) guide.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCatalogImageRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCatalogImageRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCatalogImageRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCatalogImageRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateCatalogImageRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateCatalogImageRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCatalogImageRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCatalogImageRequest.Builder.ObjectId(System.String)">
            <summary>
            ObjectId.
            </summary>
            <param name="objectId"> objectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCatalogImageRequest.Builder.Image(Square.Models.CatalogObject)">
            <summary>
            Image.
            </summary>
            <param name="image"> image. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCatalogImageRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateCatalogImageRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateCatalogImageResponse">
            <summary>
            CreateCatalogImageResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCatalogImageResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.CatalogObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateCatalogImageResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="image">image.</param>
        </member>
        <member name="P:Square.Models.CreateCatalogImageResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCatalogImageResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCatalogImageResponse.Image">
            <summary>
            The wrapper object for the Catalog entries of a given object type.
            The type of a particular `CatalogObject` is determined by the value of the
            `type` attribute and only the corresponding data attribute can be set on the `CatalogObject` instance.
            For example, the following list shows some instances of `CatalogObject` of a given `type` and
            their corresponding data attribute that can be set:
            - For a `CatalogObject` of the `ITEM` type, set the `item_data` attribute to yield the `CatalogItem` object.
            - For a `CatalogObject` of the `ITEM_VARIATION` type, set the `item_variation_data` attribute to yield the `CatalogItemVariation` object.
            - For a `CatalogObject` of the `MODIFIER` type, set the `modifier_data` attribute to yield the `CatalogModifier` object.
            - For a `CatalogObject` of the `MODIFIER_LIST` type, set the `modifier_list_data` attribute to yield the `CatalogModifierList` object.
            - For a `CatalogObject` of the `CATEGORY` type, set the `category_data` attribute to yield the `CatalogCategory` object.
            - For a `CatalogObject` of the `DISCOUNT` type, set the `discount_data` attribute to yield the `CatalogDiscount` object.
            - For a `CatalogObject` of the `TAX` type, set the `tax_data` attribute to yield the `CatalogTax` object.
            - For a `CatalogObject` of the `IMAGE` type, set the `image_data` attribute to yield the `CatalogImageData`  object.
            - For a `CatalogObject` of the `QUICK_AMOUNTS_SETTINGS` type, set the `quick_amounts_settings_data` attribute to yield the `CatalogQuickAmountsSettings` object.
            - For a `CatalogObject` of the `PRICING_RULE` type, set the `pricing_rule_data` attribute to yield the `CatalogPricingRule` object.
            - For a `CatalogObject` of the `TIME_PERIOD` type, set the `time_period_data` attribute to yield the `CatalogTimePeriod` object.
            - For a `CatalogObject` of the `PRODUCT_SET` type, set the `product_set_data` attribute to yield the `CatalogProductSet`  object.
            - For a `CatalogObject` of the `SUBSCRIPTION_PLAN` type, set the `subscription_plan_data` attribute to yield the `CatalogSubscriptionPlan` object.
            For a more detailed discussion of the Catalog data model, please see the
            [Design a Catalog](https://developer.squareup.com/docs/catalog-api/design-a-catalog) guide.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCatalogImageResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCatalogImageResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCatalogImageResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCatalogImageResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateCatalogImageResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateCatalogImageResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCatalogImageResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCatalogImageResponse.Builder.Image(Square.Models.CatalogObject)">
            <summary>
            Image.
            </summary>
            <param name="image"> image. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCatalogImageResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateCatalogImageResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateCheckoutRequest">
            <summary>
            CreateCheckoutRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.#ctor(System.String,Square.Models.CreateOrderRequest,System.Nullable{System.Boolean},System.String,System.String,Square.Models.Address,System.String,System.Collections.Generic.IList{Square.Models.ChargeRequestAdditionalRecipient},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateCheckoutRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="order">order.</param>
            <param name="askForShippingAddress">ask_for_shipping_address.</param>
            <param name="merchantSupportEmail">merchant_support_email.</param>
            <param name="prePopulateBuyerEmail">pre_populate_buyer_email.</param>
            <param name="prePopulateShippingAddress">pre_populate_shipping_address.</param>
            <param name="redirectUrl">redirect_url.</param>
            <param name="additionalRecipients">additional_recipients.</param>
            <param name="note">note.</param>
        </member>
        <member name="P:Square.Models.CreateCheckoutRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this checkout among others you have created. It can be
            any valid string but must be unique for every order sent to Square Checkout for a given location ID.
            The idempotency key is used to avoid processing the same order more than once. If you are
            unsure whether a particular checkout was created successfully, you can attempt it again with
            the same idempotency key and all the same other parameters without worrying about creating duplicates.
            You should use a random number/string generator native to the language
            you are working in to generate strings for your idempotency keys.
            For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="P:Square.Models.CreateCheckoutRequest.Order">
            <summary>
            Gets or sets Order.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCheckoutRequest.AskForShippingAddress">
            <summary>
            If `true`, Square Checkout collects shipping information on your behalf and stores
            that information with the transaction information in the Square Seller Dashboard.
            Default: `false`.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCheckoutRequest.MerchantSupportEmail">
            <summary>
            The email address to display on the Square Checkout confirmation page
            and confirmation email that the buyer can use to contact the seller.
            If this value is not set, the confirmation page and email display the
            primary email address associated with the seller's Square account.
            Default: none; only exists if explicitly set.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCheckoutRequest.PrePopulateBuyerEmail">
            <summary>
            If provided, the buyer's email is prepopulated on the checkout page
            as an editable text field.
            Default: none; only exists if explicitly set.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCheckoutRequest.PrePopulateShippingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCheckoutRequest.RedirectUrl">
            <summary>
            The URL to redirect to after the checkout is completed with `checkoutId`,
            Square's `orderId`, `transactionId`, and `referenceId` appended as URL
            parameters. For example, if the provided redirect URL is
            `http://www.example.com/order-complete`, a successful transaction redirects
            the customer to:
            <pre><code>http://www.example.com/order-complete?checkoutId=xxxxxx&amp;orderId=xxxxxx&amp;referenceId=xxxxxx&amp;transactionId=xxxxxx</code></pre>
            If you do not provide a redirect URL, Square Checkout displays an order
            confirmation page on your behalf; however, it is strongly recommended that
            you provide a redirect URL so you can verify the transaction results and
            finalize the order through your existing/normal confirmation workflow.
            Default: none; only exists if explicitly set.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCheckoutRequest.AdditionalRecipients">
            <summary>
            The basic primitive of a multi-party transaction. The value is optional.
            The transaction facilitated by you can be split from here.
            If you provide this value, the `amount_money` value in your `additional_recipients` field
            cannot be more than 90% of the `total_money` calculated by Square for your order.
            The `location_id` must be a valid seller location where the checkout is occurring.
            This field requires `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth permission.
            This field is currently not supported in the Square Sandbox.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCheckoutRequest.Note">
            <summary>
            An optional note to associate with the `checkout` object.
            This value cannot exceed 60 characters.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateCheckoutRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Builder.Order(Square.Models.CreateOrderRequest)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Builder.AskForShippingAddress(System.Nullable{System.Boolean})">
            <summary>
            AskForShippingAddress.
            </summary>
            <param name="askForShippingAddress"> askForShippingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Builder.MerchantSupportEmail(System.String)">
            <summary>
            MerchantSupportEmail.
            </summary>
            <param name="merchantSupportEmail"> merchantSupportEmail. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Builder.PrePopulateBuyerEmail(System.String)">
            <summary>
            PrePopulateBuyerEmail.
            </summary>
            <param name="prePopulateBuyerEmail"> prePopulateBuyerEmail. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Builder.PrePopulateShippingAddress(Square.Models.Address)">
            <summary>
            PrePopulateShippingAddress.
            </summary>
            <param name="prePopulateShippingAddress"> prePopulateShippingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Builder.RedirectUrl(System.String)">
            <summary>
            RedirectUrl.
            </summary>
            <param name="redirectUrl"> redirectUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Builder.AdditionalRecipients(System.Collections.Generic.IList{Square.Models.ChargeRequestAdditionalRecipient})">
            <summary>
            AdditionalRecipients.
            </summary>
            <param name="additionalRecipients"> additionalRecipients. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateCheckoutRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateCheckoutResponse">
            <summary>
            CreateCheckoutResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCheckoutResponse.#ctor(Square.Models.Checkout,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateCheckoutResponse"/> class.
            </summary>
            <param name="checkout">checkout.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CreateCheckoutResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCheckoutResponse.Checkout">
            <summary>
            Square Checkout lets merchants accept online payments for supported
            payment types using a checkout workflow hosted on squareup.com.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCheckoutResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCheckoutResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCheckoutResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCheckoutResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCheckoutResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateCheckoutResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateCheckoutResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCheckoutResponse.Builder.Checkout(Square.Models.Checkout)">
            <summary>
            Checkout.
            </summary>
            <param name="checkout"> checkout. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCheckoutResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateCheckoutResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerCardRequest">
            <summary>
            CreateCustomerCardRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.#ctor(System.String,Square.Models.Address,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateCustomerCardRequest"/> class.
            </summary>
            <param name="cardNonce">card_nonce.</param>
            <param name="billingAddress">billing_address.</param>
            <param name="cardholderName">cardholder_name.</param>
            <param name="verificationToken">verification_token.</param>
        </member>
        <member name="P:Square.Models.CreateCustomerCardRequest.CardNonce">
            <summary>
            A card nonce representing the credit card to link to the customer.
            Card nonces are generated by the Square payment form when customers enter
            their card information. For more information, see
            [Walkthrough: Integrate Square Payments in a Website](https://developer.squareup.com/docs/payment-form/payment-form-walkthrough).
            __NOTE:__ Card nonces generated by digital wallets (such as Apple Pay)
            cannot be used to create a customer card.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerCardRequest.BillingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerCardRequest.CardholderName">
            <summary>
            The full name printed on the credit card.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerCardRequest.VerificationToken">
            <summary>
            An identifying token generated by `SqPaymentForm.verifyBuyer()`.
            Verification tokens encapsulate customer device information and 3-D Secure
            challenge results to indicate that Square has verified the buyer identity.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerCardRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.Builder.CardNonce(System.String)">
            <summary>
            CardNonce.
            </summary>
            <param name="cardNonce"> cardNonce. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.Builder.BillingAddress(Square.Models.Address)">
            <summary>
            BillingAddress.
            </summary>
            <param name="billingAddress"> billingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.Builder.CardholderName(System.String)">
            <summary>
            CardholderName.
            </summary>
            <param name="cardholderName"> cardholderName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.Builder.VerificationToken(System.String)">
            <summary>
            VerificationToken.
            </summary>
            <param name="verificationToken"> verificationToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerCardRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateCustomerCardRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerCardResponse">
            <summary>
            CreateCustomerCardResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerCardResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Card)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateCustomerCardResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="card">card.</param>
        </member>
        <member name="P:Square.Models.CreateCustomerCardResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerCardResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerCardResponse.Card">
            <summary>
            Represents the payment details of a card to be used for payments. These
            details are determined by the `card_nonce` generated by `SqPaymentForm`.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerCardResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerCardResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerCardResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerCardResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateCustomerCardResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerCardResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerCardResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerCardResponse.Builder.Card(Square.Models.Card)">
            <summary>
            Card.
            </summary>
            <param name="card"> card. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerCardResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateCustomerCardResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerGroupRequest">
            <summary>
            CreateCustomerGroupRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupRequest.#ctor(Square.Models.CustomerGroup,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateCustomerGroupRequest"/> class.
            </summary>
            <param name="mGroup">group.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.CreateCustomerGroupRequest.IdempotencyKey">
            <summary>
            The idempotency key for the request. For more information, see [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency).
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerGroupRequest.MGroup">
            <summary>
            Represents a group of customer profiles.
            Customer groups can be created, be modified, and have their membership defined using
            the Customers API or within the Customer Directory in the Square Seller Dashboard or Point of Sale.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerGroupRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupRequest.Builder.MGroup(Square.Models.CustomerGroup)">
            <summary>
            MGroup.
            </summary>
            <param name="mGroup"> mGroup. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateCustomerGroupRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerGroupResponse">
            <summary>
            CreateCustomerGroupResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.CustomerGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateCustomerGroupResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="mGroup">group.</param>
        </member>
        <member name="P:Square.Models.CreateCustomerGroupResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerGroupResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerGroupResponse.MGroup">
            <summary>
            Represents a group of customer profiles.
            Customer groups can be created, be modified, and have their membership defined using
            the Customers API or within the Customer Directory in the Square Seller Dashboard or Point of Sale.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerGroupResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupResponse.Builder.MGroup(Square.Models.CustomerGroup)">
            <summary>
            MGroup.
            </summary>
            <param name="mGroup"> mGroup. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerGroupResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateCustomerGroupResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerRequest">
            <summary>
            CreateCustomerRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.Address,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateCustomerRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="givenName">given_name.</param>
            <param name="familyName">family_name.</param>
            <param name="companyName">company_name.</param>
            <param name="nickname">nickname.</param>
            <param name="emailAddress">email_address.</param>
            <param name="address">address.</param>
            <param name="phoneNumber">phone_number.</param>
            <param name="referenceId">reference_id.</param>
            <param name="note">note.</param>
            <param name="birthday">birthday.</param>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.IdempotencyKey">
            <summary>
            The idempotency key for the request.	For more information, see
            [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.GivenName">
            <summary>
            The given name (that is, the first name) associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.FamilyName">
            <summary>
            The family name (that is, the last name) associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.CompanyName">
            <summary>
            A business name associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.Nickname">
            <summary>
            A nickname for the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.EmailAddress">
            <summary>
            The email address associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.Address">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.PhoneNumber">
            <summary>
            The 11-digit phone number associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.ReferenceId">
            <summary>
            An optional second ID used to associate the customer profile with an
            entity in another system.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.Note">
            <summary>
            A custom note associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerRequest.Birthday">
            <summary>
            The birthday associated with the customer profile, in RFC 3339 format. The year is optional. The timezone and time are not allowed.
            For example, `0000-09-21T00:00:00-00:00` represents a birthday on September 21 and `1998-09-21T00:00:00-00:00` represents a birthday on September 21, 1998.
            You can also specify this value in `YYYY-MM-DD` format.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.GivenName(System.String)">
            <summary>
            GivenName.
            </summary>
            <param name="givenName"> givenName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.FamilyName(System.String)">
            <summary>
            FamilyName.
            </summary>
            <param name="familyName"> familyName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.CompanyName(System.String)">
            <summary>
            CompanyName.
            </summary>
            <param name="companyName"> companyName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.Nickname(System.String)">
            <summary>
            Nickname.
            </summary>
            <param name="nickname"> nickname. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.EmailAddress(System.String)">
            <summary>
            EmailAddress.
            </summary>
            <param name="emailAddress"> emailAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.Address(Square.Models.Address)">
            <summary>
            Address.
            </summary>
            <param name="address"> address. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.PhoneNumber(System.String)">
            <summary>
            PhoneNumber.
            </summary>
            <param name="phoneNumber"> phoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.Birthday(System.String)">
            <summary>
            Birthday.
            </summary>
            <param name="birthday"> birthday. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateCustomerRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerResponse">
            <summary>
            CreateCustomerResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Customer)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateCustomerResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="customer">customer.</param>
        </member>
        <member name="P:Square.Models.CreateCustomerResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateCustomerResponse.Customer">
            <summary>
            Represents a Square customer profile, which can have one or more
            cards on file associated with it.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateCustomerResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateCustomerResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateCustomerResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateCustomerResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerResponse.Builder.Customer(Square.Models.Customer)">
            <summary>
            Customer.
            </summary>
            <param name="customer"> customer. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateCustomerResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateCustomerResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateDeviceCodeRequest">
            <summary>
            CreateDeviceCodeRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeRequest.#ctor(System.String,Square.Models.DeviceCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateDeviceCodeRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="deviceCode">device_code.</param>
        </member>
        <member name="P:Square.Models.CreateDeviceCodeRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this CreateDeviceCode request. Keys can
            be any valid string but must be unique for every CreateDeviceCode request.
            See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CreateDeviceCodeRequest.DeviceCode">
            <summary>
            Gets or sets DeviceCode.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateDeviceCodeRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeRequest.Builder.DeviceCode(Square.Models.DeviceCode)">
            <summary>
            DeviceCode.
            </summary>
            <param name="deviceCode"> deviceCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateDeviceCodeRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateDeviceCodeResponse">
            <summary>
            CreateDeviceCodeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.DeviceCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateDeviceCodeResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="deviceCode">device_code.</param>
        </member>
        <member name="P:Square.Models.CreateDeviceCodeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateDeviceCodeResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateDeviceCodeResponse.DeviceCode">
            <summary>
            Gets or sets DeviceCode.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateDeviceCodeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeResponse.Builder.DeviceCode(Square.Models.DeviceCode)">
            <summary>
            DeviceCode.
            </summary>
            <param name="deviceCode"> deviceCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDeviceCodeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateDeviceCodeResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateDisputeEvidenceFileRequest">
            <summary>
            CreateDisputeEvidenceFileRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateDisputeEvidenceFileRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="evidenceType">evidence_type.</param>
            <param name="contentType">content_type.</param>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceFileRequest.IdempotencyKey">
            <summary>
            The Unique ID. For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceFileRequest.EvidenceType">
            <summary>
            The type of the dispute evidence.
            </summary>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceFileRequest.ContentType">
            <summary>
            The MIME type of the uploaded file.
            The type can be image/heic, image/heif, image/jpeg, application/pdf, image/png, or image/tiff.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateDisputeEvidenceFileRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileRequest.Builder.EvidenceType(System.String)">
            <summary>
            EvidenceType.
            </summary>
            <param name="evidenceType"> evidenceType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileRequest.Builder.ContentType(System.String)">
            <summary>
            ContentType.
            </summary>
            <param name="contentType"> contentType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateDisputeEvidenceFileRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateDisputeEvidenceFileResponse">
            <summary>
            CreateDisputeEvidenceFileResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.DisputeEvidence)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateDisputeEvidenceFileResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="evidence">evidence.</param>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceFileResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceFileResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceFileResponse.Evidence">
            <summary>
            Gets or sets Evidence.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateDisputeEvidenceFileResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileResponse.Builder.Evidence(Square.Models.DisputeEvidence)">
            <summary>
            Evidence.
            </summary>
            <param name="evidence"> evidence. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceFileResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateDisputeEvidenceFileResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateDisputeEvidenceTextRequest">
            <summary>
            CreateDisputeEvidenceTextRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateDisputeEvidenceTextRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="evidenceText">evidence_text.</param>
            <param name="evidenceType">evidence_type.</param>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceTextRequest.IdempotencyKey">
            <summary>
            The Unique ID. For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceTextRequest.EvidenceType">
            <summary>
            The type of the dispute evidence.
            </summary>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceTextRequest.EvidenceText">
            <summary>
            The evidence string.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateDisputeEvidenceTextRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextRequest.Builder.EvidenceText(System.String)">
            <summary>
            EvidenceText.
            </summary>
            <param name="evidenceText"> evidenceText. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextRequest.Builder.EvidenceType(System.String)">
            <summary>
            EvidenceType.
            </summary>
            <param name="evidenceType"> evidenceType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateDisputeEvidenceTextRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateDisputeEvidenceTextResponse">
            <summary>
            CreateDisputeEvidenceTextResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.DisputeEvidence)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateDisputeEvidenceTextResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="evidence">evidence.</param>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceTextResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceTextResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateDisputeEvidenceTextResponse.Evidence">
            <summary>
            Gets or sets Evidence.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateDisputeEvidenceTextResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextResponse.Builder.Evidence(Square.Models.DisputeEvidence)">
            <summary>
            Evidence.
            </summary>
            <param name="evidence"> evidence. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateDisputeEvidenceTextResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateDisputeEvidenceTextResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateInvoiceRequest">
            <summary>
            CreateInvoiceRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateInvoiceRequest.#ctor(Square.Models.Invoice,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateInvoiceRequest"/> class.
            </summary>
            <param name="invoice">invoice.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.CreateInvoiceRequest.Invoice">
            <summary>
            Stores information about an invoice. You use the Invoices API to create and manage
            invoices. For more information, see [Manage Invoices Using the Invoices API](https://developer.squareup.com/docs/invoices-api/overview).
            </summary>
        </member>
        <member name="P:Square.Models.CreateInvoiceRequest.IdempotencyKey">
            <summary>
            A unique string that identifies the `CreateInvoice` request. If you do not
            provide `idempotency_key` (or provide an empty string as the value), the endpoint
            treats each request as independent.
            For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="M:Square.Models.CreateInvoiceRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateInvoiceRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateInvoiceRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateInvoiceRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateInvoiceRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateInvoiceRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateInvoiceRequest.Builder.Invoice(Square.Models.Invoice)">
            <summary>
            Invoice.
            </summary>
            <param name="invoice"> invoice. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateInvoiceRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateInvoiceRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateInvoiceRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateInvoiceResponse">
            <summary>
            CreateInvoiceResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateInvoiceResponse.#ctor(Square.Models.Invoice,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateInvoiceResponse"/> class.
            </summary>
            <param name="invoice">invoice.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CreateInvoiceResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateInvoiceResponse.Invoice">
            <summary>
            Stores information about an invoice. You use the Invoices API to create and manage
            invoices. For more information, see [Manage Invoices Using the Invoices API](https://developer.squareup.com/docs/invoices-api/overview).
            </summary>
        </member>
        <member name="P:Square.Models.CreateInvoiceResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CreateInvoiceResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateInvoiceResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateInvoiceResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateInvoiceResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateInvoiceResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateInvoiceResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateInvoiceResponse.Builder.Invoice(Square.Models.Invoice)">
            <summary>
            Invoice.
            </summary>
            <param name="invoice"> invoice. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateInvoiceResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateInvoiceResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateInvoiceResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateLocationRequest">
            <summary>
            CreateLocationRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLocationRequest.#ctor(Square.Models.Location)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateLocationRequest"/> class.
            </summary>
            <param name="location">location.</param>
        </member>
        <member name="P:Square.Models.CreateLocationRequest.Location">
            <summary>
            Gets or sets Location.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLocationRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLocationRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLocationRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLocationRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateLocationRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateLocationRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLocationRequest.Builder.Location(Square.Models.Location)">
            <summary>
            Location.
            </summary>
            <param name="location"> location. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLocationRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateLocationRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateLocationResponse">
            <summary>
            CreateLocationResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLocationResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Location)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateLocationResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="location">location.</param>
        </member>
        <member name="P:Square.Models.CreateLocationResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateLocationResponse.Errors">
            <summary>
            Information on errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateLocationResponse.Location">
            <summary>
            Gets or sets Location.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLocationResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLocationResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLocationResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLocationResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateLocationResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateLocationResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLocationResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLocationResponse.Builder.Location(Square.Models.Location)">
            <summary>
            Location.
            </summary>
            <param name="location"> location. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLocationResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateLocationResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateLoyaltyAccountRequest">
            <summary>
            CreateLoyaltyAccountRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountRequest.#ctor(Square.Models.LoyaltyAccount,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateLoyaltyAccountRequest"/> class.
            </summary>
            <param name="loyaltyAccount">loyalty_account.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.CreateLoyaltyAccountRequest.LoyaltyAccount">
            <summary>
            Describes a loyalty account. For more information, see
            [Loyalty Overview](https://developer.squareup.com/docs/loyalty/overview).
            </summary>
        </member>
        <member name="P:Square.Models.CreateLoyaltyAccountRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this `CreateLoyaltyAccount` request.
            Keys can be any valid string, but must be unique for every request.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateLoyaltyAccountRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountRequest.Builder.LoyaltyAccount(Square.Models.LoyaltyAccount)">
            <summary>
            LoyaltyAccount.
            </summary>
            <param name="loyaltyAccount"> loyaltyAccount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateLoyaltyAccountRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateLoyaltyAccountResponse">
            <summary>
            CreateLoyaltyAccountResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.LoyaltyAccount)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateLoyaltyAccountResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="loyaltyAccount">loyalty_account.</param>
        </member>
        <member name="P:Square.Models.CreateLoyaltyAccountResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateLoyaltyAccountResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateLoyaltyAccountResponse.LoyaltyAccount">
            <summary>
            Describes a loyalty account. For more information, see
            [Loyalty Overview](https://developer.squareup.com/docs/loyalty/overview).
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateLoyaltyAccountResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountResponse.Builder.LoyaltyAccount(Square.Models.LoyaltyAccount)">
            <summary>
            LoyaltyAccount.
            </summary>
            <param name="loyaltyAccount"> loyaltyAccount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLoyaltyAccountResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateLoyaltyAccountResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateLoyaltyRewardRequest">
            <summary>
            CreateLoyaltyRewardRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardRequest.#ctor(Square.Models.LoyaltyReward,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateLoyaltyRewardRequest"/> class.
            </summary>
            <param name="reward">reward.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.CreateLoyaltyRewardRequest.Reward">
            <summary>
            Represents a contract to redeem loyalty points for a [reward tier]($m/LoyaltyProgramRewardTier) discount. Loyalty rewards can be in an ISSUED, REDEEMED, or DELETED state. For more information, see [Redeem loyalty rewards](https://developer.squareup.com/docs/loyalty-api/overview#redeem-loyalty-rewards).
            </summary>
        </member>
        <member name="P:Square.Models.CreateLoyaltyRewardRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this `CreateLoyaltyReward` request.
            Keys can be any valid string, but must be unique for every request.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateLoyaltyRewardRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardRequest.Builder.Reward(Square.Models.LoyaltyReward)">
            <summary>
            Reward.
            </summary>
            <param name="reward"> reward. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateLoyaltyRewardRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateLoyaltyRewardResponse">
            <summary>
            CreateLoyaltyRewardResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.LoyaltyReward)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateLoyaltyRewardResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="reward">reward.</param>
        </member>
        <member name="P:Square.Models.CreateLoyaltyRewardResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateLoyaltyRewardResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateLoyaltyRewardResponse.Reward">
            <summary>
            Represents a contract to redeem loyalty points for a [reward tier]($m/LoyaltyProgramRewardTier) discount. Loyalty rewards can be in an ISSUED, REDEEMED, or DELETED state. For more information, see [Redeem loyalty rewards](https://developer.squareup.com/docs/loyalty-api/overview#redeem-loyalty-rewards).
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateLoyaltyRewardResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardResponse.Builder.Reward(Square.Models.LoyaltyReward)">
            <summary>
            Reward.
            </summary>
            <param name="reward"> reward. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateLoyaltyRewardResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateLoyaltyRewardResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateMobileAuthorizationCodeRequest">
            <summary>
            CreateMobileAuthorizationCodeRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateMobileAuthorizationCodeRequest"/> class.
            </summary>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.CreateMobileAuthorizationCodeRequest.LocationId">
            <summary>
            The Square location ID the authorization code should be tied to.
            </summary>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateMobileAuthorizationCodeRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateMobileAuthorizationCodeRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateMobileAuthorizationCodeResponse">
            <summary>
            CreateMobileAuthorizationCodeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeResponse.#ctor(System.String,System.String,Square.Models.Error)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateMobileAuthorizationCodeResponse"/> class.
            </summary>
            <param name="authorizationCode">authorization_code.</param>
            <param name="expiresAt">expires_at.</param>
            <param name="error">error.</param>
        </member>
        <member name="P:Square.Models.CreateMobileAuthorizationCodeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateMobileAuthorizationCodeResponse.AuthorizationCode">
            <summary>
            Generated authorization code that connects a mobile application instance
            to a Square account.
            </summary>
        </member>
        <member name="P:Square.Models.CreateMobileAuthorizationCodeResponse.ExpiresAt">
            <summary>
            The timestamp when `authorization_code` expires in
            [RFC 3339](https://tools.ietf.org/html/rfc3339) format, e.g., "2016-09-04T23:59:33.123Z".
            </summary>
        </member>
        <member name="P:Square.Models.CreateMobileAuthorizationCodeResponse.Error">
            <summary>
            Represents an error encountered during a request to the Connect API.
            See [Handling errors](https://developer.squareup.com/docs/build-basics/handling-errors) for more information.
            </summary>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateMobileAuthorizationCodeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeResponse.Builder.AuthorizationCode(System.String)">
            <summary>
            AuthorizationCode.
            </summary>
            <param name="authorizationCode"> authorizationCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeResponse.Builder.ExpiresAt(System.String)">
            <summary>
            ExpiresAt.
            </summary>
            <param name="expiresAt"> expiresAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeResponse.Builder.Error(Square.Models.Error)">
            <summary>
            Error.
            </summary>
            <param name="error"> error. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateMobileAuthorizationCodeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateMobileAuthorizationCodeResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateOrderRequest">
            <summary>
            CreateOrderRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateOrderRequest.#ctor(Square.Models.Order,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateOrderRequest"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.CreateOrderRequest.Order">
            <summary>
            Contains all information related to a single order to process with Square,
            including line items that specify the products to purchase. `Order` objects also
            include information about any associated tenders, refunds, and returns.
            All Connect V2 Transactions have all been converted to Orders including all associated
            itemization data.
            </summary>
        </member>
        <member name="P:Square.Models.CreateOrderRequest.IdempotencyKey">
            <summary>
            A value you specify that uniquely identifies this
            order among orders you have created.
            If you are unsure whether a particular order was created successfully,
            you can try it again with the same idempotency key without
            worrying about creating duplicate orders.
            For more information, see [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency).
            </summary>
        </member>
        <member name="M:Square.Models.CreateOrderRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateOrderRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateOrderRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateOrderRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateOrderRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateOrderRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateOrderRequest.Builder.Order(Square.Models.Order)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateOrderRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateOrderRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateOrderRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateOrderResponse">
            <summary>
            CreateOrderResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateOrderResponse.#ctor(Square.Models.Order,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateOrderResponse"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CreateOrderResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateOrderResponse.Order">
            <summary>
            Contains all information related to a single order to process with Square,
            including line items that specify the products to purchase. `Order` objects also
            include information about any associated tenders, refunds, and returns.
            All Connect V2 Transactions have all been converted to Orders including all associated
            itemization data.
            </summary>
        </member>
        <member name="P:Square.Models.CreateOrderResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CreateOrderResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateOrderResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateOrderResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateOrderResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateOrderResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateOrderResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateOrderResponse.Builder.Order(Square.Models.Order)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateOrderResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateOrderResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateOrderResponse. </returns>
        </member>
        <member name="T:Square.Models.CreatePaymentRequest">
            <summary>
            CreatePaymentRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.#ctor(System.String,System.String,Square.Models.Money,Square.Models.Money,Square.Models.Money,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,Square.Models.Address,Square.Models.Address,System.String,System.String,Square.Models.CashPaymentDetails,Square.Models.ExternalPaymentDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreatePaymentRequest"/> class.
            </summary>
            <param name="sourceId">source_id.</param>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="tipMoney">tip_money.</param>
            <param name="appFeeMoney">app_fee_money.</param>
            <param name="delayDuration">delay_duration.</param>
            <param name="autocomplete">autocomplete.</param>
            <param name="orderId">order_id.</param>
            <param name="customerId">customer_id.</param>
            <param name="locationId">location_id.</param>
            <param name="referenceId">reference_id.</param>
            <param name="verificationToken">verification_token.</param>
            <param name="acceptPartialAuthorization">accept_partial_authorization.</param>
            <param name="buyerEmailAddress">buyer_email_address.</param>
            <param name="billingAddress">billing_address.</param>
            <param name="shippingAddress">shipping_address.</param>
            <param name="note">note.</param>
            <param name="statementDescriptionIdentifier">statement_description_identifier.</param>
            <param name="cashDetails">cash_details.</param>
            <param name="externalDetails">external_details.</param>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.SourceId">
            <summary>
            The ID for the source of funds for this payment. This can be a payment token
            (card nonce) generated by the Square payment form or a card on file made with the
            Customers API. If recording a payment that the seller
            received outside of Square, specify either "CASH" or "EXTERNAL".
            For more information, see
            [Take Payments](https://developer.squareup.com/docs/payments-api/take-payments).
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this `CreatePayment` request. Keys can be any valid string
            but must be unique for every `CreatePayment` request.
            Max: 45 characters
            Note: The number of allowed characters might be less than the stated maximum, if multi-byte
            characters are used.
            For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.TipMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.AppFeeMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.DelayDuration">
            <summary>
            The duration of time after the payment's creation when Square automatically cancels the
            payment. This automatic cancellation applies only to payments that do not reach a terminal state
            (COMPLETED, CANCELED, or FAILED) before the `delay_duration` time period.
            This parameter should be specified as a time duration, in RFC 3339 format, with a minimum value
            of 1 minute.
            Note: This feature is only supported for card payments. This parameter can only be set for a delayed
            capture payment (`autocomplete=false`).
            Default:
            - Card-present payments: "PT36H" (36 hours) from the creation time.
            - Card-not-present payments: "P7D" (7 days) from the creation time.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.Autocomplete">
            <summary>
            If set to `true`, this payment will be completed when possible. If
            set to `false`, this payment is held in an approved state until either
            explicitly completed (captured) or canceled (voided). For more information, see
            [Delayed capture](https://developer.squareup.com/docs/payments-api/take-payments/card-payments#delayed-capture-of-a-card-payment).
            Default: true
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.OrderId">
            <summary>
            Associates a previously created order with this payment.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.CustomerId">
            <summary>
            The [Customer]($m/Customer) ID of the customer associated with the payment.
            This is required if the `source_id` refers to a card on file created using the Customers API.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.LocationId">
            <summary>
            The location ID to associate with the payment. If not specified, the default location is
            used.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.ReferenceId">
            <summary>
            A user-defined ID to associate with the payment.
            You can use this field to associate the payment to an entity in an external system
            (for example, you might specify an order ID that is generated by a third-party shopping cart).
            Limit 40 characters.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.VerificationToken">
            <summary>
            An identifying token generated by `SqPaymentForm.verifyBuyer()`.
            Verification tokens encapsulate customer device information and 3-D Secure
            challenge results to indicate that Square has verified the buyer identity.
            For more information, see [SCA Overview](https://developer.squareup.com/docs/sca-overview).
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.AcceptPartialAuthorization">
            <summary>
            If set to `true` and charging a Square Gift Card, a payment might be returned with
            `amount_money` equal to less than what was requested. For example, a request for $20 when charging
            a Square Gift Card with a balance of $5 results in an APPROVED payment of $5. You might choose
            to prompt the buyer for an additional payment to cover the remainder or cancel the Gift Card
            payment. This field cannot be `true` when `autocomplete = true`.
            For more information, see
            [Partial amount with Square Gift Cards](https://developer.squareup.com/docs/payments-api/take-payments#partial-payment-gift-card).
            Default: false
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.BuyerEmailAddress">
            <summary>
            The buyer's email address.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.BillingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.ShippingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.Note">
            <summary>
            An optional note to be entered by the developer when creating a payment.
            Limit 500 characters.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.StatementDescriptionIdentifier">
            <summary>
            Optional additional payment information to include on the customer's card statement
            as part of the statement description. This can be, for example, an invoice number, ticket number,
            or short description that uniquely identifies the purchase.
            Note that the `statement_description_identifier` might get truncated on the statement description
            to fit the required information including the Square identifier (SQ *) and name of the
            seller taking the payment.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.CashDetails">
            <summary>
            Stores details about a cash payment. Contains only non-confidential information. For more information, see
            [Take Cash Payments](https://developer.squareup.com/docs/payments-api/take-payments/cash-payments).
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentRequest.ExternalDetails">
            <summary>
            Stores details about an external payment. Contains only non-confidential information.
            For more information, see
            [Take External Payments](https://developer.squareup.com/docs/payments-api/take-payments/external-payments).
            </summary>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreatePaymentRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.SourceId(System.String)">
            <summary>
            SourceId.
            </summary>
            <param name="sourceId"> sourceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.TipMoney(Square.Models.Money)">
            <summary>
            TipMoney.
            </summary>
            <param name="tipMoney"> tipMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.AppFeeMoney(Square.Models.Money)">
            <summary>
            AppFeeMoney.
            </summary>
            <param name="appFeeMoney"> appFeeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.DelayDuration(System.String)">
            <summary>
            DelayDuration.
            </summary>
            <param name="delayDuration"> delayDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.Autocomplete(System.Nullable{System.Boolean})">
            <summary>
            Autocomplete.
            </summary>
            <param name="autocomplete"> autocomplete. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.VerificationToken(System.String)">
            <summary>
            VerificationToken.
            </summary>
            <param name="verificationToken"> verificationToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.AcceptPartialAuthorization(System.Nullable{System.Boolean})">
            <summary>
            AcceptPartialAuthorization.
            </summary>
            <param name="acceptPartialAuthorization"> acceptPartialAuthorization. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.BuyerEmailAddress(System.String)">
            <summary>
            BuyerEmailAddress.
            </summary>
            <param name="buyerEmailAddress"> buyerEmailAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.BillingAddress(Square.Models.Address)">
            <summary>
            BillingAddress.
            </summary>
            <param name="billingAddress"> billingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.ShippingAddress(Square.Models.Address)">
            <summary>
            ShippingAddress.
            </summary>
            <param name="shippingAddress"> shippingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.StatementDescriptionIdentifier(System.String)">
            <summary>
            StatementDescriptionIdentifier.
            </summary>
            <param name="statementDescriptionIdentifier"> statementDescriptionIdentifier. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.CashDetails(Square.Models.CashPaymentDetails)">
            <summary>
            CashDetails.
            </summary>
            <param name="cashDetails"> cashDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.ExternalDetails(Square.Models.ExternalPaymentDetails)">
            <summary>
            ExternalDetails.
            </summary>
            <param name="externalDetails"> externalDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreatePaymentRequest. </returns>
        </member>
        <member name="T:Square.Models.CreatePaymentResponse">
            <summary>
            CreatePaymentResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreatePaymentResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Payment)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreatePaymentResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="payment">payment.</param>
        </member>
        <member name="P:Square.Models.CreatePaymentResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreatePaymentResponse.Payment">
            <summary>
            Represents a payment processed by the Square API.
            </summary>
        </member>
        <member name="M:Square.Models.CreatePaymentResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreatePaymentResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreatePaymentResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreatePaymentResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreatePaymentResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreatePaymentResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreatePaymentResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentResponse.Builder.Payment(Square.Models.Payment)">
            <summary>
            Payment.
            </summary>
            <param name="payment"> payment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreatePaymentResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreatePaymentResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateRefundRequest">
            <summary>
            CreateRefundRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.#ctor(System.String,System.String,Square.Models.Money,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateRefundRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="tenderId">tender_id.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="reason">reason.</param>
        </member>
        <member name="P:Square.Models.CreateRefundRequest.IdempotencyKey">
            <summary>
            A value you specify that uniquely identifies this
            refund among refunds you've created for the tender.
            If you're unsure whether a particular refund succeeded,
            you can reattempt it with the same idempotency key without
            worrying about duplicating the refund.
            See [Idempotency keys](https://developer.squareup.com/docs/working-with-apis/idempotency) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CreateRefundRequest.TenderId">
            <summary>
            The ID of the tender to refund.
            A [`Transaction`]($m/Transaction) has one or more `tenders` (i.e., methods
            of payment) associated with it, and you refund each tender separately with
            the Connect API.
            </summary>
        </member>
        <member name="P:Square.Models.CreateRefundRequest.Reason">
            <summary>
            A description of the reason for the refund.
            Default value: `Refund via API`
            </summary>
        </member>
        <member name="P:Square.Models.CreateRefundRequest.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateRefundRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.Builder.TenderId(System.String)">
            <summary>
            TenderId.
            </summary>
            <param name="tenderId"> tenderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.Builder.Reason(System.String)">
            <summary>
            Reason.
            </summary>
            <param name="reason"> reason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateRefundRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateRefundRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateRefundResponse">
            <summary>
            CreateRefundResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateRefundResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Refund)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateRefundResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="refund">refund.</param>
        </member>
        <member name="P:Square.Models.CreateRefundResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateRefundResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateRefundResponse.Refund">
            <summary>
            Represents a refund processed for a Square transaction.
            </summary>
        </member>
        <member name="M:Square.Models.CreateRefundResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateRefundResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateRefundResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateRefundResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateRefundResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateRefundResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateRefundResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateRefundResponse.Builder.Refund(Square.Models.Refund)">
            <summary>
            Refund.
            </summary>
            <param name="refund"> refund. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateRefundResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateRefundResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateShiftRequest">
            <summary>
            CreateShiftRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateShiftRequest.#ctor(Square.Models.Shift,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateShiftRequest"/> class.
            </summary>
            <param name="shift">shift.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.CreateShiftRequest.IdempotencyKey">
            <summary>
            Unique string value to insure the idempotency of the operation.
            </summary>
        </member>
        <member name="P:Square.Models.CreateShiftRequest.Shift">
            <summary>
            A record of the hourly rate, start, and end times for a single work shift
            for an employee. May include a record of the start and end times for breaks
            taken during the shift.
            </summary>
        </member>
        <member name="M:Square.Models.CreateShiftRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateShiftRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateShiftRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateShiftRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateShiftRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateShiftRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateShiftRequest.Builder.Shift(Square.Models.Shift)">
            <summary>
            Shift.
            </summary>
            <param name="shift"> shift. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateShiftRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateShiftRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateShiftRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateShiftResponse">
            <summary>
            CreateShiftResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateShiftResponse.#ctor(Square.Models.Shift,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateShiftResponse"/> class.
            </summary>
            <param name="shift">shift.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CreateShiftResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateShiftResponse.Shift">
            <summary>
            A record of the hourly rate, start, and end times for a single work shift
            for an employee. May include a record of the start and end times for breaks
            taken during the shift.
            </summary>
        </member>
        <member name="P:Square.Models.CreateShiftResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CreateShiftResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateShiftResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateShiftResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateShiftResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateShiftResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateShiftResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateShiftResponse.Builder.Shift(Square.Models.Shift)">
            <summary>
            Shift.
            </summary>
            <param name="shift"> shift. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateShiftResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateShiftResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateShiftResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateSubscriptionRequest">
            <summary>
            CreateSubscriptionRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.Money,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateSubscriptionRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="locationId">location_id.</param>
            <param name="planId">plan_id.</param>
            <param name="customerId">customer_id.</param>
            <param name="startDate">start_date.</param>
            <param name="canceledDate">canceled_date.</param>
            <param name="taxPercentage">tax_percentage.</param>
            <param name="priceOverrideMoney">price_override_money.</param>
            <param name="cardId">card_id.</param>
            <param name="timezone">timezone.</param>
        </member>
        <member name="P:Square.Models.CreateSubscriptionRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this `CreateSubscription` request.
            If you do not provide a unique string (or provide an empty string as the value),
            the endpoint treats each request as independent.
            For more information, see [Idempotency keys](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionRequest.LocationId">
            <summary>
            The ID of the location the subscription is associated with.
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionRequest.PlanId">
            <summary>
            The ID of the subscription plan. For more information, see
            [Subscription Plan Overview](https://developer.squareup.com/docs/subscriptions/overview).
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionRequest.CustomerId">
            <summary>
            The ID of the [customer]($m/Customer) profile.
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionRequest.StartDate">
            <summary>
            The start date of the subscription, in YYYY-MM-DD format. For example,
            2013-01-15. If the start date is left empty, the subscription begins
            immediately.
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionRequest.CanceledDate">
            <summary>
            The date when the subscription should be canceled, in
            YYYY-MM-DD format (for example, 2025-02-29). This overrides the plan configuration
            if it comes before the date the subscription would otherwise end.
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionRequest.TaxPercentage">
            <summary>
            The tax to add when billing the subscription.
            The percentage is expressed in decimal form, using a `'.'` as the decimal
            separator and without a `'%'` sign. For example, a value of 7.5
            corresponds to 7.5%.
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionRequest.PriceOverrideMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionRequest.CardId">
            <summary>
            The ID of the [customer]($m/Customer) [card]($m/Card) to charge.
            If not specified, Square sends an invoice via email. For an example to
            create a customer and add a card on file, see [Subscriptions Walkthrough](https://developer.squareup.com/docs/subscriptions-api/walkthrough).
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionRequest.Timezone">
            <summary>
            The timezone that is used in date calculations for the subscription. If unset, defaults to
            the location timezone. If a timezone is not configured for the location, defaults to "America/New_York".
            Format: the IANA Timezone Database identifier for the location timezone. For
            a list of time zones, see [List of tz database time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
            </summary>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateSubscriptionRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.PlanId(System.String)">
            <summary>
            PlanId.
            </summary>
            <param name="planId"> planId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.StartDate(System.String)">
            <summary>
            StartDate.
            </summary>
            <param name="startDate"> startDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.CanceledDate(System.String)">
            <summary>
            CanceledDate.
            </summary>
            <param name="canceledDate"> canceledDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.TaxPercentage(System.String)">
            <summary>
            TaxPercentage.
            </summary>
            <param name="taxPercentage"> taxPercentage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.PriceOverrideMoney(Square.Models.Money)">
            <summary>
            PriceOverrideMoney.
            </summary>
            <param name="priceOverrideMoney"> priceOverrideMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.CardId(System.String)">
            <summary>
            CardId.
            </summary>
            <param name="cardId"> cardId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.Timezone(System.String)">
            <summary>
            Timezone.
            </summary>
            <param name="timezone"> timezone. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateSubscriptionRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateSubscriptionResponse">
            <summary>
            CreateSubscriptionResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateSubscriptionResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateSubscriptionResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="subscription">subscription.</param>
        </member>
        <member name="P:Square.Models.CreateSubscriptionResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateSubscriptionResponse.Subscription">
            <summary>
            Represents a customer subscription to a subscription plan.
            For an overview of the `Subscription` type, see
            [Subscription object](https://developer.squareup.com/docs/subscriptions-api/overview#subscription-object-overview).
            </summary>
        </member>
        <member name="M:Square.Models.CreateSubscriptionResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateSubscriptionResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateSubscriptionResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateSubscriptionResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateSubscriptionResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateSubscriptionResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateSubscriptionResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionResponse.Builder.Subscription(Square.Models.Subscription)">
            <summary>
            Subscription.
            </summary>
            <param name="subscription"> subscription. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateSubscriptionResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateSubscriptionResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateTeamMemberRequest">
            <summary>
            CreateTeamMemberRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTeamMemberRequest.#ctor(System.String,Square.Models.TeamMember)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateTeamMemberRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="teamMember">team_member.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Square.Models.CreateTeamMemberRequest.IdempotencyKey" -->
        <member name="P:Square.Models.CreateTeamMemberRequest.TeamMember">
            <summary>
            A record representing an individual team member for a business.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTeamMemberRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTeamMemberRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTeamMemberRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTeamMemberRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateTeamMemberRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateTeamMemberRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTeamMemberRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTeamMemberRequest.Builder.TeamMember(Square.Models.TeamMember)">
            <summary>
            TeamMember.
            </summary>
            <param name="teamMember"> teamMember. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTeamMemberRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateTeamMemberRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateTeamMemberResponse">
            <summary>
            CreateTeamMemberResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTeamMemberResponse.#ctor(Square.Models.TeamMember,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateTeamMemberResponse"/> class.
            </summary>
            <param name="teamMember">team_member.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.CreateTeamMemberResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateTeamMemberResponse.TeamMember">
            <summary>
            A record representing an individual team member for a business.
            </summary>
        </member>
        <member name="P:Square.Models.CreateTeamMemberResponse.Errors">
            <summary>
            The errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTeamMemberResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTeamMemberResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTeamMemberResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTeamMemberResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateTeamMemberResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateTeamMemberResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTeamMemberResponse.Builder.TeamMember(Square.Models.TeamMember)">
            <summary>
            TeamMember.
            </summary>
            <param name="teamMember"> teamMember. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTeamMemberResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTeamMemberResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateTeamMemberResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateTerminalCheckoutRequest">
            <summary>
            CreateTerminalCheckoutRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutRequest.#ctor(System.String,Square.Models.TerminalCheckout)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateTerminalCheckoutRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="checkout">checkout.</param>
        </member>
        <member name="P:Square.Models.CreateTerminalCheckoutRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this `CreateCheckout` request. Keys can be any valid string but
            must be unique for every `CreateCheckout` request.
            See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CreateTerminalCheckoutRequest.Checkout">
            <summary>
            Gets or sets Checkout.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateTerminalCheckoutRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutRequest.Builder.Checkout(Square.Models.TerminalCheckout)">
            <summary>
            Checkout.
            </summary>
            <param name="checkout"> checkout. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateTerminalCheckoutRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateTerminalCheckoutResponse">
            <summary>
            CreateTerminalCheckoutResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.TerminalCheckout)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateTerminalCheckoutResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="checkout">checkout.</param>
        </member>
        <member name="P:Square.Models.CreateTerminalCheckoutResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateTerminalCheckoutResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateTerminalCheckoutResponse.Checkout">
            <summary>
            Gets or sets Checkout.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateTerminalCheckoutResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutResponse.Builder.Checkout(Square.Models.TerminalCheckout)">
            <summary>
            Checkout.
            </summary>
            <param name="checkout"> checkout. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTerminalCheckoutResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateTerminalCheckoutResponse. </returns>
        </member>
        <member name="T:Square.Models.CreateTerminalRefundRequest">
            <summary>
            CreateTerminalRefundRequest.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundRequest.#ctor(System.String,Square.Models.TerminalRefund)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateTerminalRefundRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="refund">refund.</param>
        </member>
        <member name="P:Square.Models.CreateTerminalRefundRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this `CreateRefund` request. Keys can be any valid string but
            must be unique for every `CreateRefund` request.
            See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.CreateTerminalRefundRequest.Refund">
            <summary>
            Gets or sets Refund.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateTerminalRefundRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundRequest.Builder.Refund(Square.Models.TerminalRefund)">
            <summary>
            Refund.
            </summary>
            <param name="refund"> refund. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateTerminalRefundRequest. </returns>
        </member>
        <member name="T:Square.Models.CreateTerminalRefundResponse">
            <summary>
            CreateTerminalRefundResponse.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.TerminalRefund)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CreateTerminalRefundResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="refund">refund.</param>
        </member>
        <member name="P:Square.Models.CreateTerminalRefundResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.CreateTerminalRefundResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.CreateTerminalRefundResponse.Refund">
            <summary>
            Gets or sets Refund.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CreateTerminalRefundResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundResponse.Builder.Refund(Square.Models.TerminalRefund)">
            <summary>
            Refund.
            </summary>
            <param name="refund"> refund. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CreateTerminalRefundResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CreateTerminalRefundResponse. </returns>
        </member>
        <member name="T:Square.Models.CustomAttributeFilter">
            <summary>
            CustomAttributeFilter.
            </summary>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.#ctor(System.String,System.String,System.String,Square.Models.Range,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CustomAttributeFilter"/> class.
            </summary>
            <param name="customAttributeDefinitionId">custom_attribute_definition_id.</param>
            <param name="key">key.</param>
            <param name="stringFilter">string_filter.</param>
            <param name="numberFilter">number_filter.</param>
            <param name="selectionUidsFilter">selection_uids_filter.</param>
            <param name="boolFilter">bool_filter.</param>
        </member>
        <member name="P:Square.Models.CustomAttributeFilter.CustomAttributeDefinitionId">
            <summary>
            A query expression to filter items or item variations by matching their custom attributes'
            `custom_attribute_definition_id`
            property value against the the specified id.
            </summary>
        </member>
        <member name="P:Square.Models.CustomAttributeFilter.Key">
            <summary>
            A query expression to filter items or item variations by matching their custom attributes'
            `key` property value against
            the specified key.
            </summary>
        </member>
        <member name="P:Square.Models.CustomAttributeFilter.StringFilter">
            <summary>
            A query expression to filter items or item variations by matching their custom attributes'
            `string_value`  property value
            against the specified text.
            </summary>
        </member>
        <member name="P:Square.Models.CustomAttributeFilter.NumberFilter">
            <summary>
            The range of a number value between the specified lower and upper bounds.
            </summary>
        </member>
        <member name="P:Square.Models.CustomAttributeFilter.SelectionUidsFilter">
            <summary>
            A query expression to filter items or item variations by matching  their custom attributes'
            `selection_uid_values`
            values against the specified selection uids.
            </summary>
        </member>
        <member name="P:Square.Models.CustomAttributeFilter.BoolFilter">
            <summary>
            A query expression to filter items or item variations by matching their custom attributes'
            `boolean_value` property values
            against the specified Boolean expression.
            </summary>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CustomAttributeFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.Builder.CustomAttributeDefinitionId(System.String)">
            <summary>
            CustomAttributeDefinitionId.
            </summary>
            <param name="customAttributeDefinitionId"> customAttributeDefinitionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.Builder.Key(System.String)">
            <summary>
            Key.
            </summary>
            <param name="key"> key. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.Builder.StringFilter(System.String)">
            <summary>
            StringFilter.
            </summary>
            <param name="stringFilter"> stringFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.Builder.NumberFilter(Square.Models.Range)">
            <summary>
            NumberFilter.
            </summary>
            <param name="numberFilter"> numberFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.Builder.SelectionUidsFilter(System.Collections.Generic.IList{System.String})">
            <summary>
            SelectionUidsFilter.
            </summary>
            <param name="selectionUidsFilter"> selectionUidsFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.Builder.BoolFilter(System.Nullable{System.Boolean})">
            <summary>
            BoolFilter.
            </summary>
            <param name="boolFilter"> boolFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomAttributeFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CustomAttributeFilter. </returns>
        </member>
        <member name="T:Square.Models.Customer">
            <summary>
            Customer.
            </summary>
        </member>
        <member name="M:Square.Models.Customer.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Square.Models.Card},System.String,System.String,System.String,System.String,System.String,Square.Models.Address,System.String,System.String,System.String,System.String,Square.Models.CustomerPreferences,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Customer"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="cards">cards.</param>
            <param name="givenName">given_name.</param>
            <param name="familyName">family_name.</param>
            <param name="nickname">nickname.</param>
            <param name="companyName">company_name.</param>
            <param name="emailAddress">email_address.</param>
            <param name="address">address.</param>
            <param name="phoneNumber">phone_number.</param>
            <param name="birthday">birthday.</param>
            <param name="referenceId">reference_id.</param>
            <param name="note">note.</param>
            <param name="preferences">preferences.</param>
            <param name="creationSource">creation_source.</param>
            <param name="groupIds">group_ids.</param>
            <param name="segmentIds">segment_ids.</param>
            <param name="version">version.</param>
        </member>
        <member name="P:Square.Models.Customer.Id">
            <summary>
            A unique Square-assigned ID for the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.CreatedAt">
            <summary>
            The timestamp when the customer profile was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.UpdatedAt">
            <summary>
            The timestamp when the customer profile was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.Cards">
            <summary>
            Payment details of the credit, debit, and gift cards stored on file for the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.GivenName">
            <summary>
            The given (i.e., first) name associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.FamilyName">
            <summary>
            The family (i.e., last) name associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.Nickname">
            <summary>
            A nickname for the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.CompanyName">
            <summary>
            A business name associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.EmailAddress">
            <summary>
            The email address associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.Address">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.PhoneNumber">
            <summary>
            The 11-digit phone number associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.Birthday">
            <summary>
            The birthday associated with the customer profile, in RFC 3339 format. The year is optional. The timezone and time are not allowed.
            For example, `0000-09-21T00:00:00-00:00` represents a birthday on September 21 and `1998-09-21T00:00:00-00:00` represents a birthday on September 21, 1998.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.ReferenceId">
            <summary>
            An optional second ID used to associate the customer profile with an
            entity in another system.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.Note">
            <summary>
            A custom note associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.Preferences">
            <summary>
            Represents communication preferences for the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.CreationSource">
            <summary>
            Indicates the method used to create the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.GroupIds">
            <summary>
            The IDs of customer groups the customer belongs to.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.SegmentIds">
            <summary>
            The IDs of segments the customer belongs to.
            </summary>
        </member>
        <member name="P:Square.Models.Customer.Version">
            <summary>
            The Square-assigned version number of the customer profile. The version number is incremented each time an update is committed to the customer profile, except for changes to customer segment membership and cards on file.
            </summary>
        </member>
        <member name="M:Square.Models.Customer.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Customer.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Customer.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Customer.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Customer.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Customer.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Customer.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.Cards(System.Collections.Generic.IList{Square.Models.Card})">
            <summary>
            Cards.
            </summary>
            <param name="cards"> cards. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.GivenName(System.String)">
            <summary>
            GivenName.
            </summary>
            <param name="givenName"> givenName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.FamilyName(System.String)">
            <summary>
            FamilyName.
            </summary>
            <param name="familyName"> familyName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.Nickname(System.String)">
            <summary>
            Nickname.
            </summary>
            <param name="nickname"> nickname. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.CompanyName(System.String)">
            <summary>
            CompanyName.
            </summary>
            <param name="companyName"> companyName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.EmailAddress(System.String)">
            <summary>
            EmailAddress.
            </summary>
            <param name="emailAddress"> emailAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.Address(Square.Models.Address)">
            <summary>
            Address.
            </summary>
            <param name="address"> address. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.PhoneNumber(System.String)">
            <summary>
            PhoneNumber.
            </summary>
            <param name="phoneNumber"> phoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.Birthday(System.String)">
            <summary>
            Birthday.
            </summary>
            <param name="birthday"> birthday. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.Preferences(Square.Models.CustomerPreferences)">
            <summary>
            Preferences.
            </summary>
            <param name="preferences"> preferences. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.CreationSource(System.String)">
            <summary>
            CreationSource.
            </summary>
            <param name="creationSource"> creationSource. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.GroupIds(System.Collections.Generic.IList{System.String})">
            <summary>
            GroupIds.
            </summary>
            <param name="groupIds"> groupIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.SegmentIds(System.Collections.Generic.IList{System.String})">
            <summary>
            SegmentIds.
            </summary>
            <param name="segmentIds"> segmentIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.Version(System.Nullable{System.Int64})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Customer.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Customer. </returns>
        </member>
        <member name="T:Square.Models.CustomerCreationSourceFilter">
            <summary>
            CustomerCreationSourceFilter.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerCreationSourceFilter.#ctor(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CustomerCreationSourceFilter"/> class.
            </summary>
            <param name="values">values.</param>
            <param name="rule">rule.</param>
        </member>
        <member name="P:Square.Models.CustomerCreationSourceFilter.Values">
            <summary>
            The list of creation sources used as filtering criteria.
            See [CustomerCreationSource](#type-customercreationsource) for possible values
            </summary>
        </member>
        <member name="P:Square.Models.CustomerCreationSourceFilter.Rule">
            <summary>
            Indicates whether customers should be included in, or excluded from,
            the result set when they match the filtering criteria.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerCreationSourceFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerCreationSourceFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerCreationSourceFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerCreationSourceFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CustomerCreationSourceFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CustomerCreationSourceFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerCreationSourceFilter.Builder.Values(System.Collections.Generic.IList{System.String})">
            <summary>
            Values.
            </summary>
            <param name="values"> values. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerCreationSourceFilter.Builder.Rule(System.String)">
            <summary>
            Rule.
            </summary>
            <param name="rule"> rule. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerCreationSourceFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CustomerCreationSourceFilter. </returns>
        </member>
        <member name="T:Square.Models.CustomerFilter">
            <summary>
            CustomerFilter.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerFilter.#ctor(Square.Models.CustomerCreationSourceFilter,Square.Models.TimeRange,Square.Models.TimeRange,Square.Models.CustomerTextFilter,Square.Models.CustomerTextFilter,Square.Models.CustomerTextFilter,Square.Models.FilterValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CustomerFilter"/> class.
            </summary>
            <param name="creationSource">creation_source.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="emailAddress">email_address.</param>
            <param name="phoneNumber">phone_number.</param>
            <param name="referenceId">reference_id.</param>
            <param name="groupIds">group_ids.</param>
        </member>
        <member name="P:Square.Models.CustomerFilter.CreationSource">
            <summary>
            The creation source filter.
            If one or more creation sources are set, customer profiles are included in,
            or excluded from, the result if they match at least one of the filter criteria.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerFilter.CreatedAt">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerFilter.UpdatedAt">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerFilter.EmailAddress">
            <summary>
            A filter to select customers based on exact or fuzzy matching of
            customer attributes against a specified query. Depending on the customer attributes,
            the filter can be case-sensitive. This filter can be exact or fuzzy, but it cannot be both.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerFilter.PhoneNumber">
            <summary>
            A filter to select customers based on exact or fuzzy matching of
            customer attributes against a specified query. Depending on the customer attributes,
            the filter can be case-sensitive. This filter can be exact or fuzzy, but it cannot be both.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerFilter.ReferenceId">
            <summary>
            A filter to select customers based on exact or fuzzy matching of
            customer attributes against a specified query. Depending on the customer attributes,
            the filter can be case-sensitive. This filter can be exact or fuzzy, but it cannot be both.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerFilter.GroupIds">
            <summary>
            A filter to select resources based on an exact field value. For any given
            value, the value can only be in one property. Depending on the field, either
            all properties can be set or only a subset will be available.
            Refer to the documentation of the field.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CustomerFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CustomerFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerFilter.Builder.CreationSource(Square.Models.CustomerCreationSourceFilter)">
            <summary>
            CreationSource.
            </summary>
            <param name="creationSource"> creationSource. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerFilter.Builder.CreatedAt(Square.Models.TimeRange)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerFilter.Builder.UpdatedAt(Square.Models.TimeRange)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerFilter.Builder.EmailAddress(Square.Models.CustomerTextFilter)">
            <summary>
            EmailAddress.
            </summary>
            <param name="emailAddress"> emailAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerFilter.Builder.PhoneNumber(Square.Models.CustomerTextFilter)">
            <summary>
            PhoneNumber.
            </summary>
            <param name="phoneNumber"> phoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerFilter.Builder.ReferenceId(Square.Models.CustomerTextFilter)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerFilter.Builder.GroupIds(Square.Models.FilterValue)">
            <summary>
            GroupIds.
            </summary>
            <param name="groupIds"> groupIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CustomerFilter. </returns>
        </member>
        <member name="T:Square.Models.CustomerGroup">
            <summary>
            CustomerGroup.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerGroup.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CustomerGroup"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="id">id.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.CustomerGroup.Id">
            <summary>
            A unique Square-generated ID for the customer group.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerGroup.Name">
            <summary>
            The name of the customer group.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerGroup.CreatedAt">
            <summary>
            The timestamp when the customer group was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerGroup.UpdatedAt">
            <summary>
            The timestamp when the customer group was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerGroup.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerGroup.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerGroup.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerGroup.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CustomerGroup.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CustomerGroup.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerGroup.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerGroup.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerGroup.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerGroup.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerGroup.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CustomerGroup. </returns>
        </member>
        <member name="T:Square.Models.CustomerPreferences">
            <summary>
            CustomerPreferences.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerPreferences.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CustomerPreferences"/> class.
            </summary>
            <param name="emailUnsubscribed">email_unsubscribed.</param>
        </member>
        <member name="P:Square.Models.CustomerPreferences.EmailUnsubscribed">
            <summary>
            Indicates whether the customer has unsubscribed from marketing campaign emails. A value of `true` means that the customer chose to opt out of email marketing from the current Square seller or from all Square sellers. This value is read-only from the Customers API.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerPreferences.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerPreferences.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerPreferences.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerPreferences.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CustomerPreferences.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CustomerPreferences.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerPreferences.Builder.EmailUnsubscribed(System.Nullable{System.Boolean})">
            <summary>
            EmailUnsubscribed.
            </summary>
            <param name="emailUnsubscribed"> emailUnsubscribed. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerPreferences.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CustomerPreferences. </returns>
        </member>
        <member name="T:Square.Models.CustomerQuery">
            <summary>
            CustomerQuery.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerQuery.#ctor(Square.Models.CustomerFilter,Square.Models.CustomerSort)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CustomerQuery"/> class.
            </summary>
            <param name="filter">filter.</param>
            <param name="sort">sort.</param>
        </member>
        <member name="P:Square.Models.CustomerQuery.Filter">
            <summary>
            Represents a set of `CustomerQuery` filters used to limit the set of
            `Customers` returned by `SearchCustomers`.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerQuery.Sort">
            <summary>
            Specifies how searched customers profiles are sorted, including the sort key and sort order.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CustomerQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CustomerQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerQuery.Builder.Filter(Square.Models.CustomerFilter)">
            <summary>
            Filter.
            </summary>
            <param name="filter"> filter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerQuery.Builder.Sort(Square.Models.CustomerSort)">
            <summary>
            Sort.
            </summary>
            <param name="sort"> sort. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CustomerQuery. </returns>
        </member>
        <member name="T:Square.Models.CustomerSegment">
            <summary>
            CustomerSegment.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerSegment.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CustomerSegment"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="id">id.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.CustomerSegment.Id">
            <summary>
            A unique Square-generated ID for the segment.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerSegment.Name">
            <summary>
            The name of the segment.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerSegment.CreatedAt">
            <summary>
            The timestamp when the segment was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerSegment.UpdatedAt">
            <summary>
            The timestamp when the segment was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerSegment.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerSegment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerSegment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerSegment.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CustomerSegment.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CustomerSegment.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerSegment.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerSegment.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerSegment.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerSegment.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerSegment.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CustomerSegment. </returns>
        </member>
        <member name="T:Square.Models.CustomerSort">
            <summary>
            CustomerSort.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerSort.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CustomerSort"/> class.
            </summary>
            <param name="field">field.</param>
            <param name="order">order.</param>
        </member>
        <member name="P:Square.Models.CustomerSort.Field">
            <summary>
            Specifies customer attributes as the sort key to customer profiles returned from a search.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerSort.Order">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerSort.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerSort.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerSort.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerSort.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CustomerSort.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CustomerSort.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerSort.Builder.Field(System.String)">
            <summary>
            Field.
            </summary>
            <param name="field"> field. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerSort.Builder.Order(System.String)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerSort.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CustomerSort. </returns>
        </member>
        <member name="T:Square.Models.CustomerTextFilter">
            <summary>
            CustomerTextFilter.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerTextFilter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.CustomerTextFilter"/> class.
            </summary>
            <param name="exact">exact.</param>
            <param name="fuzzy">fuzzy.</param>
        </member>
        <member name="P:Square.Models.CustomerTextFilter.Exact">
            <summary>
            Use the exact filter to select customers whose attributes match exactly the specified query.
            </summary>
        </member>
        <member name="P:Square.Models.CustomerTextFilter.Fuzzy">
            <summary>
            Use the fuzzy filter to select customers whose attributes match the specified query
            in a fuzzy manner. When the fuzzy option is used, search queries are tokenized, and then
            each query token must be matched somewhere in the searched attribute. For single token queries,
            this is effectively the same behavior as a partial match operation.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerTextFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerTextFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerTextFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.CustomerTextFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.CustomerTextFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.CustomerTextFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.CustomerTextFilter.Builder.Exact(System.String)">
            <summary>
            Exact.
            </summary>
            <param name="exact"> exact. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerTextFilter.Builder.Fuzzy(System.String)">
            <summary>
            Fuzzy.
            </summary>
            <param name="fuzzy"> fuzzy. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.CustomerTextFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> CustomerTextFilter. </returns>
        </member>
        <member name="T:Square.Models.DateRange">
            <summary>
            DateRange.
            </summary>
        </member>
        <member name="M:Square.Models.DateRange.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DateRange"/> class.
            </summary>
            <param name="startDate">start_date.</param>
            <param name="endDate">end_date.</param>
        </member>
        <member name="P:Square.Models.DateRange.StartDate">
            <summary>
            String in `YYYY-MM-DD` format, e.g. `2017-10-31` per the ISO 8601
            extended format for calendar dates.
            The beginning of a date range (inclusive)
            </summary>
        </member>
        <member name="P:Square.Models.DateRange.EndDate">
            <summary>
            String in `YYYY-MM-DD` format, e.g. `2017-10-31` per the ISO 8601
            extended format for calendar dates.
            The end of a date range (inclusive)
            </summary>
        </member>
        <member name="M:Square.Models.DateRange.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DateRange.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DateRange.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DateRange.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DateRange.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DateRange.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DateRange.Builder.StartDate(System.String)">
            <summary>
            StartDate.
            </summary>
            <param name="startDate"> startDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DateRange.Builder.EndDate(System.String)">
            <summary>
            EndDate.
            </summary>
            <param name="endDate"> endDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DateRange.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DateRange. </returns>
        </member>
        <member name="T:Square.Models.DeleteBreakTypeResponse">
            <summary>
            DeleteBreakTypeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteBreakTypeResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteBreakTypeResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.DeleteBreakTypeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteBreakTypeResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteBreakTypeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteBreakTypeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteBreakTypeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteBreakTypeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteBreakTypeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteBreakTypeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteBreakTypeResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteBreakTypeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteBreakTypeResponse. </returns>
        </member>
        <member name="T:Square.Models.DeleteCatalogObjectResponse">
            <summary>
            DeleteCatalogObjectResponse.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCatalogObjectResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteCatalogObjectResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="deletedObjectIds">deleted_object_ids.</param>
            <param name="deletedAt">deleted_at.</param>
        </member>
        <member name="P:Square.Models.DeleteCatalogObjectResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteCatalogObjectResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteCatalogObjectResponse.DeletedObjectIds">
            <summary>
            The IDs of all catalog objects deleted by this request.
            Multiple IDs may be returned when associated objects are also deleted, for example
            a catalog item variation will be deleted (and its ID included in this field)
            when its parent catalog item is deleted.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteCatalogObjectResponse.DeletedAt">
            <summary>
            The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            of this deletion in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCatalogObjectResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCatalogObjectResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCatalogObjectResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCatalogObjectResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteCatalogObjectResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteCatalogObjectResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCatalogObjectResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteCatalogObjectResponse.Builder.DeletedObjectIds(System.Collections.Generic.IList{System.String})">
            <summary>
            DeletedObjectIds.
            </summary>
            <param name="deletedObjectIds"> deletedObjectIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteCatalogObjectResponse.Builder.DeletedAt(System.String)">
            <summary>
            DeletedAt.
            </summary>
            <param name="deletedAt"> deletedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteCatalogObjectResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteCatalogObjectResponse. </returns>
        </member>
        <member name="T:Square.Models.DeleteCustomerCardResponse">
            <summary>
            DeleteCustomerCardResponse.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerCardResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteCustomerCardResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.DeleteCustomerCardResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteCustomerCardResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerCardResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerCardResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerCardResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerCardResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteCustomerCardResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteCustomerCardResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerCardResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteCustomerCardResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteCustomerCardResponse. </returns>
        </member>
        <member name="T:Square.Models.DeleteCustomerGroupResponse">
            <summary>
            DeleteCustomerGroupResponse.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerGroupResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteCustomerGroupResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.DeleteCustomerGroupResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteCustomerGroupResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerGroupResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerGroupResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerGroupResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerGroupResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteCustomerGroupResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteCustomerGroupResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerGroupResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteCustomerGroupResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteCustomerGroupResponse. </returns>
        </member>
        <member name="T:Square.Models.DeleteCustomerRequest">
            <summary>
            DeleteCustomerRequest.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerRequest.#ctor(System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteCustomerRequest"/> class.
            </summary>
            <param name="version">version.</param>
        </member>
        <member name="P:Square.Models.DeleteCustomerRequest.Version">
            <summary>
            The current version of the customer profile.
            As a best practice, you should include this parameter to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control.  For more information, see [Delete a customer profile](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#delete-customer-profile).
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteCustomerRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteCustomerRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerRequest.Builder.Version(System.Nullable{System.Int64})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteCustomerRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteCustomerRequest. </returns>
        </member>
        <member name="T:Square.Models.DeleteCustomerResponse">
            <summary>
            DeleteCustomerResponse.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteCustomerResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.DeleteCustomerResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteCustomerResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteCustomerResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteCustomerResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteCustomerResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteCustomerResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteCustomerResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteCustomerResponse. </returns>
        </member>
        <member name="T:Square.Models.DeleteInvoiceRequest">
            <summary>
            DeleteInvoiceRequest.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteInvoiceRequest.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteInvoiceRequest"/> class.
            </summary>
            <param name="version">version.</param>
        </member>
        <member name="P:Square.Models.DeleteInvoiceRequest.Version">
            <summary>
            The version of the [invoice]($m/Invoice) to delete.
            If you do not know the version, you can call [GetInvoice]($e/Invoices/GetInvoice) or
            [ListInvoices]($e/Invoices/ListInvoices).
            </summary>
        </member>
        <member name="M:Square.Models.DeleteInvoiceRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteInvoiceRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteInvoiceRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteInvoiceRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteInvoiceRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteInvoiceRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteInvoiceRequest.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteInvoiceRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteInvoiceRequest. </returns>
        </member>
        <member name="T:Square.Models.DeleteInvoiceResponse">
            <summary>
            DeleteInvoiceResponse.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteInvoiceResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteInvoiceResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.DeleteInvoiceResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteInvoiceResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteInvoiceResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteInvoiceResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteInvoiceResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteInvoiceResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteInvoiceResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteInvoiceResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteInvoiceResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteInvoiceResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteInvoiceResponse. </returns>
        </member>
        <member name="T:Square.Models.DeleteLoyaltyRewardResponse">
            <summary>
            DeleteLoyaltyRewardResponse.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteLoyaltyRewardResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteLoyaltyRewardResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.DeleteLoyaltyRewardResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteLoyaltyRewardResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteLoyaltyRewardResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteLoyaltyRewardResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteLoyaltyRewardResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteLoyaltyRewardResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteLoyaltyRewardResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteLoyaltyRewardResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteLoyaltyRewardResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteLoyaltyRewardResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteLoyaltyRewardResponse. </returns>
        </member>
        <member name="T:Square.Models.DeleteShiftResponse">
            <summary>
            DeleteShiftResponse.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteShiftResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteShiftResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.DeleteShiftResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteShiftResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteShiftResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteShiftResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteShiftResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteShiftResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteShiftResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteShiftResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteShiftResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteShiftResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteShiftResponse. </returns>
        </member>
        <member name="T:Square.Models.DeleteSnippetResponse">
            <summary>
            DeleteSnippetResponse.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteSnippetResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeleteSnippetResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.DeleteSnippetResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.DeleteSnippetResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteSnippetResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteSnippetResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteSnippetResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeleteSnippetResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeleteSnippetResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeleteSnippetResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeleteSnippetResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeleteSnippetResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeleteSnippetResponse. </returns>
        </member>
        <member name="T:Square.Models.Device">
            <summary>
            Device.
            </summary>
        </member>
        <member name="M:Square.Models.Device.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Device"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="name">name.</param>
        </member>
        <member name="P:Square.Models.Device.Id">
            <summary>
            The device's Square-issued ID.
            </summary>
        </member>
        <member name="P:Square.Models.Device.Name">
            <summary>
            The device's merchant-specified name.
            </summary>
        </member>
        <member name="M:Square.Models.Device.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Device.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Device.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Device.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Device.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Device.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Device.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Device.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Device.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Device. </returns>
        </member>
        <member name="T:Square.Models.DeviceCheckoutOptions">
            <summary>
            DeviceCheckoutOptions.
            </summary>
        </member>
        <member name="M:Square.Models.DeviceCheckoutOptions.#ctor(System.String,System.Nullable{System.Boolean},Square.Models.TipSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeviceCheckoutOptions"/> class.
            </summary>
            <param name="deviceId">device_id.</param>
            <param name="skipReceiptScreen">skip_receipt_screen.</param>
            <param name="tipSettings">tip_settings.</param>
        </member>
        <member name="P:Square.Models.DeviceCheckoutOptions.DeviceId">
            <summary>
            The unique ID of the device intended for this `TerminalCheckout`.
            A list of `DeviceCode` objects can be retrieved from the /v2/devices/codes endpoint.
            Match a `DeviceCode.device_id` value with `device_id` to get the associated device code.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCheckoutOptions.SkipReceiptScreen">
            <summary>
            Instructs the device to skip the receipt screen. Defaults to false.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCheckoutOptions.TipSettings">
            <summary>
            Gets or sets TipSettings.
            </summary>
        </member>
        <member name="M:Square.Models.DeviceCheckoutOptions.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeviceCheckoutOptions.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeviceCheckoutOptions.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeviceCheckoutOptions.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeviceCheckoutOptions.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeviceCheckoutOptions.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeviceCheckoutOptions.Builder.DeviceId(System.String)">
            <summary>
            DeviceId.
            </summary>
            <param name="deviceId"> deviceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCheckoutOptions.Builder.SkipReceiptScreen(System.Nullable{System.Boolean})">
            <summary>
            SkipReceiptScreen.
            </summary>
            <param name="skipReceiptScreen"> skipReceiptScreen. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCheckoutOptions.Builder.TipSettings(Square.Models.TipSettings)">
            <summary>
            TipSettings.
            </summary>
            <param name="tipSettings"> tipSettings. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCheckoutOptions.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeviceCheckoutOptions. </returns>
        </member>
        <member name="T:Square.Models.DeviceCode">
            <summary>
            DeviceCode.
            </summary>
        </member>
        <member name="M:Square.Models.DeviceCode.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeviceCode"/> class.
            </summary>
            <param name="productType">product_type.</param>
            <param name="id">id.</param>
            <param name="name">name.</param>
            <param name="code">code.</param>
            <param name="deviceId">device_id.</param>
            <param name="locationId">location_id.</param>
            <param name="status">status.</param>
            <param name="pairBy">pair_by.</param>
            <param name="createdAt">created_at.</param>
            <param name="statusChangedAt">status_changed_at.</param>
            <param name="pairedAt">paired_at.</param>
        </member>
        <member name="P:Square.Models.DeviceCode.Id">
            <summary>
            The unique id for this device code.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCode.Name">
            <summary>
            An optional user-defined name for the device code.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCode.Code">
            <summary>
            The unique code that can be used to login.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCode.DeviceId">
            <summary>
            The unique id of the device that used this code. Populated when the device is paired up.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCode.ProductType">
            <summary>
            Gets or sets ProductType.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCode.LocationId">
            <summary>
            The location assigned to this code.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCode.Status">
            <summary>
            DeviceCode.Status enum.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCode.PairBy">
            <summary>
            When this DeviceCode will expire and no longer login. Timestamp in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCode.CreatedAt">
            <summary>
            When this DeviceCode was created. Timestamp in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCode.StatusChangedAt">
            <summary>
            When this DeviceCode's status was last changed. Timestamp in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceCode.PairedAt">
            <summary>
            When this DeviceCode was paired. Timestamp in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.DeviceCode.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeviceCode.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeviceCode.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeviceCode.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeviceCode.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeviceCode.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.ProductType(System.String)">
            <summary>
            ProductType.
            </summary>
            <param name="productType"> productType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.Code(System.String)">
            <summary>
            Code.
            </summary>
            <param name="code"> code. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.DeviceId(System.String)">
            <summary>
            DeviceId.
            </summary>
            <param name="deviceId"> deviceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.PairBy(System.String)">
            <summary>
            PairBy.
            </summary>
            <param name="pairBy"> pairBy. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.StatusChangedAt(System.String)">
            <summary>
            StatusChangedAt.
            </summary>
            <param name="statusChangedAt"> statusChangedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.PairedAt(System.String)">
            <summary>
            PairedAt.
            </summary>
            <param name="pairedAt"> pairedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceCode.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeviceCode. </returns>
        </member>
        <member name="T:Square.Models.DeviceDetails">
            <summary>
            DeviceDetails.
            </summary>
        </member>
        <member name="M:Square.Models.DeviceDetails.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DeviceDetails"/> class.
            </summary>
            <param name="deviceId">device_id.</param>
            <param name="deviceInstallationId">device_installation_id.</param>
            <param name="deviceName">device_name.</param>
        </member>
        <member name="P:Square.Models.DeviceDetails.DeviceId">
            <summary>
            The Square-issued ID of the device.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceDetails.DeviceInstallationId">
            <summary>
            The Square-issued installation ID for the device.
            </summary>
        </member>
        <member name="P:Square.Models.DeviceDetails.DeviceName">
            <summary>
            The name of the device set by the seller.
            </summary>
        </member>
        <member name="M:Square.Models.DeviceDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeviceDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeviceDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DeviceDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DeviceDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DeviceDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DeviceDetails.Builder.DeviceId(System.String)">
            <summary>
            DeviceId.
            </summary>
            <param name="deviceId"> deviceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceDetails.Builder.DeviceInstallationId(System.String)">
            <summary>
            DeviceInstallationId.
            </summary>
            <param name="deviceInstallationId"> deviceInstallationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceDetails.Builder.DeviceName(System.String)">
            <summary>
            DeviceName.
            </summary>
            <param name="deviceName"> deviceName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DeviceDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DeviceDetails. </returns>
        </member>
        <member name="T:Square.Models.Dispute">
            <summary>
            Dispute.
            </summary>
        </member>
        <member name="M:Square.Models.Dispute.#ctor(System.String,Square.Models.Money,System.String,System.String,System.String,Square.Models.DisputedPayment,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Dispute"/> class.
            </summary>
            <param name="disputeId">dispute_id.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="reason">reason.</param>
            <param name="state">state.</param>
            <param name="dueAt">due_at.</param>
            <param name="disputedPayment">disputed_payment.</param>
            <param name="evidenceIds">evidence_ids.</param>
            <param name="cardBrand">card_brand.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="brandDisputeId">brand_dispute_id.</param>
            <param name="reportedDate">reported_date.</param>
            <param name="version">version.</param>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.Dispute.DisputeId">
            <summary>
            The unique ID for this `Dispute`, generated by Square.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.Reason">
            <summary>
            The list of possible reasons why a cardholder might initiate a
            dispute with their bank.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.State">
            <summary>
            The list of possible dispute states.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.DueAt">
            <summary>
            The time when the next action is due, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.DisputedPayment">
            <summary>
            The payment the cardholder disputed.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.EvidenceIds">
            <summary>
            The IDs of the evidence associated with the dispute.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.CardBrand">
            <summary>
            Indicates a card's brand, such as `VISA` or `MASTERCARD`.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.CreatedAt">
            <summary>
            The timestamp when the dispute was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.UpdatedAt">
            <summary>
            The timestamp when the dispute was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.BrandDisputeId">
            <summary>
            The ID of the dispute in the card brand system, generated by the card brand.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.ReportedDate">
            <summary>
            The timestamp when the dispute was reported, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.Version">
            <summary>
            The current version of the `Dispute`.
            </summary>
        </member>
        <member name="P:Square.Models.Dispute.LocationId">
            <summary>
            The ID of the location where the dispute originated.
            </summary>
        </member>
        <member name="M:Square.Models.Dispute.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Dispute.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Dispute.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Dispute.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Dispute.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Dispute.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Dispute.Builder.DisputeId(System.String)">
            <summary>
            DisputeId.
            </summary>
            <param name="disputeId"> disputeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.Reason(System.String)">
            <summary>
            Reason.
            </summary>
            <param name="reason"> reason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.DueAt(System.String)">
            <summary>
            DueAt.
            </summary>
            <param name="dueAt"> dueAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.DisputedPayment(Square.Models.DisputedPayment)">
            <summary>
            DisputedPayment.
            </summary>
            <param name="disputedPayment"> disputedPayment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.EvidenceIds(System.Collections.Generic.IList{System.String})">
            <summary>
            EvidenceIds.
            </summary>
            <param name="evidenceIds"> evidenceIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.CardBrand(System.String)">
            <summary>
            CardBrand.
            </summary>
            <param name="cardBrand"> cardBrand. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.BrandDisputeId(System.String)">
            <summary>
            BrandDisputeId.
            </summary>
            <param name="brandDisputeId"> brandDisputeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.ReportedDate(System.String)">
            <summary>
            ReportedDate.
            </summary>
            <param name="reportedDate"> reportedDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Dispute.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Dispute. </returns>
        </member>
        <member name="T:Square.Models.DisputedPayment">
            <summary>
            DisputedPayment.
            </summary>
        </member>
        <member name="M:Square.Models.DisputedPayment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DisputedPayment"/> class.
            </summary>
            <param name="paymentId">payment_id.</param>
        </member>
        <member name="P:Square.Models.DisputedPayment.PaymentId">
            <summary>
            Square-generated unique ID of the payment being disputed.
            </summary>
        </member>
        <member name="M:Square.Models.DisputedPayment.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DisputedPayment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DisputedPayment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DisputedPayment.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DisputedPayment.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DisputedPayment.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DisputedPayment.Builder.PaymentId(System.String)">
            <summary>
            PaymentId.
            </summary>
            <param name="paymentId"> paymentId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DisputedPayment.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DisputedPayment. </returns>
        </member>
        <member name="T:Square.Models.DisputeEvidence">
            <summary>
            DisputeEvidence.
            </summary>
        </member>
        <member name="M:Square.Models.DisputeEvidence.#ctor(System.String,System.String,Square.Models.DisputeEvidenceFile,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DisputeEvidence"/> class.
            </summary>
            <param name="evidenceId">evidence_id.</param>
            <param name="disputeId">dispute_id.</param>
            <param name="evidenceFile">evidence_file.</param>
            <param name="evidenceText">evidence_text.</param>
            <param name="uploadedAt">uploaded_at.</param>
            <param name="evidenceType">evidence_type.</param>
        </member>
        <member name="P:Square.Models.DisputeEvidence.EvidenceId">
            <summary>
            The Square-generated ID of the evidence.
            </summary>
        </member>
        <member name="P:Square.Models.DisputeEvidence.DisputeId">
            <summary>
            The ID of the dispute the evidence is associated with.
            </summary>
        </member>
        <member name="P:Square.Models.DisputeEvidence.EvidenceFile">
            <summary>
            A file to be uploaded as dispute evidence.
            </summary>
        </member>
        <member name="P:Square.Models.DisputeEvidence.EvidenceText">
            <summary>
            Raw text
            </summary>
        </member>
        <member name="P:Square.Models.DisputeEvidence.UploadedAt">
            <summary>
            The time when the next action is due, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.DisputeEvidence.EvidenceType">
            <summary>
            The type of the dispute evidence.
            </summary>
        </member>
        <member name="M:Square.Models.DisputeEvidence.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DisputeEvidence.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DisputeEvidence.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DisputeEvidence.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DisputeEvidence.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DisputeEvidence.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DisputeEvidence.Builder.EvidenceId(System.String)">
            <summary>
            EvidenceId.
            </summary>
            <param name="evidenceId"> evidenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DisputeEvidence.Builder.DisputeId(System.String)">
            <summary>
            DisputeId.
            </summary>
            <param name="disputeId"> disputeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DisputeEvidence.Builder.EvidenceFile(Square.Models.DisputeEvidenceFile)">
            <summary>
            EvidenceFile.
            </summary>
            <param name="evidenceFile"> evidenceFile. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DisputeEvidence.Builder.EvidenceText(System.String)">
            <summary>
            EvidenceText.
            </summary>
            <param name="evidenceText"> evidenceText. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DisputeEvidence.Builder.UploadedAt(System.String)">
            <summary>
            UploadedAt.
            </summary>
            <param name="uploadedAt"> uploadedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DisputeEvidence.Builder.EvidenceType(System.String)">
            <summary>
            EvidenceType.
            </summary>
            <param name="evidenceType"> evidenceType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DisputeEvidence.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DisputeEvidence. </returns>
        </member>
        <member name="T:Square.Models.DisputeEvidenceFile">
            <summary>
            DisputeEvidenceFile.
            </summary>
        </member>
        <member name="M:Square.Models.DisputeEvidenceFile.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.DisputeEvidenceFile"/> class.
            </summary>
            <param name="filename">filename.</param>
            <param name="filetype">filetype.</param>
        </member>
        <member name="P:Square.Models.DisputeEvidenceFile.Filename">
            <summary>
            The file name including the file extension. For example: "receipt.tiff".
            </summary>
        </member>
        <member name="P:Square.Models.DisputeEvidenceFile.Filetype">
            <summary>
            Dispute evidence files must be application/pdf, image/heic, image/heif, image/jpeg, image/png, or image/tiff formats.
            </summary>
        </member>
        <member name="M:Square.Models.DisputeEvidenceFile.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DisputeEvidenceFile.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DisputeEvidenceFile.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.DisputeEvidenceFile.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.DisputeEvidenceFile.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.DisputeEvidenceFile.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.DisputeEvidenceFile.Builder.Filename(System.String)">
            <summary>
            Filename.
            </summary>
            <param name="filename"> filename. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DisputeEvidenceFile.Builder.Filetype(System.String)">
            <summary>
            Filetype.
            </summary>
            <param name="filetype"> filetype. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.DisputeEvidenceFile.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> DisputeEvidenceFile. </returns>
        </member>
        <member name="T:Square.Models.Employee">
            <summary>
            Employee.
            </summary>
        </member>
        <member name="M:Square.Models.Employee.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Employee"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="firstName">first_name.</param>
            <param name="lastName">last_name.</param>
            <param name="email">email.</param>
            <param name="phoneNumber">phone_number.</param>
            <param name="locationIds">location_ids.</param>
            <param name="status">status.</param>
            <param name="isOwner">is_owner.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.Employee.Id">
            <summary>
            UUID for this object.
            </summary>
        </member>
        <member name="P:Square.Models.Employee.FirstName">
            <summary>
            The employee's first name.
            </summary>
        </member>
        <member name="P:Square.Models.Employee.LastName">
            <summary>
            The employee's last name.
            </summary>
        </member>
        <member name="P:Square.Models.Employee.Email">
            <summary>
            The employee's email address
            </summary>
        </member>
        <member name="P:Square.Models.Employee.PhoneNumber">
            <summary>
            The employee's phone number in E.164 format, i.e. "+12125554250"
            </summary>
        </member>
        <member name="P:Square.Models.Employee.LocationIds">
            <summary>
            A list of location IDs where this employee has access to.
            </summary>
        </member>
        <member name="P:Square.Models.Employee.Status">
            <summary>
            The status of the Employee being retrieved.
            </summary>
        </member>
        <member name="P:Square.Models.Employee.IsOwner">
            <summary>
            Whether this employee is the owner of the merchant. Each merchant
            has one owner employee, and that employee has full authority over
            the account.
            </summary>
        </member>
        <member name="P:Square.Models.Employee.CreatedAt">
            <summary>
            A read-only timestamp in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Employee.UpdatedAt">
            <summary>
            A read-only timestamp in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.Employee.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Employee.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Employee.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Employee.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Employee.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Employee.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Employee.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Employee.Builder.FirstName(System.String)">
            <summary>
            FirstName.
            </summary>
            <param name="firstName"> firstName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Employee.Builder.LastName(System.String)">
            <summary>
            LastName.
            </summary>
            <param name="lastName"> lastName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Employee.Builder.Email(System.String)">
            <summary>
            Email.
            </summary>
            <param name="email"> email. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Employee.Builder.PhoneNumber(System.String)">
            <summary>
            PhoneNumber.
            </summary>
            <param name="phoneNumber"> phoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Employee.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Employee.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Employee.Builder.IsOwner(System.Nullable{System.Boolean})">
            <summary>
            IsOwner.
            </summary>
            <param name="isOwner"> isOwner. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Employee.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Employee.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Employee.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Employee. </returns>
        </member>
        <member name="T:Square.Models.EmployeeWage">
            <summary>
            EmployeeWage.
            </summary>
        </member>
        <member name="M:Square.Models.EmployeeWage.#ctor(System.String,System.String,System.String,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.EmployeeWage"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="employeeId">employee_id.</param>
            <param name="title">title.</param>
            <param name="hourlyRate">hourly_rate.</param>
        </member>
        <member name="P:Square.Models.EmployeeWage.Id">
            <summary>
            UUID for this object.
            </summary>
        </member>
        <member name="P:Square.Models.EmployeeWage.EmployeeId">
            <summary>
            The `Employee` that this wage is assigned to.
            </summary>
        </member>
        <member name="P:Square.Models.EmployeeWage.Title">
            <summary>
            The job title that this wage relates to.
            </summary>
        </member>
        <member name="P:Square.Models.EmployeeWage.HourlyRate">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.EmployeeWage.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.EmployeeWage.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.EmployeeWage.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.EmployeeWage.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.EmployeeWage.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.EmployeeWage.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.EmployeeWage.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.EmployeeWage.Builder.EmployeeId(System.String)">
            <summary>
            EmployeeId.
            </summary>
            <param name="employeeId"> employeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.EmployeeWage.Builder.Title(System.String)">
            <summary>
            Title.
            </summary>
            <param name="title"> title. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.EmployeeWage.Builder.HourlyRate(Square.Models.Money)">
            <summary>
            HourlyRate.
            </summary>
            <param name="hourlyRate"> hourlyRate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.EmployeeWage.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> EmployeeWage. </returns>
        </member>
        <member name="T:Square.Models.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="M:Square.Models.Error.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Error"/> class.
            </summary>
            <param name="category">category.</param>
            <param name="code">code.</param>
            <param name="detail">detail.</param>
            <param name="field">field.</param>
        </member>
        <member name="P:Square.Models.Error.Category">
            <summary>
            Indicates which high-level category of error has occurred during a
            request to the Connect API.
            </summary>
        </member>
        <member name="P:Square.Models.Error.Code">
            <summary>
            Indicates the specific error that occurred during a request to a
            Square API.
            </summary>
        </member>
        <member name="P:Square.Models.Error.Detail">
            <summary>
            A human-readable description of the error for debugging purposes.
            </summary>
        </member>
        <member name="P:Square.Models.Error.Field">
            <summary>
            The name of the field provided in the original request (if any) that
            the error pertains to.
            </summary>
        </member>
        <member name="M:Square.Models.Error.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Error.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Error.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Error.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Error.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Error.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Error.Builder.Category(System.String)">
            <summary>
            Category.
            </summary>
            <param name="category"> category. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Error.Builder.Code(System.String)">
            <summary>
            Code.
            </summary>
            <param name="code"> code. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Error.Builder.Detail(System.String)">
            <summary>
            Detail.
            </summary>
            <param name="detail"> detail. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Error.Builder.Field(System.String)">
            <summary>
            Field.
            </summary>
            <param name="field"> field. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Error.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Error. </returns>
        </member>
        <member name="T:Square.Models.ExternalPaymentDetails">
            <summary>
            ExternalPaymentDetails.
            </summary>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.#ctor(System.String,System.String,System.String,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ExternalPaymentDetails"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="source">source.</param>
            <param name="sourceId">source_id.</param>
            <param name="sourceFeeMoney">source_fee_money.</param>
        </member>
        <member name="P:Square.Models.ExternalPaymentDetails.Type">
            <summary>
            The type of external payment the seller received. It can be one of the following:
            - CHECK - Paid using a physical check.
            - BANK_TRANSFER - Paid using external bank transfer.
            - OTHER\_GIFT\_CARD - Paid using a non-Square gift card.
            - CRYPTO - Paid using a crypto currency.
            - SQUARE_CASH - Paid using Square Cash App.
            - SOCIAL - Paid using peer-to-peer payment applications.
            - EXTERNAL - A third-party application gathered this payment outside of Square.
            - EMONEY - Paid using an E-money provider.
            - CARD - A credit or debit card that Square does not support.
            - STORED_BALANCE - Use for house accounts, store credit, and so forth.
            - OTHER - A type not listed here.
            </summary>
        </member>
        <member name="P:Square.Models.ExternalPaymentDetails.Source">
            <summary>
            A description of the external payment source. For example,
            "Food Delivery Service".
            </summary>
        </member>
        <member name="P:Square.Models.ExternalPaymentDetails.SourceId">
            <summary>
            An ID to associate the payment to its originating source.
            </summary>
        </member>
        <member name="P:Square.Models.ExternalPaymentDetails.SourceFeeMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ExternalPaymentDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.Builder.Source(System.String)">
            <summary>
            Source.
            </summary>
            <param name="source"> source. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.Builder.SourceId(System.String)">
            <summary>
            SourceId.
            </summary>
            <param name="sourceId"> sourceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.Builder.SourceFeeMoney(Square.Models.Money)">
            <summary>
            SourceFeeMoney.
            </summary>
            <param name="sourceFeeMoney"> sourceFeeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ExternalPaymentDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ExternalPaymentDetails. </returns>
        </member>
        <member name="T:Square.Models.FilterValue">
            <summary>
            FilterValue.
            </summary>
        </member>
        <member name="M:Square.Models.FilterValue.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.FilterValue"/> class.
            </summary>
            <param name="all">all.</param>
            <param name="any">any.</param>
            <param name="none">none.</param>
        </member>
        <member name="P:Square.Models.FilterValue.All">
            <summary>
            A list of terms that must be present on the field of the resource.
            </summary>
        </member>
        <member name="P:Square.Models.FilterValue.Any">
            <summary>
            A list of terms where at least one of them must be present on the
            field of the resource.
            </summary>
        </member>
        <member name="P:Square.Models.FilterValue.None">
            <summary>
            A list of terms that must not be present on the field the resource
            </summary>
        </member>
        <member name="M:Square.Models.FilterValue.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.FilterValue.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.FilterValue.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.FilterValue.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.FilterValue.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.FilterValue.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.FilterValue.Builder.All(System.Collections.Generic.IList{System.String})">
            <summary>
            All.
            </summary>
            <param name="all"> all. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.FilterValue.Builder.Any(System.Collections.Generic.IList{System.String})">
            <summary>
            Any.
            </summary>
            <param name="any"> any. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.FilterValue.Builder.None(System.Collections.Generic.IList{System.String})">
            <summary>
            None.
            </summary>
            <param name="none"> none. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.FilterValue.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> FilterValue. </returns>
        </member>
        <member name="T:Square.Models.GetBankAccountByV1IdResponse">
            <summary>
            GetBankAccountByV1IdResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetBankAccountByV1IdResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.BankAccount)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetBankAccountByV1IdResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="bankAccount">bank_account.</param>
        </member>
        <member name="P:Square.Models.GetBankAccountByV1IdResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetBankAccountByV1IdResponse.Errors">
            <summary>
            Information on errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.GetBankAccountByV1IdResponse.BankAccount">
            <summary>
            Represents a bank account. For more information about
            linking a bank account to a Square account, see
            [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
            </summary>
        </member>
        <member name="M:Square.Models.GetBankAccountByV1IdResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetBankAccountByV1IdResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetBankAccountByV1IdResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetBankAccountByV1IdResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetBankAccountByV1IdResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetBankAccountByV1IdResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetBankAccountByV1IdResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetBankAccountByV1IdResponse.Builder.BankAccount(Square.Models.BankAccount)">
            <summary>
            BankAccount.
            </summary>
            <param name="bankAccount"> bankAccount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetBankAccountByV1IdResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetBankAccountByV1IdResponse. </returns>
        </member>
        <member name="T:Square.Models.GetBankAccountResponse">
            <summary>
            GetBankAccountResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetBankAccountResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.BankAccount)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetBankAccountResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="bankAccount">bank_account.</param>
        </member>
        <member name="P:Square.Models.GetBankAccountResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetBankAccountResponse.Errors">
            <summary>
            Information on errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.GetBankAccountResponse.BankAccount">
            <summary>
            Represents a bank account. For more information about
            linking a bank account to a Square account, see
            [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
            </summary>
        </member>
        <member name="M:Square.Models.GetBankAccountResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetBankAccountResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetBankAccountResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetBankAccountResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetBankAccountResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetBankAccountResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetBankAccountResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetBankAccountResponse.Builder.BankAccount(Square.Models.BankAccount)">
            <summary>
            BankAccount.
            </summary>
            <param name="bankAccount"> bankAccount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetBankAccountResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetBankAccountResponse. </returns>
        </member>
        <member name="T:Square.Models.GetBreakTypeResponse">
            <summary>
            GetBreakTypeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetBreakTypeResponse.#ctor(Square.Models.BreakType,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetBreakTypeResponse"/> class.
            </summary>
            <param name="breakType">break_type.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.GetBreakTypeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetBreakTypeResponse.BreakType">
            <summary>
            A defined break template that sets an expectation for possible `Break`
            instances on a `Shift`.
            </summary>
        </member>
        <member name="P:Square.Models.GetBreakTypeResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.GetBreakTypeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetBreakTypeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetBreakTypeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetBreakTypeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetBreakTypeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetBreakTypeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetBreakTypeResponse.Builder.BreakType(Square.Models.BreakType)">
            <summary>
            BreakType.
            </summary>
            <param name="breakType"> breakType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetBreakTypeResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetBreakTypeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetBreakTypeResponse. </returns>
        </member>
        <member name="T:Square.Models.GetDeviceCodeResponse">
            <summary>
            GetDeviceCodeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetDeviceCodeResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.DeviceCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetDeviceCodeResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="deviceCode">device_code.</param>
        </member>
        <member name="P:Square.Models.GetDeviceCodeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetDeviceCodeResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.GetDeviceCodeResponse.DeviceCode">
            <summary>
            Gets or sets DeviceCode.
            </summary>
        </member>
        <member name="M:Square.Models.GetDeviceCodeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetDeviceCodeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetDeviceCodeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetDeviceCodeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetDeviceCodeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetDeviceCodeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetDeviceCodeResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetDeviceCodeResponse.Builder.DeviceCode(Square.Models.DeviceCode)">
            <summary>
            DeviceCode.
            </summary>
            <param name="deviceCode"> deviceCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetDeviceCodeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetDeviceCodeResponse. </returns>
        </member>
        <member name="T:Square.Models.GetEmployeeWageResponse">
            <summary>
            GetEmployeeWageResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetEmployeeWageResponse.#ctor(Square.Models.EmployeeWage,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetEmployeeWageResponse"/> class.
            </summary>
            <param name="employeeWage">employee_wage.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.GetEmployeeWageResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetEmployeeWageResponse.EmployeeWage">
            <summary>
            The hourly wage rate that an employee will earn on a `Shift` for doing the job
            specified by the `title` property of this object. Deprecated at version 2020-08-26. Use `TeamMemberWage` instead.
            </summary>
        </member>
        <member name="P:Square.Models.GetEmployeeWageResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.GetEmployeeWageResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetEmployeeWageResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetEmployeeWageResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetEmployeeWageResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetEmployeeWageResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetEmployeeWageResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetEmployeeWageResponse.Builder.EmployeeWage(Square.Models.EmployeeWage)">
            <summary>
            EmployeeWage.
            </summary>
            <param name="employeeWage"> employeeWage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetEmployeeWageResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetEmployeeWageResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetEmployeeWageResponse. </returns>
        </member>
        <member name="T:Square.Models.GetInvoiceResponse">
            <summary>
            GetInvoiceResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetInvoiceResponse.#ctor(Square.Models.Invoice,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetInvoiceResponse"/> class.
            </summary>
            <param name="invoice">invoice.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.GetInvoiceResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetInvoiceResponse.Invoice">
            <summary>
            Stores information about an invoice. You use the Invoices API to create and manage
            invoices. For more information, see [Manage Invoices Using the Invoices API](https://developer.squareup.com/docs/invoices-api/overview).
            </summary>
        </member>
        <member name="P:Square.Models.GetInvoiceResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.GetInvoiceResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetInvoiceResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetInvoiceResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetInvoiceResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetInvoiceResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetInvoiceResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetInvoiceResponse.Builder.Invoice(Square.Models.Invoice)">
            <summary>
            Invoice.
            </summary>
            <param name="invoice"> invoice. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetInvoiceResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetInvoiceResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetInvoiceResponse. </returns>
        </member>
        <member name="T:Square.Models.GetPaymentRefundResponse">
            <summary>
            GetPaymentRefundResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetPaymentRefundResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.PaymentRefund)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetPaymentRefundResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="refund">refund.</param>
        </member>
        <member name="P:Square.Models.GetPaymentRefundResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetPaymentRefundResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.GetPaymentRefundResponse.Refund">
            <summary>
            Represents a refund of a payment made using Square. Contains information about
            the original payment and the amount of money refunded.
            </summary>
        </member>
        <member name="M:Square.Models.GetPaymentRefundResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetPaymentRefundResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetPaymentRefundResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetPaymentRefundResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetPaymentRefundResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetPaymentRefundResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetPaymentRefundResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetPaymentRefundResponse.Builder.Refund(Square.Models.PaymentRefund)">
            <summary>
            Refund.
            </summary>
            <param name="refund"> refund. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetPaymentRefundResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetPaymentRefundResponse. </returns>
        </member>
        <member name="T:Square.Models.GetPaymentResponse">
            <summary>
            GetPaymentResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetPaymentResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Payment)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetPaymentResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="payment">payment.</param>
        </member>
        <member name="P:Square.Models.GetPaymentResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetPaymentResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.GetPaymentResponse.Payment">
            <summary>
            Represents a payment processed by the Square API.
            </summary>
        </member>
        <member name="M:Square.Models.GetPaymentResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetPaymentResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetPaymentResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetPaymentResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetPaymentResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetPaymentResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetPaymentResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetPaymentResponse.Builder.Payment(Square.Models.Payment)">
            <summary>
            Payment.
            </summary>
            <param name="payment"> payment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetPaymentResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetPaymentResponse. </returns>
        </member>
        <member name="T:Square.Models.GetShiftResponse">
            <summary>
            GetShiftResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetShiftResponse.#ctor(Square.Models.Shift,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetShiftResponse"/> class.
            </summary>
            <param name="shift">shift.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.GetShiftResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetShiftResponse.Shift">
            <summary>
            A record of the hourly rate, start, and end times for a single work shift
            for an employee. May include a record of the start and end times for breaks
            taken during the shift.
            </summary>
        </member>
        <member name="P:Square.Models.GetShiftResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.GetShiftResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetShiftResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetShiftResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetShiftResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetShiftResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetShiftResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetShiftResponse.Builder.Shift(Square.Models.Shift)">
            <summary>
            Shift.
            </summary>
            <param name="shift"> shift. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetShiftResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetShiftResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetShiftResponse. </returns>
        </member>
        <member name="T:Square.Models.GetTeamMemberWageResponse">
            <summary>
            GetTeamMemberWageResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetTeamMemberWageResponse.#ctor(Square.Models.TeamMemberWage,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetTeamMemberWageResponse"/> class.
            </summary>
            <param name="teamMemberWage">team_member_wage.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.GetTeamMemberWageResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetTeamMemberWageResponse.TeamMemberWage">
            <summary>
            The hourly wage rate that a team member will earn on a `Shift` for doing the job
            specified by the `title` property of this object.
            </summary>
        </member>
        <member name="P:Square.Models.GetTeamMemberWageResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.GetTeamMemberWageResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetTeamMemberWageResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetTeamMemberWageResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetTeamMemberWageResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetTeamMemberWageResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetTeamMemberWageResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetTeamMemberWageResponse.Builder.TeamMemberWage(Square.Models.TeamMemberWage)">
            <summary>
            TeamMemberWage.
            </summary>
            <param name="teamMemberWage"> teamMemberWage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetTeamMemberWageResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetTeamMemberWageResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetTeamMemberWageResponse. </returns>
        </member>
        <member name="T:Square.Models.GetTerminalCheckoutResponse">
            <summary>
            GetTerminalCheckoutResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetTerminalCheckoutResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.TerminalCheckout)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetTerminalCheckoutResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="checkout">checkout.</param>
        </member>
        <member name="P:Square.Models.GetTerminalCheckoutResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetTerminalCheckoutResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.GetTerminalCheckoutResponse.Checkout">
            <summary>
            Gets or sets Checkout.
            </summary>
        </member>
        <member name="M:Square.Models.GetTerminalCheckoutResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetTerminalCheckoutResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetTerminalCheckoutResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetTerminalCheckoutResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetTerminalCheckoutResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetTerminalCheckoutResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetTerminalCheckoutResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetTerminalCheckoutResponse.Builder.Checkout(Square.Models.TerminalCheckout)">
            <summary>
            Checkout.
            </summary>
            <param name="checkout"> checkout. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetTerminalCheckoutResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetTerminalCheckoutResponse. </returns>
        </member>
        <member name="T:Square.Models.GetTerminalRefundResponse">
            <summary>
            GetTerminalRefundResponse.
            </summary>
        </member>
        <member name="M:Square.Models.GetTerminalRefundResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.TerminalRefund)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.GetTerminalRefundResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="refund">refund.</param>
        </member>
        <member name="P:Square.Models.GetTerminalRefundResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.GetTerminalRefundResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.GetTerminalRefundResponse.Refund">
            <summary>
            Gets or sets Refund.
            </summary>
        </member>
        <member name="M:Square.Models.GetTerminalRefundResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetTerminalRefundResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetTerminalRefundResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.GetTerminalRefundResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.GetTerminalRefundResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.GetTerminalRefundResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.GetTerminalRefundResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetTerminalRefundResponse.Builder.Refund(Square.Models.TerminalRefund)">
            <summary>
            Refund.
            </summary>
            <param name="refund"> refund. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.GetTerminalRefundResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> GetTerminalRefundResponse. </returns>
        </member>
        <member name="T:Square.Models.InventoryAdjustment">
            <summary>
            InventoryAdjustment.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.Money,System.String,System.String,Square.Models.SourceApplication,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InventoryAdjustment"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="referenceId">reference_id.</param>
            <param name="fromState">from_state.</param>
            <param name="toState">to_state.</param>
            <param name="locationId">location_id.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="catalogObjectType">catalog_object_type.</param>
            <param name="quantity">quantity.</param>
            <param name="totalPriceMoney">total_price_money.</param>
            <param name="occurredAt">occurred_at.</param>
            <param name="createdAt">created_at.</param>
            <param name="source">source.</param>
            <param name="employeeId">employee_id.</param>
            <param name="transactionId">transaction_id.</param>
            <param name="refundId">refund_id.</param>
            <param name="purchaseOrderId">purchase_order_id.</param>
            <param name="goodsReceiptId">goods_receipt_id.</param>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.Id">
            <summary>
            A unique ID generated by Square for the
            `InventoryAdjustment`.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.ReferenceId">
            <summary>
            An optional ID provided by the application to tie the
            `InventoryAdjustment` to an external
            system.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.FromState">
            <summary>
            Indicates the state of a tracked item quantity in the lifecycle of goods.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.ToState">
            <summary>
            Indicates the state of a tracked item quantity in the lifecycle of goods.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.LocationId">
            <summary>
            The Square-generated ID of the [Location]($m/Location) where the related
            quantity of items is being tracked.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.CatalogObjectId">
            <summary>
            The Square-generated ID of the
            [CatalogObject]($m/CatalogObject) being tracked.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.CatalogObjectType">
            <summary>
            The [type](entity:CatalogObjectType] of the
            [CatalogObject]($m/CatalogObject) being tracked. Tracking is only
            supported for the `ITEM_VARIATION` type.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.Quantity">
            <summary>
            The number of items affected by the adjustment as a decimal string.
            Can support up to 5 digits after the decimal point.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.TotalPriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.OccurredAt">
            <summary>
            A client-generated RFC 3339-formatted timestamp that indicates when
            the inventory adjustment took place. For inventory adjustment updates, the `occurred_at`
            timestamp cannot be older than 24 hours or in the future relative to the
            time of the request.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.CreatedAt">
            <summary>
            An RFC 3339-formatted timestamp that indicates when the inventory adjustment is received.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.Source">
            <summary>
            Provides information about the application used to generate a change.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.EmployeeId">
            <summary>
            The Square-generated ID of the [Employee]($m/Employee) responsible for the
            inventory adjustment.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.TransactionId">
            <summary>
            The Square-generated ID of the [Transaction][#type-transaction] that
            caused the adjustment. Only relevant for payment-related state
            transitions.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.RefundId">
            <summary>
            The Square-generated ID of the [Refund][#type-refund] that
            caused the adjustment. Only relevant for refund-related state
            transitions.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.PurchaseOrderId">
            <summary>
            The Square-generated ID of the purchase order that caused the
            adjustment. Only relevant for state transitions from the Square for Retail
            app.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryAdjustment.GoodsReceiptId">
            <summary>
            The Square-generated ID of the goods receipt that caused the
            adjustment. Only relevant for state transitions from the Square for Retail
            app.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InventoryAdjustment.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.FromState(System.String)">
            <summary>
            FromState.
            </summary>
            <param name="fromState"> fromState. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.ToState(System.String)">
            <summary>
            ToState.
            </summary>
            <param name="toState"> toState. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.CatalogObjectType(System.String)">
            <summary>
            CatalogObjectType.
            </summary>
            <param name="catalogObjectType"> catalogObjectType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.Quantity(System.String)">
            <summary>
            Quantity.
            </summary>
            <param name="quantity"> quantity. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.TotalPriceMoney(Square.Models.Money)">
            <summary>
            TotalPriceMoney.
            </summary>
            <param name="totalPriceMoney"> totalPriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.OccurredAt(System.String)">
            <summary>
            OccurredAt.
            </summary>
            <param name="occurredAt"> occurredAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.Source(Square.Models.SourceApplication)">
            <summary>
            Source.
            </summary>
            <param name="source"> source. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.EmployeeId(System.String)">
            <summary>
            EmployeeId.
            </summary>
            <param name="employeeId"> employeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.TransactionId(System.String)">
            <summary>
            TransactionId.
            </summary>
            <param name="transactionId"> transactionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.RefundId(System.String)">
            <summary>
            RefundId.
            </summary>
            <param name="refundId"> refundId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.PurchaseOrderId(System.String)">
            <summary>
            PurchaseOrderId.
            </summary>
            <param name="purchaseOrderId"> purchaseOrderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.GoodsReceiptId(System.String)">
            <summary>
            GoodsReceiptId.
            </summary>
            <param name="goodsReceiptId"> goodsReceiptId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryAdjustment.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InventoryAdjustment. </returns>
        </member>
        <member name="T:Square.Models.InventoryChange">
            <summary>
            InventoryChange.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryChange.#ctor(System.String,Square.Models.InventoryPhysicalCount,Square.Models.InventoryAdjustment,Square.Models.InventoryTransfer,Square.Models.CatalogMeasurementUnit,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InventoryChange"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="physicalCount">physical_count.</param>
            <param name="adjustment">adjustment.</param>
            <param name="transfer">transfer.</param>
            <param name="measurementUnit">measurement_unit.</param>
            <param name="measurementUnitId">measurement_unit_id.</param>
        </member>
        <member name="P:Square.Models.InventoryChange.Type">
            <summary>
            Indicates how the inventory change was applied to a tracked quantity of items.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryChange.PhysicalCount">
            <summary>
            Represents the quantity of an item variation that is physically present
            at a specific location, verified by a seller or a seller's employee. For example,
            a physical count might come from an employee counting the item variations on
            hand or from syncing with an external system.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryChange.Adjustment">
            <summary>
            Represents a change in state or quantity of product inventory at a
            particular time and location.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryChange.Transfer">
            <summary>
            Represents the transfer of a quantity of product inventory at a
            particular time from one location to another.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryChange.MeasurementUnit">
            <summary>
            Represents the unit used to measure a `CatalogItemVariation` and
            specifies the precision for decimal quantities.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryChange.MeasurementUnitId">
            <summary>
            The ID of the [CatalogMeasurementUnit]($m/CatalogMeasurementUnit) object representing the catalog measurement unit associated with the inventory change.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryChange.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryChange.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryChange.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryChange.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InventoryChange.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InventoryChange.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryChange.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryChange.Builder.PhysicalCount(Square.Models.InventoryPhysicalCount)">
            <summary>
            PhysicalCount.
            </summary>
            <param name="physicalCount"> physicalCount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryChange.Builder.Adjustment(Square.Models.InventoryAdjustment)">
            <summary>
            Adjustment.
            </summary>
            <param name="adjustment"> adjustment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryChange.Builder.Transfer(Square.Models.InventoryTransfer)">
            <summary>
            Transfer.
            </summary>
            <param name="transfer"> transfer. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryChange.Builder.MeasurementUnit(Square.Models.CatalogMeasurementUnit)">
            <summary>
            MeasurementUnit.
            </summary>
            <param name="measurementUnit"> measurementUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryChange.Builder.MeasurementUnitId(System.String)">
            <summary>
            MeasurementUnitId.
            </summary>
            <param name="measurementUnitId"> measurementUnitId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryChange.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InventoryChange. </returns>
        </member>
        <member name="T:Square.Models.InventoryCount">
            <summary>
            InventoryCount.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryCount.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InventoryCount"/> class.
            </summary>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="catalogObjectType">catalog_object_type.</param>
            <param name="state">state.</param>
            <param name="locationId">location_id.</param>
            <param name="quantity">quantity.</param>
            <param name="calculatedAt">calculated_at.</param>
        </member>
        <member name="P:Square.Models.InventoryCount.CatalogObjectId">
            <summary>
            The Square-generated ID of the
            [CatalogObject]($m/CatalogObject) being tracked.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryCount.CatalogObjectType">
            <summary>
            The [type]($m/CatalogObjectType) of the
            [CatalogObject]($m/CatalogObject) being tracked. Tracking is only
            supported for the `ITEM_VARIATION` type.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryCount.State">
            <summary>
            Indicates the state of a tracked item quantity in the lifecycle of goods.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryCount.LocationId">
            <summary>
            The Square-generated ID of the [Location]($m/Location) where the related
            quantity of items is being tracked.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryCount.Quantity">
            <summary>
            The number of items affected by the estimated count as a decimal string.
            Can support up to 5 digits after the decimal point.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryCount.CalculatedAt">
            <summary>
            An RFC 3339-formatted timestamp that indicates when the most recent physical count or adjustment affecting
            the estimated count is received.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryCount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryCount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryCount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryCount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InventoryCount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InventoryCount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryCount.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryCount.Builder.CatalogObjectType(System.String)">
            <summary>
            CatalogObjectType.
            </summary>
            <param name="catalogObjectType"> catalogObjectType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryCount.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryCount.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryCount.Builder.Quantity(System.String)">
            <summary>
            Quantity.
            </summary>
            <param name="quantity"> quantity. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryCount.Builder.CalculatedAt(System.String)">
            <summary>
            CalculatedAt.
            </summary>
            <param name="calculatedAt"> calculatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryCount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InventoryCount. </returns>
        </member>
        <member name="T:Square.Models.InventoryPhysicalCount">
            <summary>
            InventoryPhysicalCount.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.SourceApplication,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InventoryPhysicalCount"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="referenceId">reference_id.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="catalogObjectType">catalog_object_type.</param>
            <param name="state">state.</param>
            <param name="locationId">location_id.</param>
            <param name="quantity">quantity.</param>
            <param name="source">source.</param>
            <param name="employeeId">employee_id.</param>
            <param name="occurredAt">occurred_at.</param>
            <param name="createdAt">created_at.</param>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.Id">
            <summary>
            A unique Square-generated ID for the
            [InventoryPhysicalCount]($m/InventoryPhysicalCount).
            </summary>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.ReferenceId">
            <summary>
            An optional ID provided by the application to tie the
            [InventoryPhysicalCount]($m/InventoryPhysicalCount) to an external
            system.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.CatalogObjectId">
            <summary>
            The Square-generated ID of the
            [CatalogObject]($m/CatalogObject) being tracked.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.CatalogObjectType">
            <summary>
            The [type]($m/CatalogObjectType) of the
            [CatalogObject]($m/CatalogObject) being tracked. Tracking is only
            supported for the `ITEM_VARIATION` type.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.State">
            <summary>
            Indicates the state of a tracked item quantity in the lifecycle of goods.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.LocationId">
            <summary>
            The Square-generated ID of the [Location]($m/Location) where the related
            quantity of items is being tracked.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.Quantity">
            <summary>
            The number of items affected by the physical count as a decimal string.
            The number can support up to 5 digits after the decimal point.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.Source">
            <summary>
            Provides information about the application used to generate a change.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.EmployeeId">
            <summary>
            The Square-generated ID of the [Employee]($m/Employee) responsible for the
            physical count.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.OccurredAt">
            <summary>
            A client-generated RFC 3339-formatted timestamp that indicates when
            the physical count was examined. For physical count updates, the `occurred_at`
            timestamp cannot be older than 24 hours or in the future relative to the
            time of the request.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryPhysicalCount.CreatedAt">
            <summary>
            An RFC 3339-formatted timestamp that indicates when the physical count is received.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InventoryPhysicalCount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.CatalogObjectType(System.String)">
            <summary>
            CatalogObjectType.
            </summary>
            <param name="catalogObjectType"> catalogObjectType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.Quantity(System.String)">
            <summary>
            Quantity.
            </summary>
            <param name="quantity"> quantity. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.Source(Square.Models.SourceApplication)">
            <summary>
            Source.
            </summary>
            <param name="source"> source. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.EmployeeId(System.String)">
            <summary>
            EmployeeId.
            </summary>
            <param name="employeeId"> employeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.OccurredAt(System.String)">
            <summary>
            OccurredAt.
            </summary>
            <param name="occurredAt"> occurredAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryPhysicalCount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InventoryPhysicalCount. </returns>
        </member>
        <member name="T:Square.Models.InventoryTransfer">
            <summary>
            InventoryTransfer.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryTransfer.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.SourceApplication,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InventoryTransfer"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="referenceId">reference_id.</param>
            <param name="state">state.</param>
            <param name="fromLocationId">from_location_id.</param>
            <param name="toLocationId">to_location_id.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="catalogObjectType">catalog_object_type.</param>
            <param name="quantity">quantity.</param>
            <param name="occurredAt">occurred_at.</param>
            <param name="createdAt">created_at.</param>
            <param name="source">source.</param>
            <param name="employeeId">employee_id.</param>
        </member>
        <member name="P:Square.Models.InventoryTransfer.Id">
            <summary>
            A unique ID generated by Square for the
            `InventoryTransfer`.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.ReferenceId">
            <summary>
            An optional ID provided by the application to tie the
            `InventoryTransfer` to an external system.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.State">
            <summary>
            Indicates the state of a tracked item quantity in the lifecycle of goods.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.FromLocationId">
            <summary>
            The Square-generated ID of the [Location]($m/Location) where the related
            quantity of items was tracked before the transfer.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.ToLocationId">
            <summary>
            The Square-generated ID of the [Location]($m/Location) where the related
            quantity of items was tracked after the transfer.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.CatalogObjectId">
            <summary>
            The Square-generated ID of the
            [CatalogObject]($m/CatalogObject) being tracked.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.CatalogObjectType">
            <summary>
            The [type]($m/CatalogObjectType) of the
            [CatalogObject]($m/CatalogObject) being tracked.Tracking is only
            supported for the `ITEM_VARIATION` type.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.Quantity">
            <summary>
            The number of items affected by the transfer as a decimal string.
            Can support up to 5 digits after the decimal point.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.OccurredAt">
            <summary>
            A client-generated RFC 3339-formatted timestamp that indicates when
            the transfer took place. For write actions, the `occurred_at` timestamp
            cannot be older than 24 hours or in the future relative to the time of the
            request.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.CreatedAt">
            <summary>
            An RFC 3339-formatted timestamp that indicates when Square
            received the transfer request.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.Source">
            <summary>
            Provides information about the application used to generate a change.
            </summary>
        </member>
        <member name="P:Square.Models.InventoryTransfer.EmployeeId">
            <summary>
            The Square-generated ID of the [Employee]($m/Employee) responsible for the
            inventory transfer.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryTransfer.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryTransfer.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InventoryTransfer.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InventoryTransfer.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InventoryTransfer.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.FromLocationId(System.String)">
            <summary>
            FromLocationId.
            </summary>
            <param name="fromLocationId"> fromLocationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.ToLocationId(System.String)">
            <summary>
            ToLocationId.
            </summary>
            <param name="toLocationId"> toLocationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.CatalogObjectType(System.String)">
            <summary>
            CatalogObjectType.
            </summary>
            <param name="catalogObjectType"> catalogObjectType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.Quantity(System.String)">
            <summary>
            Quantity.
            </summary>
            <param name="quantity"> quantity. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.OccurredAt(System.String)">
            <summary>
            OccurredAt.
            </summary>
            <param name="occurredAt"> occurredAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.Source(Square.Models.SourceApplication)">
            <summary>
            Source.
            </summary>
            <param name="source"> source. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.EmployeeId(System.String)">
            <summary>
            EmployeeId.
            </summary>
            <param name="employeeId"> employeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InventoryTransfer.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InventoryTransfer. </returns>
        </member>
        <member name="T:Square.Models.Invoice">
            <summary>
            Invoice.
            </summary>
        </member>
        <member name="M:Square.Models.Invoice.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,Square.Models.InvoiceRecipient,System.Collections.Generic.IList{Square.Models.InvoicePaymentRequest},System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.Money,System.String,System.String,System.String,System.String,Square.Models.InvoiceAcceptedPaymentMethods,System.Collections.Generic.IList{Square.Models.InvoiceCustomField},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Invoice"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="version">version.</param>
            <param name="locationId">location_id.</param>
            <param name="orderId">order_id.</param>
            <param name="primaryRecipient">primary_recipient.</param>
            <param name="paymentRequests">payment_requests.</param>
            <param name="deliveryMethod">delivery_method.</param>
            <param name="invoiceNumber">invoice_number.</param>
            <param name="title">title.</param>
            <param name="description">description.</param>
            <param name="scheduledAt">scheduled_at.</param>
            <param name="publicUrl">public_url.</param>
            <param name="nextPaymentAmountMoney">next_payment_amount_money.</param>
            <param name="status">status.</param>
            <param name="timezone">timezone.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="acceptedPaymentMethods">accepted_payment_methods.</param>
            <param name="customFields">custom_fields.</param>
            <param name="subscriptionId">subscription_id.</param>
        </member>
        <member name="P:Square.Models.Invoice.Id">
            <summary>
            The Square-assigned ID of the invoice.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.Version">
            <summary>
            The Square-assigned version number, which is incremented each time an update is committed to the invoice.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.LocationId">
            <summary>
            The ID of the location that this invoice is associated with.
            This field is required when creating an invoice.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.OrderId">
            <summary>
            The ID of the [order]($m/Order) for which the invoice is created.
            This order must be in the `OPEN` state and must belong to the `location_id`
            specified for this invoice. This field is required when creating an invoice.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.PrimaryRecipient">
            <summary>
            Provides customer data that Square uses to deliver an invoice.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.PaymentRequests">
            <summary>
            The payment schedule for the invoice, represented by one or more payment requests that
            define payment settings, such as amount due and due date. You can specify a maximum of 13
            payment requests, with up to 12 `INSTALLMENT` request types. For more information, see
            [Payment requests](https://developer.squareup.com/docs/invoices-api/overview#payment-requests).
            This field is required when creating an invoice. It must contain at least one payment request.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.DeliveryMethod">
            <summary>
            Indicates how Square delivers the [invoice]($m/Invoice) to the customer.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.InvoiceNumber">
            <summary>
            A user-friendly invoice number. The value is unique within a location.
            If not provided when creating an invoice, Square assigns a value.
            It increments from 1 and padded with zeros making it 7 characters long
            (for example, 0000001 and 0000002).
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.Title">
            <summary>
            The title of the invoice.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.Description">
            <summary>
            The description of the invoice. This is visible to the customer receiving the invoice.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.ScheduledAt">
            <summary>
            The timestamp when the invoice is scheduled for processing, in RFC 3339 format.
            After the invoice is published, Square processes the invoice on the specified date,
            according to the delivery method and payment request settings.
            If the field is not set, Square processes the invoice immediately after it is published.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.PublicUrl">
            <summary>
            The URL of the Square-hosted invoice page.
            After you publish the invoice using the `PublishInvoice` endpoint, Square hosts the invoice
            page and returns the page URL in the response.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.NextPaymentAmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.Status">
            <summary>
            Indicates the status of an invoice.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.Timezone">
            <summary>
            The time zone used to interpret calendar dates on the invoice, such as `due_date`.
            When an invoice is created, this field is set to the `timezone` specified for the seller
            location. The value cannot be changed.
            For example, a payment `due_date` of 2021-03-09 with a `timezone` of America/Los\_Angeles
            becomes overdue at midnight on March 9 in America/Los\_Angeles (which equals a UTC timestamp
            of 2021-03-10T08:00:00Z).
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.CreatedAt">
            <summary>
            The timestamp when the invoice was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.UpdatedAt">
            <summary>
            The timestamp when the invoice was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.AcceptedPaymentMethods">
            <summary>
            The payment methods that customers can use to pay an invoice on the Square-hosted invoice page.
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.CustomFields">
            <summary>
            Additional seller-defined fields to render on the invoice. These fields are visible to sellers and buyers
            on the Square-hosted invoice page and in emailed or PDF copies of invoices. For more information, see
            [Custom fields](https://developer.squareup.com/docs/invoices-api/overview#custom-fields).
            Max: 2 custom fields
            </summary>
        </member>
        <member name="P:Square.Models.Invoice.SubscriptionId">
            <summary>
            The ID of the [subscription]($m/Subscription) associated with the invoice.
            This field is present only on subscription billing invoices.
            </summary>
        </member>
        <member name="M:Square.Models.Invoice.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Invoice.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Invoice.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Invoice.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Invoice.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Invoice.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Invoice.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.PrimaryRecipient(Square.Models.InvoiceRecipient)">
            <summary>
            PrimaryRecipient.
            </summary>
            <param name="primaryRecipient"> primaryRecipient. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.PaymentRequests(System.Collections.Generic.IList{Square.Models.InvoicePaymentRequest})">
            <summary>
            PaymentRequests.
            </summary>
            <param name="paymentRequests"> paymentRequests. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.DeliveryMethod(System.String)">
            <summary>
            DeliveryMethod.
            </summary>
            <param name="deliveryMethod"> deliveryMethod. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.InvoiceNumber(System.String)">
            <summary>
            InvoiceNumber.
            </summary>
            <param name="invoiceNumber"> invoiceNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.Title(System.String)">
            <summary>
            Title.
            </summary>
            <param name="title"> title. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.ScheduledAt(System.String)">
            <summary>
            ScheduledAt.
            </summary>
            <param name="scheduledAt"> scheduledAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.PublicUrl(System.String)">
            <summary>
            PublicUrl.
            </summary>
            <param name="publicUrl"> publicUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.NextPaymentAmountMoney(Square.Models.Money)">
            <summary>
            NextPaymentAmountMoney.
            </summary>
            <param name="nextPaymentAmountMoney"> nextPaymentAmountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.Timezone(System.String)">
            <summary>
            Timezone.
            </summary>
            <param name="timezone"> timezone. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.AcceptedPaymentMethods(Square.Models.InvoiceAcceptedPaymentMethods)">
            <summary>
            AcceptedPaymentMethods.
            </summary>
            <param name="acceptedPaymentMethods"> acceptedPaymentMethods. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.CustomFields(System.Collections.Generic.IList{Square.Models.InvoiceCustomField})">
            <summary>
            CustomFields.
            </summary>
            <param name="customFields"> customFields. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.SubscriptionId(System.String)">
            <summary>
            SubscriptionId.
            </summary>
            <param name="subscriptionId"> subscriptionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Invoice.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Invoice. </returns>
        </member>
        <member name="T:Square.Models.InvoiceAcceptedPaymentMethods">
            <summary>
            InvoiceAcceptedPaymentMethods.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceAcceptedPaymentMethods.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InvoiceAcceptedPaymentMethods"/> class.
            </summary>
            <param name="card">card.</param>
            <param name="squareGiftCard">square_gift_card.</param>
            <param name="bankAccount">bank_account.</param>
        </member>
        <member name="P:Square.Models.InvoiceAcceptedPaymentMethods.Card">
            <summary>
            Indicates whether credit card or debit card payments are accepted. The default value is `false`.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceAcceptedPaymentMethods.SquareGiftCard">
            <summary>
            Indicates whether Square gift card payments are accepted. The default value is `false`.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceAcceptedPaymentMethods.BankAccount">
            <summary>
            Indicates whether bank transfer payments are accepted. The default value is `false`.
            This option is allowed only for invoices that have a single payment request of type `BALANCE`.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceAcceptedPaymentMethods.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceAcceptedPaymentMethods.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceAcceptedPaymentMethods.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceAcceptedPaymentMethods.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InvoiceAcceptedPaymentMethods.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InvoiceAcceptedPaymentMethods.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceAcceptedPaymentMethods.Builder.Card(System.Nullable{System.Boolean})">
            <summary>
            Card.
            </summary>
            <param name="card"> card. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceAcceptedPaymentMethods.Builder.SquareGiftCard(System.Nullable{System.Boolean})">
            <summary>
            SquareGiftCard.
            </summary>
            <param name="squareGiftCard"> squareGiftCard. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceAcceptedPaymentMethods.Builder.BankAccount(System.Nullable{System.Boolean})">
            <summary>
            BankAccount.
            </summary>
            <param name="bankAccount"> bankAccount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceAcceptedPaymentMethods.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InvoiceAcceptedPaymentMethods. </returns>
        </member>
        <member name="T:Square.Models.InvoiceCustomField">
            <summary>
            InvoiceCustomField.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceCustomField.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InvoiceCustomField"/> class.
            </summary>
            <param name="label">label.</param>
            <param name="mValue">value.</param>
            <param name="placement">placement.</param>
        </member>
        <member name="P:Square.Models.InvoiceCustomField.Label">
            <summary>
            The label or title of the custom field. This field is required for a custom field.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceCustomField.MValue">
            <summary>
            The text of the custom field. If omitted, only the label is rendered.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceCustomField.Placement">
            <summary>
            Indicates where to render a custom field on the Square-hosted invoice page and in emailed or PDF
            copies of the invoice.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceCustomField.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceCustomField.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceCustomField.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceCustomField.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InvoiceCustomField.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InvoiceCustomField.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceCustomField.Builder.Label(System.String)">
            <summary>
            Label.
            </summary>
            <param name="label"> label. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceCustomField.Builder.MValue(System.String)">
            <summary>
            MValue.
            </summary>
            <param name="mValue"> mValue. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceCustomField.Builder.Placement(System.String)">
            <summary>
            Placement.
            </summary>
            <param name="placement"> placement. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceCustomField.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InvoiceCustomField. </returns>
        </member>
        <member name="T:Square.Models.InvoiceFilter">
            <summary>
            InvoiceFilter.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InvoiceFilter"/> class.
            </summary>
            <param name="locationIds">location_ids.</param>
            <param name="customerIds">customer_ids.</param>
        </member>
        <member name="P:Square.Models.InvoiceFilter.LocationIds">
            <summary>
            Limits the search to the specified locations. A location is required.
            In the current implementation, only one location can be specified.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceFilter.CustomerIds">
            <summary>
            Limits the search to the specified customers, within the specified locations.
            Specifying a customer is optional. In the current implementation,
            a maximum of one customer can be specified.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InvoiceFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InvoiceFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceFilter.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceFilter.Builder.CustomerIds(System.Collections.Generic.IList{System.String})">
            <summary>
            CustomerIds.
            </summary>
            <param name="customerIds"> customerIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InvoiceFilter. </returns>
        </member>
        <member name="T:Square.Models.InvoicePaymentReminder">
            <summary>
            InvoicePaymentReminder.
            </summary>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InvoicePaymentReminder"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="relativeScheduledDays">relative_scheduled_days.</param>
            <param name="message">message.</param>
            <param name="status">status.</param>
            <param name="sentAt">sent_at.</param>
        </member>
        <member name="P:Square.Models.InvoicePaymentReminder.Uid">
            <summary>
            A Square-assigned ID that uniquely identifies the reminder within the
            `InvoicePaymentRequest`.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentReminder.RelativeScheduledDays">
            <summary>
            The number of days before (a negative number) or after (a positive number)
            the payment request `due_date` when the reminder is sent. For example, -3 indicates that
            the reminder should be sent 3 days before the payment request `due_date`.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentReminder.Message">
            <summary>
            The reminder message.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentReminder.Status">
            <summary>
            The status of a payment request reminder.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentReminder.SentAt">
            <summary>
            If sent, the timestamp when the reminder was sent, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InvoicePaymentReminder.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.Builder.RelativeScheduledDays(System.Nullable{System.Int32})">
            <summary>
            RelativeScheduledDays.
            </summary>
            <param name="relativeScheduledDays"> relativeScheduledDays. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.Builder.Message(System.String)">
            <summary>
            Message.
            </summary>
            <param name="message"> message. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.Builder.SentAt(System.String)">
            <summary>
            SentAt.
            </summary>
            <param name="sentAt"> sentAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentReminder.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InvoicePaymentReminder. </returns>
        </member>
        <member name="T:Square.Models.InvoicePaymentRequest">
            <summary>
            InvoicePaymentRequest.
            </summary>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.#ctor(System.String,System.String,System.String,System.String,Square.Models.Money,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IList{Square.Models.InvoicePaymentReminder},Square.Models.Money,Square.Models.Money,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InvoicePaymentRequest"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="requestMethod">request_method.</param>
            <param name="requestType">request_type.</param>
            <param name="dueDate">due_date.</param>
            <param name="fixedAmountRequestedMoney">fixed_amount_requested_money.</param>
            <param name="percentageRequested">percentage_requested.</param>
            <param name="tippingEnabled">tipping_enabled.</param>
            <param name="automaticPaymentSource">automatic_payment_source.</param>
            <param name="cardId">card_id.</param>
            <param name="reminders">reminders.</param>
            <param name="computedAmountMoney">computed_amount_money.</param>
            <param name="totalCompletedAmountMoney">total_completed_amount_money.</param>
            <param name="roundingAdjustmentIncludedMoney">rounding_adjustment_included_money.</param>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.Uid">
            <summary>
            The Square-generated ID of the payment request in an [invoice]($m/Invoice).
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.RequestMethod">
            <summary>
            Specifies the action for Square to take for processing the invoice. For example,
            email the invoice, charge a customer's card on file, or do nothing. DEPRECATED at
            version 2021-01-21. The corresponding `request_method` field is replaced by the
            `Invoice.delivery_method` and `InvoicePaymentRequest.automatic_payment_source` fields.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.RequestType">
            <summary>
            Indicates the type of the payment request. An invoice supports the following payment request combinations:
            - 1 balance
            - 1 deposit with 1 balance
            - 2 - 12 installments
            - 1 deposit with 2 - 12 installments
            For more information,
            see [Payment requests](https://developer.squareup.com/docs/invoices-api/overview#payment-requests).
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.DueDate">
            <summary>
            The due date (in the invoice's time zone) for the payment request, in `YYYY-MM-DD` format. This field
            is required to create a payment request.
            After this date, the invoice becomes overdue. For example, a payment `due_date` of 2021-03-09 with a `timezone`
            of America/Los\_Angeles becomes overdue at midnight on March 9 in America/Los\_Angeles (which equals a UTC
            timestamp of 2021-03-10T08:00:00Z).
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.FixedAmountRequestedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.PercentageRequested">
            <summary>
            Specifies the amount for the payment request in percentage:
            - When the payment `request_type` is `DEPOSIT`, it is the percentage of the order's total amount.
            - When the payment `request_type` is `INSTALLMENT`, it is the percentage of the order's total less
            the deposit, if requested. The sum of the `percentage_requested` in all installment
            payment requests must be equal to 100.
            You cannot specify this when the payment `request_type` is `BALANCE` or when the
            payment request specifies the `fixed_amount_requested_money` field.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.TippingEnabled">
            <summary>
            If set to true, the Square-hosted invoice page (the `public_url` field of the invoice)
            provides a place for the customer to pay a tip.
            This field is allowed only on the final payment request
            and the payment `request_type` must be `BALANCE` or `INSTALLMENT`.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.AutomaticPaymentSource">
            <summary>
            Indicates the automatic payment method for an [invoice payment request]($m/InvoicePaymentRequest).
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.CardId">
            <summary>
            The ID of the card on file to charge for the payment request. To get the customer’s card on file,
            use the `customer_id` of the invoice recipient to call [RetrieveCustomer]($e/Customers/RetrieveCustomer)
            in the Customers API. Then, get the ID of the target card from the `cards` field in the response.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.Reminders">
            <summary>
            A list of one or more reminders to send for the payment request.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.ComputedAmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.TotalCompletedAmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.InvoicePaymentRequest.RoundingAdjustmentIncludedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InvoicePaymentRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.RequestMethod(System.String)">
            <summary>
            RequestMethod.
            </summary>
            <param name="requestMethod"> requestMethod. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.RequestType(System.String)">
            <summary>
            RequestType.
            </summary>
            <param name="requestType"> requestType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.DueDate(System.String)">
            <summary>
            DueDate.
            </summary>
            <param name="dueDate"> dueDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.FixedAmountRequestedMoney(Square.Models.Money)">
            <summary>
            FixedAmountRequestedMoney.
            </summary>
            <param name="fixedAmountRequestedMoney"> fixedAmountRequestedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.PercentageRequested(System.String)">
            <summary>
            PercentageRequested.
            </summary>
            <param name="percentageRequested"> percentageRequested. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.TippingEnabled(System.Nullable{System.Boolean})">
            <summary>
            TippingEnabled.
            </summary>
            <param name="tippingEnabled"> tippingEnabled. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.AutomaticPaymentSource(System.String)">
            <summary>
            AutomaticPaymentSource.
            </summary>
            <param name="automaticPaymentSource"> automaticPaymentSource. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.CardId(System.String)">
            <summary>
            CardId.
            </summary>
            <param name="cardId"> cardId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.Reminders(System.Collections.Generic.IList{Square.Models.InvoicePaymentReminder})">
            <summary>
            Reminders.
            </summary>
            <param name="reminders"> reminders. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.ComputedAmountMoney(Square.Models.Money)">
            <summary>
            ComputedAmountMoney.
            </summary>
            <param name="computedAmountMoney"> computedAmountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.TotalCompletedAmountMoney(Square.Models.Money)">
            <summary>
            TotalCompletedAmountMoney.
            </summary>
            <param name="totalCompletedAmountMoney"> totalCompletedAmountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.RoundingAdjustmentIncludedMoney(Square.Models.Money)">
            <summary>
            RoundingAdjustmentIncludedMoney.
            </summary>
            <param name="roundingAdjustmentIncludedMoney"> roundingAdjustmentIncludedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoicePaymentRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InvoicePaymentRequest. </returns>
        </member>
        <member name="T:Square.Models.InvoiceQuery">
            <summary>
            InvoiceQuery.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceQuery.#ctor(Square.Models.InvoiceFilter,Square.Models.InvoiceSort)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InvoiceQuery"/> class.
            </summary>
            <param name="filter">filter.</param>
            <param name="sort">sort.</param>
        </member>
        <member name="P:Square.Models.InvoiceQuery.Filter">
            <summary>
            Describes query filters to apply.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceQuery.Sort">
            <summary>
            Identifies the sort field and sort order.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InvoiceQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InvoiceQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceQuery.Builder.Filter(Square.Models.InvoiceFilter)">
            <summary>
            Filter.
            </summary>
            <param name="filter"> filter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceQuery.Builder.Sort(Square.Models.InvoiceSort)">
            <summary>
            Sort.
            </summary>
            <param name="sort"> sort. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InvoiceQuery. </returns>
        </member>
        <member name="T:Square.Models.InvoiceRecipient">
            <summary>
            InvoiceRecipient.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.#ctor(System.String,System.String,System.String,System.String,Square.Models.Address,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InvoiceRecipient"/> class.
            </summary>
            <param name="customerId">customer_id.</param>
            <param name="givenName">given_name.</param>
            <param name="familyName">family_name.</param>
            <param name="emailAddress">email_address.</param>
            <param name="address">address.</param>
            <param name="phoneNumber">phone_number.</param>
            <param name="companyName">company_name.</param>
        </member>
        <member name="P:Square.Models.InvoiceRecipient.CustomerId">
            <summary>
            The ID of the customer. This is the customer profile ID that
            you provide when creating a draft invoice.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceRecipient.GivenName">
            <summary>
            The recipient's given (that is, first) name.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceRecipient.FamilyName">
            <summary>
            The recipient's family (that is, last) name.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceRecipient.EmailAddress">
            <summary>
            The recipient's email address.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceRecipient.Address">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceRecipient.PhoneNumber">
            <summary>
            The recipient's phone number.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceRecipient.CompanyName">
            <summary>
            The name of the recipient's company.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InvoiceRecipient.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.Builder.GivenName(System.String)">
            <summary>
            GivenName.
            </summary>
            <param name="givenName"> givenName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.Builder.FamilyName(System.String)">
            <summary>
            FamilyName.
            </summary>
            <param name="familyName"> familyName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.Builder.EmailAddress(System.String)">
            <summary>
            EmailAddress.
            </summary>
            <param name="emailAddress"> emailAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.Builder.Address(Square.Models.Address)">
            <summary>
            Address.
            </summary>
            <param name="address"> address. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.Builder.PhoneNumber(System.String)">
            <summary>
            PhoneNumber.
            </summary>
            <param name="phoneNumber"> phoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.Builder.CompanyName(System.String)">
            <summary>
            CompanyName.
            </summary>
            <param name="companyName"> companyName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceRecipient.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InvoiceRecipient. </returns>
        </member>
        <member name="T:Square.Models.InvoiceSort">
            <summary>
            InvoiceSort.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceSort.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.InvoiceSort"/> class.
            </summary>
            <param name="field">field.</param>
            <param name="order">order.</param>
        </member>
        <member name="P:Square.Models.InvoiceSort.Field">
            <summary>
            The field to use for sorting.
            </summary>
        </member>
        <member name="P:Square.Models.InvoiceSort.Order">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceSort.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceSort.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceSort.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.InvoiceSort.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.InvoiceSort.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.InvoiceSort.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.InvoiceSort.Builder.Field(System.String)">
            <summary>
            Field.
            </summary>
            <param name="field"> field. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceSort.Builder.Order(System.String)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.InvoiceSort.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> InvoiceSort. </returns>
        </member>
        <member name="T:Square.Models.ItemVariationLocationOverrides">
            <summary>
            ItemVariationLocationOverrides.
            </summary>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.#ctor(System.String,Square.Models.Money,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ItemVariationLocationOverrides"/> class.
            </summary>
            <param name="locationId">location_id.</param>
            <param name="priceMoney">price_money.</param>
            <param name="pricingType">pricing_type.</param>
            <param name="trackInventory">track_inventory.</param>
            <param name="inventoryAlertType">inventory_alert_type.</param>
            <param name="inventoryAlertThreshold">inventory_alert_threshold.</param>
        </member>
        <member name="P:Square.Models.ItemVariationLocationOverrides.LocationId">
            <summary>
            The ID of the `Location`. This can include locations that are deactivated.
            </summary>
        </member>
        <member name="P:Square.Models.ItemVariationLocationOverrides.PriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.ItemVariationLocationOverrides.PricingType">
            <summary>
            Indicates whether the price of a CatalogItemVariation should be entered manually at the time of sale.
            </summary>
        </member>
        <member name="P:Square.Models.ItemVariationLocationOverrides.TrackInventory">
            <summary>
            If `true`, inventory tracking is active for the `CatalogItemVariation` at this `Location`.
            </summary>
        </member>
        <member name="P:Square.Models.ItemVariationLocationOverrides.InventoryAlertType">
            <summary>
            Indicates whether Square should alert the merchant when the inventory quantity of a CatalogItemVariation is low.
            </summary>
        </member>
        <member name="P:Square.Models.ItemVariationLocationOverrides.InventoryAlertThreshold">
            <summary>
            If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`
            is `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.
            This value is always an integer.
            </summary>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ItemVariationLocationOverrides.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.Builder.PriceMoney(Square.Models.Money)">
            <summary>
            PriceMoney.
            </summary>
            <param name="priceMoney"> priceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.Builder.PricingType(System.String)">
            <summary>
            PricingType.
            </summary>
            <param name="pricingType"> pricingType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.Builder.TrackInventory(System.Nullable{System.Boolean})">
            <summary>
            TrackInventory.
            </summary>
            <param name="trackInventory"> trackInventory. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.Builder.InventoryAlertType(System.String)">
            <summary>
            InventoryAlertType.
            </summary>
            <param name="inventoryAlertType"> inventoryAlertType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.Builder.InventoryAlertThreshold(System.Nullable{System.Int64})">
            <summary>
            InventoryAlertThreshold.
            </summary>
            <param name="inventoryAlertThreshold"> inventoryAlertThreshold. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ItemVariationLocationOverrides.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ItemVariationLocationOverrides. </returns>
        </member>
        <member name="T:Square.Models.JobAssignment">
            <summary>
            JobAssignment.
            </summary>
        </member>
        <member name="M:Square.Models.JobAssignment.#ctor(System.String,System.String,Square.Models.Money,Square.Models.Money,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.JobAssignment"/> class.
            </summary>
            <param name="jobTitle">job_title.</param>
            <param name="payType">pay_type.</param>
            <param name="hourlyRate">hourly_rate.</param>
            <param name="annualRate">annual_rate.</param>
            <param name="weeklyHours">weekly_hours.</param>
        </member>
        <member name="P:Square.Models.JobAssignment.JobTitle">
            <summary>
            The title of the job.
            </summary>
        </member>
        <member name="P:Square.Models.JobAssignment.PayType">
            <summary>
            Enumerates the possible pay types that a job can be assigned.
            </summary>
        </member>
        <member name="P:Square.Models.JobAssignment.HourlyRate">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.JobAssignment.AnnualRate">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.JobAssignment.WeeklyHours">
            <summary>
            The planned hours per week for the job. Set if the job `PayType` is `SALARY`.
            </summary>
        </member>
        <member name="M:Square.Models.JobAssignment.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.JobAssignment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.JobAssignment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.JobAssignment.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.JobAssignment.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.JobAssignment.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.JobAssignment.Builder.JobTitle(System.String)">
            <summary>
            JobTitle.
            </summary>
            <param name="jobTitle"> jobTitle. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.JobAssignment.Builder.PayType(System.String)">
            <summary>
            PayType.
            </summary>
            <param name="payType"> payType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.JobAssignment.Builder.HourlyRate(Square.Models.Money)">
            <summary>
            HourlyRate.
            </summary>
            <param name="hourlyRate"> hourlyRate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.JobAssignment.Builder.AnnualRate(Square.Models.Money)">
            <summary>
            AnnualRate.
            </summary>
            <param name="annualRate"> annualRate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.JobAssignment.Builder.WeeklyHours(System.Nullable{System.Int32})">
            <summary>
            WeeklyHours.
            </summary>
            <param name="weeklyHours"> weeklyHours. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.JobAssignment.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> JobAssignment. </returns>
        </member>
        <member name="T:Square.Models.ListBankAccountsRequest">
            <summary>
            ListBankAccountsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListBankAccountsRequest.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListBankAccountsRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
            <param name="limit">limit.</param>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.ListBankAccountsRequest.Cursor">
            <summary>
            The pagination cursor returned by a previous call to this endpoint.
            Use it in the next `ListBankAccounts` request to retrieve the next set
            of results.
            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
            </summary>
        </member>
        <member name="P:Square.Models.ListBankAccountsRequest.Limit">
            <summary>
            Upper limit on the number of bank accounts to return in the response.
            Currently, 1000 is the largest supported limit. You can specify a limit
            of up to 1000 bank accounts. This is also the default limit.
            </summary>
        </member>
        <member name="P:Square.Models.ListBankAccountsRequest.LocationId">
            <summary>
            Location ID. You can specify this optional filter
            to retrieve only the linked bank accounts belonging to a specific location.
            </summary>
        </member>
        <member name="M:Square.Models.ListBankAccountsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBankAccountsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBankAccountsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBankAccountsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListBankAccountsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListBankAccountsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListBankAccountsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBankAccountsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBankAccountsRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBankAccountsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListBankAccountsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListBankAccountsResponse">
            <summary>
            ListBankAccountsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListBankAccountsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.BankAccount},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListBankAccountsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="bankAccounts">bank_accounts.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListBankAccountsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListBankAccountsResponse.Errors">
            <summary>
            Information on errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListBankAccountsResponse.BankAccounts">
            <summary>
            List of BankAccounts associated with this account.
            </summary>
        </member>
        <member name="P:Square.Models.ListBankAccountsResponse.Cursor">
            <summary>
            When a response is truncated, it includes a cursor that you can
            use in a subsequent request to fetch next set of bank accounts.
            If empty, this is the final response.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.ListBankAccountsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBankAccountsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBankAccountsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBankAccountsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListBankAccountsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListBankAccountsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListBankAccountsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBankAccountsResponse.Builder.BankAccounts(System.Collections.Generic.IList{Square.Models.BankAccount})">
            <summary>
            BankAccounts.
            </summary>
            <param name="bankAccounts"> bankAccounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBankAccountsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBankAccountsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListBankAccountsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListBreakTypesRequest">
            <summary>
            ListBreakTypesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListBreakTypesRequest.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListBreakTypesRequest"/> class.
            </summary>
            <param name="locationId">location_id.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListBreakTypesRequest.LocationId">
            <summary>
            Filter Break Types returned to only those that are associated with the
            specified location.
            </summary>
        </member>
        <member name="P:Square.Models.ListBreakTypesRequest.Limit">
            <summary>
            Maximum number of Break Types to return per page. Can range between 1
            and 200. The default is the maximum at 200.
            </summary>
        </member>
        <member name="P:Square.Models.ListBreakTypesRequest.Cursor">
            <summary>
            Pointer to the next page of Break Type results to fetch.
            </summary>
        </member>
        <member name="M:Square.Models.ListBreakTypesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBreakTypesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBreakTypesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBreakTypesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListBreakTypesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListBreakTypesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListBreakTypesRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBreakTypesRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBreakTypesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBreakTypesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListBreakTypesRequest. </returns>
        </member>
        <member name="T:Square.Models.ListBreakTypesResponse">
            <summary>
            ListBreakTypesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListBreakTypesResponse.#ctor(System.Collections.Generic.IList{Square.Models.BreakType},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListBreakTypesResponse"/> class.
            </summary>
            <param name="breakTypes">break_types.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.ListBreakTypesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListBreakTypesResponse.BreakTypes">
            <summary>
            A page of `BreakType` results.
            </summary>
        </member>
        <member name="P:Square.Models.ListBreakTypesResponse.Cursor">
            <summary>
            Value supplied in the subsequent request to fetch the next next page
            of Break Type results.
            </summary>
        </member>
        <member name="P:Square.Models.ListBreakTypesResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.ListBreakTypesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBreakTypesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBreakTypesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListBreakTypesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListBreakTypesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListBreakTypesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListBreakTypesResponse.Builder.BreakTypes(System.Collections.Generic.IList{Square.Models.BreakType})">
            <summary>
            BreakTypes.
            </summary>
            <param name="breakTypes"> breakTypes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBreakTypesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBreakTypesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListBreakTypesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListBreakTypesResponse. </returns>
        </member>
        <member name="T:Square.Models.ListCashDrawerShiftEventsRequest">
            <summary>
            ListCashDrawerShiftEventsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsRequest.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCashDrawerShiftEventsRequest"/> class.
            </summary>
            <param name="locationId">location_id.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftEventsRequest.LocationId">
            <summary>
            The ID of the location to list cash drawer shifts for.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftEventsRequest.Limit">
            <summary>
            Number of resources to be returned in a page of results (200 by
            default, 1000 max).
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftEventsRequest.Cursor">
            <summary>
            Opaque cursor for fetching the next page of results.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCashDrawerShiftEventsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCashDrawerShiftEventsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListCashDrawerShiftEventsResponse">
            <summary>
            ListCashDrawerShiftEventsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsResponse.#ctor(System.Collections.Generic.IList{Square.Models.CashDrawerShiftEvent},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCashDrawerShiftEventsResponse"/> class.
            </summary>
            <param name="events">events.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftEventsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftEventsResponse.Events">
            <summary>
            All of the events (payments, refunds, etc.) for a cash drawer during
            the shift.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftEventsResponse.Cursor">
            <summary>
            Opaque cursor for fetching the next page. Cursor is not present in
            the last page of results.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftEventsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCashDrawerShiftEventsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsResponse.Builder.Events(System.Collections.Generic.IList{Square.Models.CashDrawerShiftEvent})">
            <summary>
            Events.
            </summary>
            <param name="events"> events. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftEventsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCashDrawerShiftEventsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListCashDrawerShiftsRequest">
            <summary>
            ListCashDrawerShiftsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCashDrawerShiftsRequest"/> class.
            </summary>
            <param name="locationId">location_id.</param>
            <param name="sortOrder">sort_order.</param>
            <param name="beginTime">begin_time.</param>
            <param name="endTime">end_time.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftsRequest.LocationId">
            <summary>
            The ID of the location to query for a list of cash drawer shifts.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftsRequest.SortOrder">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftsRequest.BeginTime">
            <summary>
            The inclusive start time of the query on opened_at, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftsRequest.EndTime">
            <summary>
            The exclusive end date of the query on opened_at, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftsRequest.Limit">
            <summary>
            Number of cash drawer shift events in a page of results (200 by
            default, 1000 max).
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftsRequest.Cursor">
            <summary>
            Opaque cursor for fetching the next page of results.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCashDrawerShiftsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.Builder.BeginTime(System.String)">
            <summary>
            BeginTime.
            </summary>
            <param name="beginTime"> beginTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.Builder.EndTime(System.String)">
            <summary>
            EndTime.
            </summary>
            <param name="endTime"> endTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCashDrawerShiftsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListCashDrawerShiftsResponse">
            <summary>
            ListCashDrawerShiftsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsResponse.#ctor(System.Collections.Generic.IList{Square.Models.CashDrawerShiftSummary},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCashDrawerShiftsResponse"/> class.
            </summary>
            <param name="items">items.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftsResponse.Items">
            <summary>
            A collection of CashDrawerShiftSummary objects for shifts that match
            the query.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftsResponse.Cursor">
            <summary>
            Opaque cursor for fetching the next page of results. Cursor is not
            present in the last page of results.
            </summary>
        </member>
        <member name="P:Square.Models.ListCashDrawerShiftsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCashDrawerShiftsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsResponse.Builder.Items(System.Collections.Generic.IList{Square.Models.CashDrawerShiftSummary})">
            <summary>
            Items.
            </summary>
            <param name="items"> items. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCashDrawerShiftsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCashDrawerShiftsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListCatalogRequest">
            <summary>
            ListCatalogRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListCatalogRequest.#ctor(System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCatalogRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
            <param name="types">types.</param>
            <param name="catalogVersion">catalog_version.</param>
        </member>
        <member name="P:Square.Models.ListCatalogRequest.Cursor">
            <summary>
            The pagination cursor returned in the previous response. Leave unset for an initial request.
            The page size is currently set to be 100.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.ListCatalogRequest.Types">
            <summary>
            An optional case-insensitive, comma-separated list of object types to retrieve, for example
            `ITEM,ITEM_VARIATION,CATEGORY,IMAGE`.
            The legal values are taken from the CatalogObjectType enum:
            `ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`,
            `MODIFIER`, `MODIFIER_LIST`, or `IMAGE`.
            </summary>
        </member>
        <member name="P:Square.Models.ListCatalogRequest.CatalogVersion">
            <summary>
            The specific version of the catalog objects to be included in the response.
            This allows you to retrieve historical
            versions of objects. The specified version value is matched against
            the [CatalogObject]($m/CatalogObject)s' `version` attribute.
            </summary>
        </member>
        <member name="M:Square.Models.ListCatalogRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCatalogRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCatalogRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCatalogRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCatalogRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCatalogRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCatalogRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCatalogRequest.Builder.Types(System.String)">
            <summary>
            Types.
            </summary>
            <param name="types"> types. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCatalogRequest.Builder.CatalogVersion(System.Nullable{System.Int64})">
            <summary>
            CatalogVersion.
            </summary>
            <param name="catalogVersion"> catalogVersion. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCatalogRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCatalogRequest. </returns>
        </member>
        <member name="T:Square.Models.ListCatalogResponse">
            <summary>
            ListCatalogResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListCatalogResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.String,System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCatalogResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="cursor">cursor.</param>
            <param name="objects">objects.</param>
        </member>
        <member name="P:Square.Models.ListCatalogResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListCatalogResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListCatalogResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If unset, this is the final response.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.ListCatalogResponse.Objects">
            <summary>
            The CatalogObjects returned.
            </summary>
        </member>
        <member name="M:Square.Models.ListCatalogResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCatalogResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCatalogResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCatalogResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCatalogResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCatalogResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCatalogResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCatalogResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCatalogResponse.Builder.Objects(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Objects.
            </summary>
            <param name="objects"> objects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCatalogResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCatalogResponse. </returns>
        </member>
        <member name="T:Square.Models.ListCustomerGroupsRequest">
            <summary>
            ListCustomerGroupsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCustomerGroupsRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListCustomerGroupsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this cursor to retrieve the next set of results for your original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCustomerGroupsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCustomerGroupsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListCustomerGroupsResponse">
            <summary>
            ListCustomerGroupsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.CustomerGroup},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCustomerGroupsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="groups">groups.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListCustomerGroupsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomerGroupsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomerGroupsResponse.Groups">
            <summary>
            A list of customer groups belonging to the current seller.
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomerGroupsResponse.Cursor">
            <summary>
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint. This value is present only if the request
            succeeded and additional results are available.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCustomerGroupsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsResponse.Builder.Groups(System.Collections.Generic.IList{Square.Models.CustomerGroup})">
            <summary>
            Groups.
            </summary>
            <param name="groups"> groups. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomerGroupsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCustomerGroupsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListCustomerSegmentsRequest">
            <summary>
            ListCustomerSegmentsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCustomerSegmentsRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListCustomerSegmentsRequest.Cursor">
            <summary>
            A pagination cursor returned by previous calls to `ListCustomerSegments`.
            This cursor is used to retrieve the next set of query results.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCustomerSegmentsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCustomerSegmentsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListCustomerSegmentsResponse">
            <summary>
            ListCustomerSegmentsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.CustomerSegment},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCustomerSegmentsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="segments">segments.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListCustomerSegmentsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomerSegmentsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomerSegmentsResponse.Segments">
            <summary>
            The list of customer segments belonging to the associated Square account.
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomerSegmentsResponse.Cursor">
            <summary>
            A pagination cursor to be used in subsequent calls to `ListCustomerSegments`
            to retrieve the next set of query results. The cursor is only present if the request succeeded and
            additional results are available.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCustomerSegmentsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsResponse.Builder.Segments(System.Collections.Generic.IList{Square.Models.CustomerSegment})">
            <summary>
            Segments.
            </summary>
            <param name="segments"> segments. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomerSegmentsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCustomerSegmentsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListCustomersRequest">
            <summary>
            ListCustomersRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomersRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCustomersRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
            <param name="sortField">sort_field.</param>
            <param name="sortOrder">sort_order.</param>
        </member>
        <member name="P:Square.Models.ListCustomersRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this cursor to retrieve the next set of results for your original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomersRequest.SortField">
            <summary>
            Specifies customer attributes as the sort key to customer profiles returned from a search.
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomersRequest.SortOrder">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomersRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomersRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomersRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomersRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCustomersRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCustomersRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomersRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomersRequest.Builder.SortField(System.String)">
            <summary>
            SortField.
            </summary>
            <param name="sortField"> sortField. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomersRequest.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomersRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCustomersRequest. </returns>
        </member>
        <member name="T:Square.Models.ListCustomersResponse">
            <summary>
            ListCustomersResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomersResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.Customer},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListCustomersResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="customers">customers.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListCustomersResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomersResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomersResponse.Customers">
            <summary>
            An array of `Customer` objects that match the provided query.
            </summary>
        </member>
        <member name="P:Square.Models.ListCustomersResponse.Cursor">
            <summary>
            A pagination cursor to retrieve the next set of results for the
            original query. A cursor is only present if the request succeeded and additional results
            are available.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomersResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomersResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomersResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListCustomersResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListCustomersResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListCustomersResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListCustomersResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomersResponse.Builder.Customers(System.Collections.Generic.IList{Square.Models.Customer})">
            <summary>
            Customers.
            </summary>
            <param name="customers"> customers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomersResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListCustomersResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListCustomersResponse. </returns>
        </member>
        <member name="T:Square.Models.ListDeviceCodesRequest">
            <summary>
            ListDeviceCodesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListDeviceCodesRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
            <param name="locationId">location_id.</param>
            <param name="productType">product_type.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:Square.Models.ListDeviceCodesRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.
            See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.ListDeviceCodesRequest.LocationId">
            <summary>
            If specified, only returns DeviceCodes of the specified location.
            Returns DeviceCodes of all locations if empty.
            </summary>
        </member>
        <member name="P:Square.Models.ListDeviceCodesRequest.ProductType">
            <summary>
            Gets or sets ProductType.
            </summary>
        </member>
        <member name="P:Square.Models.ListDeviceCodesRequest.Status">
            <summary>
            If specified, returns DeviceCodes with the specified statuses.
            Returns DeviceCodes of status `PAIRED` and `UNPAIRED` if empty.
            See [DeviceCodeStatus](#type-devicecodestatus) for possible values
            </summary>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListDeviceCodesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.Builder.ProductType(System.String)">
            <summary>
            ProductType.
            </summary>
            <param name="productType"> productType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.Builder.Status(System.Collections.Generic.IList{System.String})">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDeviceCodesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListDeviceCodesRequest. </returns>
        </member>
        <member name="T:Square.Models.ListDeviceCodesResponse">
            <summary>
            ListDeviceCodesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListDeviceCodesResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.DeviceCode},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListDeviceCodesResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="deviceCodes">device_codes.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListDeviceCodesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListDeviceCodesResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListDeviceCodesResponse.DeviceCodes">
            <summary>
            The queried DeviceCode.
            </summary>
        </member>
        <member name="P:Square.Models.ListDeviceCodesResponse.Cursor">
            <summary>
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint. This value is present only if the request
            succeeded and additional results are available.
            See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
            </summary>
        </member>
        <member name="M:Square.Models.ListDeviceCodesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDeviceCodesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDeviceCodesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDeviceCodesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListDeviceCodesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListDeviceCodesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListDeviceCodesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDeviceCodesResponse.Builder.DeviceCodes(System.Collections.Generic.IList{Square.Models.DeviceCode})">
            <summary>
            DeviceCodes.
            </summary>
            <param name="deviceCodes"> deviceCodes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDeviceCodesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDeviceCodesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListDeviceCodesResponse. </returns>
        </member>
        <member name="T:Square.Models.ListDisputeEvidenceResponse">
            <summary>
            ListDisputeEvidenceResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListDisputeEvidenceResponse.#ctor(System.Collections.Generic.IList{Square.Models.DisputeEvidence},System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListDisputeEvidenceResponse"/> class.
            </summary>
            <param name="evidence">evidence.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.ListDisputeEvidenceResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListDisputeEvidenceResponse.Evidence">
            <summary>
            The list of evidence previously uploaded to the specified dispute.
            </summary>
        </member>
        <member name="P:Square.Models.ListDisputeEvidenceResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.ListDisputeEvidenceResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDisputeEvidenceResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDisputeEvidenceResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDisputeEvidenceResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListDisputeEvidenceResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListDisputeEvidenceResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListDisputeEvidenceResponse.Builder.Evidence(System.Collections.Generic.IList{Square.Models.DisputeEvidence})">
            <summary>
            Evidence.
            </summary>
            <param name="evidence"> evidence. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDisputeEvidenceResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDisputeEvidenceResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListDisputeEvidenceResponse. </returns>
        </member>
        <member name="T:Square.Models.ListDisputesRequest">
            <summary>
            ListDisputesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListDisputesRequest.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListDisputesRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
            <param name="states">states.</param>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.ListDisputesRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this cursor to retrieve the next set of results for the original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.ListDisputesRequest.States">
            <summary>
            The dispute states to filter the result.
            If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`,
            or `LOST`).
            See [DisputeState](#type-disputestate) for possible values
            </summary>
        </member>
        <member name="P:Square.Models.ListDisputesRequest.LocationId">
            <summary>
            The ID of the location for which to return a list of disputes. If not specified, the endpoint returns
            all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations.
            </summary>
        </member>
        <member name="M:Square.Models.ListDisputesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDisputesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDisputesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDisputesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListDisputesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListDisputesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListDisputesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDisputesRequest.Builder.States(System.Collections.Generic.IList{System.String})">
            <summary>
            States.
            </summary>
            <param name="states"> states. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDisputesRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDisputesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListDisputesRequest. </returns>
        </member>
        <member name="T:Square.Models.ListDisputesResponse">
            <summary>
            ListDisputesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListDisputesResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.Dispute},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListDisputesResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="disputes">disputes.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListDisputesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListDisputesResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListDisputesResponse.Disputes">
            <summary>
            The list of disputes.
            </summary>
        </member>
        <member name="P:Square.Models.ListDisputesResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request.
            If unset, this is the final response. For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.ListDisputesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDisputesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDisputesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListDisputesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListDisputesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListDisputesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListDisputesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDisputesResponse.Builder.Disputes(System.Collections.Generic.IList{Square.Models.Dispute})">
            <summary>
            Disputes.
            </summary>
            <param name="disputes"> disputes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDisputesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListDisputesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListDisputesResponse. </returns>
        </member>
        <member name="T:Square.Models.ListEmployeesRequest">
            <summary>
            ListEmployeesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.#ctor(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListEmployeesRequest"/> class.
            </summary>
            <param name="locationId">location_id.</param>
            <param name="status">status.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListEmployeesRequest.LocationId">
            <summary>
            Gets or sets LocationId.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeesRequest.Status">
            <summary>
            The status of the Employee being retrieved.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeesRequest.Limit">
            <summary>
            The number of employees to be returned on each page.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeesRequest.Cursor">
            <summary>
            The token required to retrieve the specified page of results.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListEmployeesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListEmployeesRequest. </returns>
        </member>
        <member name="T:Square.Models.ListEmployeesResponse">
            <summary>
            ListEmployeesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeesResponse.#ctor(System.Collections.Generic.IList{Square.Models.Employee},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListEmployeesResponse"/> class.
            </summary>
            <param name="employees">employees.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.ListEmployeesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeesResponse.Employees">
            <summary>
            Gets or sets Employees.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeesResponse.Cursor">
            <summary>
            The token to be used to retrieve the next page of results.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeesResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListEmployeesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListEmployeesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeesResponse.Builder.Employees(System.Collections.Generic.IList{Square.Models.Employee})">
            <summary>
            Employees.
            </summary>
            <param name="employees"> employees. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListEmployeesResponse. </returns>
        </member>
        <member name="T:Square.Models.ListEmployeeWagesRequest">
            <summary>
            ListEmployeeWagesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesRequest.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListEmployeeWagesRequest"/> class.
            </summary>
            <param name="employeeId">employee_id.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListEmployeeWagesRequest.EmployeeId">
            <summary>
            Filter wages returned to only those that are associated with the specified employee.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeeWagesRequest.Limit">
            <summary>
            Maximum number of Employee Wages to return per page. Can range between
            1 and 200. The default is the maximum at 200.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeeWagesRequest.Cursor">
            <summary>
            Pointer to the next page of Employee Wage results to fetch.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListEmployeeWagesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesRequest.Builder.EmployeeId(System.String)">
            <summary>
            EmployeeId.
            </summary>
            <param name="employeeId"> employeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListEmployeeWagesRequest. </returns>
        </member>
        <member name="T:Square.Models.ListEmployeeWagesResponse">
            <summary>
            ListEmployeeWagesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesResponse.#ctor(System.Collections.Generic.IList{Square.Models.EmployeeWage},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListEmployeeWagesResponse"/> class.
            </summary>
            <param name="employeeWages">employee_wages.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.ListEmployeeWagesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeeWagesResponse.EmployeeWages">
            <summary>
            A page of Employee Wage results.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeeWagesResponse.Cursor">
            <summary>
            Value supplied in the subsequent request to fetch the next next page
            of Employee Wage results.
            </summary>
        </member>
        <member name="P:Square.Models.ListEmployeeWagesResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListEmployeeWagesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesResponse.Builder.EmployeeWages(System.Collections.Generic.IList{Square.Models.EmployeeWage})">
            <summary>
            EmployeeWages.
            </summary>
            <param name="employeeWages"> employeeWages. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListEmployeeWagesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListEmployeeWagesResponse. </returns>
        </member>
        <member name="T:Square.Models.ListInvoicesRequest">
            <summary>
            ListInvoicesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListInvoicesRequest.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListInvoicesRequest"/> class.
            </summary>
            <param name="locationId">location_id.</param>
            <param name="cursor">cursor.</param>
            <param name="limit">limit.</param>
        </member>
        <member name="P:Square.Models.ListInvoicesRequest.LocationId">
            <summary>
            The ID of the location for which to list invoices.
            </summary>
        </member>
        <member name="P:Square.Models.ListInvoicesRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this cursor to retrieve the next set of results for your original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.ListInvoicesRequest.Limit">
            <summary>
            The maximum number of invoices to return (200 is the maximum `limit`).
            If not provided, the server uses a default limit of 100 invoices.
            </summary>
        </member>
        <member name="M:Square.Models.ListInvoicesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListInvoicesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListInvoicesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListInvoicesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListInvoicesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListInvoicesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListInvoicesRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListInvoicesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListInvoicesRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListInvoicesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListInvoicesRequest. </returns>
        </member>
        <member name="T:Square.Models.ListInvoicesResponse">
            <summary>
            ListInvoicesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListInvoicesResponse.#ctor(System.Collections.Generic.IList{Square.Models.Invoice},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListInvoicesResponse"/> class.
            </summary>
            <param name="invoices">invoices.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.ListInvoicesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListInvoicesResponse.Invoices">
            <summary>
            The invoices retrieved.
            </summary>
        </member>
        <member name="P:Square.Models.ListInvoicesResponse.Cursor">
            <summary>
            When a response is truncated, it includes a cursor that you can use in a
            subsequent request to retrieve the next set of invoices. If empty, this is the final
            response.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.ListInvoicesResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.ListInvoicesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListInvoicesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListInvoicesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListInvoicesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListInvoicesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListInvoicesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListInvoicesResponse.Builder.Invoices(System.Collections.Generic.IList{Square.Models.Invoice})">
            <summary>
            Invoices.
            </summary>
            <param name="invoices"> invoices. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListInvoicesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListInvoicesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListInvoicesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListInvoicesResponse. </returns>
        </member>
        <member name="T:Square.Models.ListLocationsResponse">
            <summary>
            ListLocationsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListLocationsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.Location})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListLocationsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="locations">locations.</param>
        </member>
        <member name="P:Square.Models.ListLocationsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListLocationsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListLocationsResponse.Locations">
            <summary>
            The business locations.
            </summary>
        </member>
        <member name="M:Square.Models.ListLocationsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListLocationsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListLocationsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListLocationsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListLocationsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListLocationsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListLocationsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListLocationsResponse.Builder.Locations(System.Collections.Generic.IList{Square.Models.Location})">
            <summary>
            Locations.
            </summary>
            <param name="locations"> locations. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListLocationsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListLocationsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListLoyaltyProgramsResponse">
            <summary>
            ListLoyaltyProgramsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListLoyaltyProgramsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.LoyaltyProgram})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListLoyaltyProgramsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="programs">programs.</param>
        </member>
        <member name="P:Square.Models.ListLoyaltyProgramsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListLoyaltyProgramsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListLoyaltyProgramsResponse.Programs">
            <summary>
            A list of `LoyaltyProgram` for the merchant.
            </summary>
        </member>
        <member name="M:Square.Models.ListLoyaltyProgramsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListLoyaltyProgramsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListLoyaltyProgramsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListLoyaltyProgramsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListLoyaltyProgramsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListLoyaltyProgramsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListLoyaltyProgramsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListLoyaltyProgramsResponse.Builder.Programs(System.Collections.Generic.IList{Square.Models.LoyaltyProgram})">
            <summary>
            Programs.
            </summary>
            <param name="programs"> programs. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListLoyaltyProgramsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListLoyaltyProgramsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListMerchantsRequest">
            <summary>
            ListMerchantsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListMerchantsRequest.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListMerchantsRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListMerchantsRequest.Cursor">
            <summary>
            The cursor generated by the previous response.
            </summary>
        </member>
        <member name="M:Square.Models.ListMerchantsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListMerchantsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListMerchantsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListMerchantsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListMerchantsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListMerchantsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListMerchantsRequest.Builder.Cursor(System.Nullable{System.Int32})">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListMerchantsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListMerchantsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListMerchantsResponse">
            <summary>
            ListMerchantsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListMerchantsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.Merchant},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListMerchantsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="merchant">merchant.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListMerchantsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListMerchantsResponse.Errors">
            <summary>
            Information on errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListMerchantsResponse.Merchant">
            <summary>
            The requested `Merchant` entities.
            </summary>
        </member>
        <member name="P:Square.Models.ListMerchantsResponse.Cursor">
            <summary>
            If the  response is truncated, the cursor to use in next  request to fetch next set of objects.
            </summary>
        </member>
        <member name="M:Square.Models.ListMerchantsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListMerchantsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListMerchantsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListMerchantsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListMerchantsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListMerchantsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListMerchantsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListMerchantsResponse.Builder.Merchant(System.Collections.Generic.IList{Square.Models.Merchant})">
            <summary>
            Merchant.
            </summary>
            <param name="merchant"> merchant. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListMerchantsResponse.Builder.Cursor(System.Nullable{System.Int32})">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListMerchantsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListMerchantsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListPaymentRefundsRequest">
            <summary>
            ListPaymentRefundsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListPaymentRefundsRequest"/> class.
            </summary>
            <param name="beginTime">begin_time.</param>
            <param name="endTime">end_time.</param>
            <param name="sortOrder">sort_order.</param>
            <param name="cursor">cursor.</param>
            <param name="locationId">location_id.</param>
            <param name="status">status.</param>
            <param name="sourceType">source_type.</param>
            <param name="limit">limit.</param>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsRequest.BeginTime">
            <summary>
            The timestamp for the beginning of the requested reporting period, in RFC 3339 format.
            Default: The current time minus one year.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsRequest.EndTime">
            <summary>
            The timestamp for the end of the requested reporting period, in RFC 3339 format.
            Default: The current time.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsRequest.SortOrder">
            <summary>
            The order in which results are listed:
            - `ASC` - Oldest to newest.
            - `DESC` - Newest to oldest (default).
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this cursor to retrieve the next set of results for the original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsRequest.LocationId">
            <summary>
            Limit results to the location supplied. By default, results are returned
            for all locations associated with the seller.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsRequest.Status">
            <summary>
            If provided, only refunds with the given status are returned.
            For a list of refund status values, see [PaymentRefund]($m/PaymentRefund).
            Default: If omitted, refunds are returned regardless of their status.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsRequest.SourceType">
            <summary>
            If provided, only refunds with the given source type are returned.
            - `CARD` - List refunds only for payments where `CARD` was specified as the payment
            source.
            Default: If omitted, refunds are returned regardless of the source type.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsRequest.Limit">
            <summary>
            The maximum number of results to be returned in a single page.
            It is possible to receive fewer results than the specified limit on a given page.
            If the supplied value is greater than 100, no more than 100 results are returned.
            Default: 100
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListPaymentRefundsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.Builder.BeginTime(System.String)">
            <summary>
            BeginTime.
            </summary>
            <param name="beginTime"> beginTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.Builder.EndTime(System.String)">
            <summary>
            EndTime.
            </summary>
            <param name="endTime"> endTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.Builder.SourceType(System.String)">
            <summary>
            SourceType.
            </summary>
            <param name="sourceType"> sourceType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListPaymentRefundsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListPaymentRefundsResponse">
            <summary>
            ListPaymentRefundsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.PaymentRefund},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListPaymentRefundsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="refunds">refunds.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsResponse.Refunds">
            <summary>
            The list of requested refunds.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentRefundsResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If empty,
            this is the final response.
            For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListPaymentRefundsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsResponse.Builder.Refunds(System.Collections.Generic.IList{Square.Models.PaymentRefund})">
            <summary>
            Refunds.
            </summary>
            <param name="refunds"> refunds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentRefundsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListPaymentRefundsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListPaymentsRequest">
            <summary>
            ListPaymentsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListPaymentsRequest"/> class.
            </summary>
            <param name="beginTime">begin_time.</param>
            <param name="endTime">end_time.</param>
            <param name="sortOrder">sort_order.</param>
            <param name="cursor">cursor.</param>
            <param name="locationId">location_id.</param>
            <param name="total">total.</param>
            <param name="last4">last_4.</param>
            <param name="cardBrand">card_brand.</param>
            <param name="limit">limit.</param>
        </member>
        <member name="P:Square.Models.ListPaymentsRequest.BeginTime">
            <summary>
            The timestamp for the beginning of the reporting period, in RFC 3339 format.
            Inclusive. Default: The current time minus one year.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsRequest.EndTime">
            <summary>
            The timestamp for the end of the reporting period, in RFC 3339 format.
            Default: The current time.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsRequest.SortOrder">
            <summary>
            The order in which results are listed:
            - `ASC` - Oldest to newest.
            - `DESC` - Newest to oldest (default).
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this cursor to retrieve the next set of results for the original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsRequest.LocationId">
            <summary>
            Limit results to the location supplied. By default, results are returned
            for the default (main) location associated with the seller.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsRequest.Total">
            <summary>
            The exact amount in the `total_money` for a payment.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsRequest.Last4">
            <summary>
            The last four digits of a payment card.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsRequest.CardBrand">
            <summary>
            The brand of the payment card (for example, VISA).
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsRequest.Limit">
            <summary>
            The maximum number of results to be returned in a single page.
            It is possible to receive fewer results than the specified limit on a given page.
            The default value of 100 is also the maximum allowed value. If the provided value is
            greater than 100, it is ignored and the default value is used instead.
            Default: `100`
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListPaymentsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Builder.BeginTime(System.String)">
            <summary>
            BeginTime.
            </summary>
            <param name="beginTime"> beginTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Builder.EndTime(System.String)">
            <summary>
            EndTime.
            </summary>
            <param name="endTime"> endTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Builder.Total(System.Nullable{System.Int64})">
            <summary>
            Total.
            </summary>
            <param name="total"> total. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Builder.Last4(System.String)">
            <summary>
            Last4.
            </summary>
            <param name="last4"> last4. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Builder.CardBrand(System.String)">
            <summary>
            CardBrand.
            </summary>
            <param name="cardBrand"> cardBrand. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListPaymentsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListPaymentsResponse">
            <summary>
            ListPaymentsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.Payment},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListPaymentsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="payments">payments.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListPaymentsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsResponse.Payments">
            <summary>
            The requested list of payments.
            </summary>
        </member>
        <member name="P:Square.Models.ListPaymentsResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If empty,
            this is the final response.
            For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListPaymentsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListPaymentsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListPaymentsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListPaymentsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsResponse.Builder.Payments(System.Collections.Generic.IList{Square.Models.Payment})">
            <summary>
            Payments.
            </summary>
            <param name="payments"> payments. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListPaymentsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListPaymentsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListRefundsRequest">
            <summary>
            ListRefundsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListRefundsRequest"/> class.
            </summary>
            <param name="beginTime">begin_time.</param>
            <param name="endTime">end_time.</param>
            <param name="sortOrder">sort_order.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListRefundsRequest.BeginTime">
            <summary>
            The beginning of the requested reporting period, in RFC 3339 format.
            See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.
            Default value: The current time minus one year.
            </summary>
        </member>
        <member name="P:Square.Models.ListRefundsRequest.EndTime">
            <summary>
            The end of the requested reporting period, in RFC 3339 format.
            See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.
            Default value: The current time.
            </summary>
        </member>
        <member name="P:Square.Models.ListRefundsRequest.SortOrder">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="P:Square.Models.ListRefundsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.
            See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
            </summary>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListRefundsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.Builder.BeginTime(System.String)">
            <summary>
            BeginTime.
            </summary>
            <param name="beginTime"> beginTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.Builder.EndTime(System.String)">
            <summary>
            EndTime.
            </summary>
            <param name="endTime"> endTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListRefundsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListRefundsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListRefundsResponse">
            <summary>
            ListRefundsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListRefundsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.Refund},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListRefundsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="refunds">refunds.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListRefundsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListRefundsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListRefundsResponse.Refunds">
            <summary>
            An array of refunds that match your query.
            </summary>
        </member>
        <member name="P:Square.Models.ListRefundsResponse.Cursor">
            <summary>
            A pagination cursor for retrieving the next set of results,
            if any remain. Provide this value as the `cursor` parameter in a subsequent
            request to this endpoint.
            See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
            </summary>
        </member>
        <member name="M:Square.Models.ListRefundsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListRefundsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListRefundsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListRefundsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListRefundsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListRefundsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListRefundsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListRefundsResponse.Builder.Refunds(System.Collections.Generic.IList{Square.Models.Refund})">
            <summary>
            Refunds.
            </summary>
            <param name="refunds"> refunds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListRefundsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListRefundsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListRefundsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListSitesResponse">
            <summary>
            ListSitesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListSitesResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.Site})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListSitesResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="sites">sites.</param>
        </member>
        <member name="P:Square.Models.ListSitesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListSitesResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListSitesResponse.Sites">
            <summary>
            The sites that belong to the seller.
            </summary>
        </member>
        <member name="M:Square.Models.ListSitesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListSitesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListSitesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListSitesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListSitesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListSitesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListSitesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListSitesResponse.Builder.Sites(System.Collections.Generic.IList{Square.Models.Site})">
            <summary>
            Sites.
            </summary>
            <param name="sites"> sites. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListSitesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListSitesResponse. </returns>
        </member>
        <member name="T:Square.Models.ListSubscriptionEventsRequest">
            <summary>
            ListSubscriptionEventsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsRequest.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListSubscriptionEventsRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
            <param name="limit">limit.</param>
        </member>
        <member name="P:Square.Models.ListSubscriptionEventsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.ListSubscriptionEventsRequest.Limit">
            <summary>
            The upper limit on the number of subscription events to return
            in the response.
            Default: `200`
            </summary>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListSubscriptionEventsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListSubscriptionEventsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListSubscriptionEventsResponse">
            <summary>
            ListSubscriptionEventsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.SubscriptionEvent},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListSubscriptionEventsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="subscriptionEvents">subscription_events.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListSubscriptionEventsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListSubscriptionEventsResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListSubscriptionEventsResponse.SubscriptionEvents">
            <summary>
            The `SubscriptionEvents` retrieved.
            </summary>
        </member>
        <member name="P:Square.Models.ListSubscriptionEventsResponse.Cursor">
            <summary>
            When a response is truncated, it includes a cursor that you can
            use in a subsequent request to fetch the next set of events.
            If empty, this is the final response.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListSubscriptionEventsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsResponse.Builder.SubscriptionEvents(System.Collections.Generic.IList{Square.Models.SubscriptionEvent})">
            <summary>
            SubscriptionEvents.
            </summary>
            <param name="subscriptionEvents"> subscriptionEvents. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListSubscriptionEventsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListSubscriptionEventsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListTeamMemberBookingProfilesRequest">
            <summary>
            ListTeamMemberBookingProfilesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListTeamMemberBookingProfilesRequest"/> class.
            </summary>
            <param name="bookableOnly">bookable_only.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.ListTeamMemberBookingProfilesRequest.BookableOnly">
            <summary>
            Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`).
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberBookingProfilesRequest.Limit">
            <summary>
            The maximum number of results to return.
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberBookingProfilesRequest.Cursor">
            <summary>
            The cursor for paginating through the results.
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberBookingProfilesRequest.LocationId">
            <summary>
            Indicates whether to include only team members enabled at the given location in the returned result.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListTeamMemberBookingProfilesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.Builder.BookableOnly(System.Nullable{System.Boolean})">
            <summary>
            BookableOnly.
            </summary>
            <param name="bookableOnly"> bookableOnly. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListTeamMemberBookingProfilesRequest. </returns>
        </member>
        <member name="T:Square.Models.ListTeamMemberBookingProfilesResponse">
            <summary>
            ListTeamMemberBookingProfilesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesResponse.#ctor(System.Collections.Generic.IList{Square.Models.TeamMemberBookingProfile},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListTeamMemberBookingProfilesResponse"/> class.
            </summary>
            <param name="teamMemberBookingProfiles">team_member_booking_profiles.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.ListTeamMemberBookingProfilesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberBookingProfilesResponse.TeamMemberBookingProfiles">
            <summary>
            The list of team member booking profiles.
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberBookingProfilesResponse.Cursor">
            <summary>
            The cursor for paginating through the results.
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberBookingProfilesResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListTeamMemberBookingProfilesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesResponse.Builder.TeamMemberBookingProfiles(System.Collections.Generic.IList{Square.Models.TeamMemberBookingProfile})">
            <summary>
            TeamMemberBookingProfiles.
            </summary>
            <param name="teamMemberBookingProfiles"> teamMemberBookingProfiles. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberBookingProfilesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListTeamMemberBookingProfilesResponse. </returns>
        </member>
        <member name="T:Square.Models.ListTeamMemberWagesRequest">
            <summary>
            ListTeamMemberWagesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesRequest.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListTeamMemberWagesRequest"/> class.
            </summary>
            <param name="teamMemberId">team_member_id.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListTeamMemberWagesRequest.TeamMemberId">
            <summary>
            Filter wages returned to only those that are associated with the
            specified team member.
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberWagesRequest.Limit">
            <summary>
            Maximum number of Team Member Wages to return per page. Can range between
            1 and 200. The default is the maximum at 200.
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberWagesRequest.Cursor">
            <summary>
            Pointer to the next page of Employee Wage results to fetch.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListTeamMemberWagesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesRequest.Builder.TeamMemberId(System.String)">
            <summary>
            TeamMemberId.
            </summary>
            <param name="teamMemberId"> teamMemberId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListTeamMemberWagesRequest. </returns>
        </member>
        <member name="T:Square.Models.ListTeamMemberWagesResponse">
            <summary>
            ListTeamMemberWagesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesResponse.#ctor(System.Collections.Generic.IList{Square.Models.TeamMemberWage},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListTeamMemberWagesResponse"/> class.
            </summary>
            <param name="teamMemberWages">team_member_wages.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.ListTeamMemberWagesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberWagesResponse.TeamMemberWages">
            <summary>
            A page of Team Member Wage results.
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberWagesResponse.Cursor">
            <summary>
            Value supplied in the subsequent request to fetch the next next page
            of Team Member Wage results.
            </summary>
        </member>
        <member name="P:Square.Models.ListTeamMemberWagesResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListTeamMemberWagesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesResponse.Builder.TeamMemberWages(System.Collections.Generic.IList{Square.Models.TeamMemberWage})">
            <summary>
            TeamMemberWages.
            </summary>
            <param name="teamMemberWages"> teamMemberWages. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTeamMemberWagesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListTeamMemberWagesResponse. </returns>
        </member>
        <member name="T:Square.Models.ListTransactionsRequest">
            <summary>
            ListTransactionsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListTransactionsRequest"/> class.
            </summary>
            <param name="beginTime">begin_time.</param>
            <param name="endTime">end_time.</param>
            <param name="sortOrder">sort_order.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListTransactionsRequest.BeginTime">
            <summary>
            The beginning of the requested reporting period, in RFC 3339 format.
            See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.
            Default value: The current time minus one year.
            </summary>
        </member>
        <member name="P:Square.Models.ListTransactionsRequest.EndTime">
            <summary>
            The end of the requested reporting period, in RFC 3339 format.
            See [Date ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for details on date inclusivity/exclusivity.
            Default value: The current time.
            </summary>
        </member>
        <member name="P:Square.Models.ListTransactionsRequest.SortOrder">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="P:Square.Models.ListTransactionsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.
            See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
            </summary>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListTransactionsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.Builder.BeginTime(System.String)">
            <summary>
            BeginTime.
            </summary>
            <param name="beginTime"> beginTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.Builder.EndTime(System.String)">
            <summary>
            EndTime.
            </summary>
            <param name="endTime"> endTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTransactionsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListTransactionsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListTransactionsResponse">
            <summary>
            ListTransactionsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListTransactionsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.Transaction},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListTransactionsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="transactions">transactions.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListTransactionsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListTransactionsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ListTransactionsResponse.Transactions">
            <summary>
            An array of transactions that match your query.
            </summary>
        </member>
        <member name="P:Square.Models.ListTransactionsResponse.Cursor">
            <summary>
            A pagination cursor for retrieving the next set of results,
            if any remain. Provide this value as the `cursor` parameter in a subsequent
            request to this endpoint.
            See [Paginating results](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
            </summary>
        </member>
        <member name="M:Square.Models.ListTransactionsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTransactionsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTransactionsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListTransactionsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListTransactionsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListTransactionsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListTransactionsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTransactionsResponse.Builder.Transactions(System.Collections.Generic.IList{Square.Models.Transaction})">
            <summary>
            Transactions.
            </summary>
            <param name="transactions"> transactions. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTransactionsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListTransactionsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListTransactionsResponse. </returns>
        </member>
        <member name="T:Square.Models.ListWorkweekConfigsRequest">
            <summary>
            ListWorkweekConfigsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsRequest.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListWorkweekConfigsRequest"/> class.
            </summary>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.ListWorkweekConfigsRequest.Limit">
            <summary>
            Maximum number of Workweek Configs to return per page.
            </summary>
        </member>
        <member name="P:Square.Models.ListWorkweekConfigsRequest.Cursor">
            <summary>
            Pointer to the next page of Workweek Config results to fetch.
            </summary>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListWorkweekConfigsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListWorkweekConfigsRequest. </returns>
        </member>
        <member name="T:Square.Models.ListWorkweekConfigsResponse">
            <summary>
            ListWorkweekConfigsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsResponse.#ctor(System.Collections.Generic.IList{Square.Models.WorkweekConfig},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ListWorkweekConfigsResponse"/> class.
            </summary>
            <param name="workweekConfigs">workweek_configs.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.ListWorkweekConfigsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ListWorkweekConfigsResponse.WorkweekConfigs">
            <summary>
            A page of Employee Wage results.
            </summary>
        </member>
        <member name="P:Square.Models.ListWorkweekConfigsResponse.Cursor">
            <summary>
            Value supplied in the subsequent request to fetch the next page of
            Employee Wage results.
            </summary>
        </member>
        <member name="P:Square.Models.ListWorkweekConfigsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ListWorkweekConfigsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsResponse.Builder.WorkweekConfigs(System.Collections.Generic.IList{Square.Models.WorkweekConfig})">
            <summary>
            WorkweekConfigs.
            </summary>
            <param name="workweekConfigs"> workweekConfigs. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ListWorkweekConfigsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ListWorkweekConfigsResponse. </returns>
        </member>
        <member name="T:Square.Models.Location">
            <summary>
            Location.
            </summary>
        </member>
        <member name="M:Square.Models.Location.#ctor(System.String,System.String,Square.Models.Address,System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.BusinessHours,System.String,System.String,System.String,System.String,System.String,Square.Models.Coordinates,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Location"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="name">name.</param>
            <param name="address">address.</param>
            <param name="timezone">timezone.</param>
            <param name="capabilities">capabilities.</param>
            <param name="status">status.</param>
            <param name="createdAt">created_at.</param>
            <param name="merchantId">merchant_id.</param>
            <param name="country">country.</param>
            <param name="languageCode">language_code.</param>
            <param name="currency">currency.</param>
            <param name="phoneNumber">phone_number.</param>
            <param name="businessName">business_name.</param>
            <param name="type">type.</param>
            <param name="websiteUrl">website_url.</param>
            <param name="businessHours">business_hours.</param>
            <param name="businessEmail">business_email.</param>
            <param name="description">description.</param>
            <param name="twitterUsername">twitter_username.</param>
            <param name="instagramUsername">instagram_username.</param>
            <param name="facebookUrl">facebook_url.</param>
            <param name="coordinates">coordinates.</param>
            <param name="logoUrl">logo_url.</param>
            <param name="posBackgroundUrl">pos_background_url.</param>
            <param name="mcc">mcc.</param>
            <param name="fullFormatLogoUrl">full_format_logo_url.</param>
        </member>
        <member name="P:Square.Models.Location.Id">
            <summary>
            The Square-issued ID of the location.
            </summary>
        </member>
        <member name="P:Square.Models.Location.Name">
            <summary>
            The name of the location.
            This information appears in the dashboard as the nickname.
            A location name must be unique within a seller account.
            </summary>
        </member>
        <member name="P:Square.Models.Location.Address">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.Location.Timezone">
            <summary>
            The [IANA Timezone](https://www.iana.org/time-zones) identifier for
            the timezone of the location.
            </summary>
        </member>
        <member name="P:Square.Models.Location.Capabilities">
            <summary>
            The Square features that are enabled for the location.
            See [LocationCapability]($m/LocationCapability) for possible values.
            See [LocationCapability](#type-locationcapability) for possible values
            </summary>
        </member>
        <member name="P:Square.Models.Location.Status">
            <summary>
            The status of the location, whether a location is active or inactive.
            </summary>
        </member>
        <member name="P:Square.Models.Location.CreatedAt">
            <summary>
            The time when the location was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Location.MerchantId">
            <summary>
            The ID of the merchant that owns the location.
            </summary>
        </member>
        <member name="P:Square.Models.Location.Country">
            <summary>
            Indicates the country associated with another entity, such as a business.
            Values are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).
            </summary>
        </member>
        <member name="P:Square.Models.Location.LanguageCode">
            <summary>
            The language associated with the location, in
            [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A).
            </summary>
        </member>
        <member name="P:Square.Models.Location.Currency">
            <summary>
            Indicates the associated currency for an amount of money. Values correspond
            to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
            </summary>
        </member>
        <member name="P:Square.Models.Location.PhoneNumber">
            <summary>
            The phone number of the location in human readable format.
            </summary>
        </member>
        <member name="P:Square.Models.Location.BusinessName">
            <summary>
            The business name of the location
            This is the name visible to the customers of the location.
            For example, this name appears on customer receipts.
            </summary>
        </member>
        <member name="P:Square.Models.Location.Type">
            <summary>
            A location's physical or mobile type.
            </summary>
        </member>
        <member name="P:Square.Models.Location.WebsiteUrl">
            <summary>
            The website URL of the location.
            </summary>
        </member>
        <member name="P:Square.Models.Location.BusinessHours">
            <summary>
            Represents the hours of operation for a business location.
            </summary>
        </member>
        <member name="P:Square.Models.Location.BusinessEmail">
            <summary>
            The email of the location.
            This email is visible to the customers of the location.
            For example, the email appears on customer receipts.
            </summary>
        </member>
        <member name="P:Square.Models.Location.Description">
            <summary>
            The description of the location.
            </summary>
        </member>
        <member name="P:Square.Models.Location.TwitterUsername">
            <summary>
            The Twitter username of the location without the '@' symbol.
            </summary>
        </member>
        <member name="P:Square.Models.Location.InstagramUsername">
            <summary>
            The Instagram username of the location without the '@' symbol.
            </summary>
        </member>
        <member name="P:Square.Models.Location.FacebookUrl">
            <summary>
            The Facebook profile URL of the location. The URL should begin with 'facebook.com/'.
            </summary>
        </member>
        <member name="P:Square.Models.Location.Coordinates">
            <summary>
            Latitude and longitude coordinates.
            </summary>
        </member>
        <member name="P:Square.Models.Location.LogoUrl">
            <summary>
            The URL of the logo image for the location. The Seller must choose this logo in the Seller
            dashboard (Receipts section) for the logo to appear on transactions (such as receipts, invoices)
            that Square generates on behalf of the Seller. This image should have an aspect ratio
            close to 1:1 and is recommended to be at least 200x200 pixels.
            </summary>
        </member>
        <member name="P:Square.Models.Location.PosBackgroundUrl">
            <summary>
            The URL of the Point of Sale background image for the location.
            </summary>
        </member>
        <member name="P:Square.Models.Location.Mcc">
            <summary>
            The merchant category code (MCC) of the location, as standardized by ISO 18245.
            The MCC describes the kind of goods or services sold at the location.
            </summary>
        </member>
        <member name="P:Square.Models.Location.FullFormatLogoUrl">
            <summary>
            The URL of a full-format logo image for the location. The Seller must choose this logo in the
            Seller dashboard (Receipts section) for the logo to appear on transactions (such as receipts, invoices)
            that Square generates on behalf of the Seller. This image can have an aspect ratio of 2:1 or greater
            and is recommended to be at least 1280x648 pixels.
            </summary>
        </member>
        <member name="M:Square.Models.Location.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Location.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Location.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Location.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Location.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Location.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Location.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Address(Square.Models.Address)">
            <summary>
            Address.
            </summary>
            <param name="address"> address. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Timezone(System.String)">
            <summary>
            Timezone.
            </summary>
            <param name="timezone"> timezone. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Capabilities(System.Collections.Generic.IList{System.String})">
            <summary>
            Capabilities.
            </summary>
            <param name="capabilities"> capabilities. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.MerchantId(System.String)">
            <summary>
            MerchantId.
            </summary>
            <param name="merchantId"> merchantId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Country(System.String)">
            <summary>
            Country.
            </summary>
            <param name="country"> country. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.LanguageCode(System.String)">
            <summary>
            LanguageCode.
            </summary>
            <param name="languageCode"> languageCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Currency(System.String)">
            <summary>
            Currency.
            </summary>
            <param name="currency"> currency. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.PhoneNumber(System.String)">
            <summary>
            PhoneNumber.
            </summary>
            <param name="phoneNumber"> phoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.BusinessName(System.String)">
            <summary>
            BusinessName.
            </summary>
            <param name="businessName"> businessName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.WebsiteUrl(System.String)">
            <summary>
            WebsiteUrl.
            </summary>
            <param name="websiteUrl"> websiteUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.BusinessHours(Square.Models.BusinessHours)">
            <summary>
            BusinessHours.
            </summary>
            <param name="businessHours"> businessHours. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.BusinessEmail(System.String)">
            <summary>
            BusinessEmail.
            </summary>
            <param name="businessEmail"> businessEmail. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.TwitterUsername(System.String)">
            <summary>
            TwitterUsername.
            </summary>
            <param name="twitterUsername"> twitterUsername. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.InstagramUsername(System.String)">
            <summary>
            InstagramUsername.
            </summary>
            <param name="instagramUsername"> instagramUsername. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.FacebookUrl(System.String)">
            <summary>
            FacebookUrl.
            </summary>
            <param name="facebookUrl"> facebookUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Coordinates(Square.Models.Coordinates)">
            <summary>
            Coordinates.
            </summary>
            <param name="coordinates"> coordinates. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.LogoUrl(System.String)">
            <summary>
            LogoUrl.
            </summary>
            <param name="logoUrl"> logoUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.PosBackgroundUrl(System.String)">
            <summary>
            PosBackgroundUrl.
            </summary>
            <param name="posBackgroundUrl"> posBackgroundUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Mcc(System.String)">
            <summary>
            Mcc.
            </summary>
            <param name="mcc"> mcc. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.FullFormatLogoUrl(System.String)">
            <summary>
            FullFormatLogoUrl.
            </summary>
            <param name="fullFormatLogoUrl"> fullFormatLogoUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Location.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Location. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyAccount">
            <summary>
            LoyaltyAccount.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,Square.Models.LoyaltyAccountMapping)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyAccount"/> class.
            </summary>
            <param name="programId">program_id.</param>
            <param name="id">id.</param>
            <param name="balance">balance.</param>
            <param name="lifetimePoints">lifetime_points.</param>
            <param name="customerId">customer_id.</param>
            <param name="enrolledAt">enrolled_at.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="mapping">mapping.</param>
        </member>
        <member name="P:Square.Models.LoyaltyAccount.Id">
            <summary>
            The Square-assigned ID of the loyalty account.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyAccount.ProgramId">
            <summary>
            The Square-assigned ID of the [loyalty program]($m/LoyaltyProgram) to which the account belongs.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyAccount.Balance">
            <summary>
            The available point balance in the loyalty account.
            Your application should be able to handle loyalty accounts that have a negative point balance (`balance` is less than 0). This might occur if a seller makes a manual adjustment or as a result of a refund or exchange.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyAccount.LifetimePoints">
            <summary>
            The total points accrued during the lifetime of the account.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyAccount.CustomerId">
            <summary>
            The Square-assigned ID of the [customer]($m/Customer) that is associated with the account.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyAccount.EnrolledAt">
            <summary>
            The timestamp when enrollment occurred, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyAccount.CreatedAt">
            <summary>
            The timestamp when the loyalty account was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyAccount.UpdatedAt">
            <summary>
            The timestamp when the loyalty account was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyAccount.Mapping">
            <summary>
            Represents the mapping that associates a loyalty account with a buyer.
            Currently, a loyalty account can only be mapped to a buyer by phone number. For more information, see
            [Loyalty Overview](https://developer.squareup.com/docs/loyalty/overview).
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyAccount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Builder.ProgramId(System.String)">
            <summary>
            ProgramId.
            </summary>
            <param name="programId"> programId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Builder.Balance(System.Nullable{System.Int32})">
            <summary>
            Balance.
            </summary>
            <param name="balance"> balance. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Builder.LifetimePoints(System.Nullable{System.Int32})">
            <summary>
            LifetimePoints.
            </summary>
            <param name="lifetimePoints"> lifetimePoints. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Builder.EnrolledAt(System.String)">
            <summary>
            EnrolledAt.
            </summary>
            <param name="enrolledAt"> enrolledAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Builder.Mapping(Square.Models.LoyaltyAccountMapping)">
            <summary>
            Mapping.
            </summary>
            <param name="mapping"> mapping. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyAccount. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyAccountMapping">
            <summary>
            LoyaltyAccountMapping.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyAccountMapping.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyAccountMapping"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="createdAt">created_at.</param>
            <param name="phoneNumber">phone_number.</param>
        </member>
        <member name="P:Square.Models.LoyaltyAccountMapping.Id">
            <summary>
            The Square-assigned ID of the mapping.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyAccountMapping.CreatedAt">
            <summary>
            The timestamp when the mapping was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyAccountMapping.PhoneNumber">
            <summary>
            The phone number of the buyer, in E.164 format. For example, "+14155551111".
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyAccountMapping.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyAccountMapping.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyAccountMapping.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyAccountMapping.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyAccountMapping.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyAccountMapping.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyAccountMapping.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccountMapping.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccountMapping.Builder.PhoneNumber(System.String)">
            <summary>
            PhoneNumber.
            </summary>
            <param name="phoneNumber"> phoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyAccountMapping.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyAccountMapping. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEvent">
            <summary>
            LoyaltyEvent.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.#ctor(System.String,System.String,System.String,System.String,System.String,Square.Models.LoyaltyEventAccumulatePoints,Square.Models.LoyaltyEventCreateReward,Square.Models.LoyaltyEventRedeemReward,Square.Models.LoyaltyEventDeleteReward,Square.Models.LoyaltyEventAdjustPoints,System.String,Square.Models.LoyaltyEventExpirePoints,Square.Models.LoyaltyEventOther)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEvent"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
            <param name="createdAt">created_at.</param>
            <param name="loyaltyAccountId">loyalty_account_id.</param>
            <param name="source">source.</param>
            <param name="accumulatePoints">accumulate_points.</param>
            <param name="createReward">create_reward.</param>
            <param name="redeemReward">redeem_reward.</param>
            <param name="deleteReward">delete_reward.</param>
            <param name="adjustPoints">adjust_points.</param>
            <param name="locationId">location_id.</param>
            <param name="expirePoints">expire_points.</param>
            <param name="otherEvent">other_event.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.Id">
            <summary>
            The Square-assigned ID of the loyalty event.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.Type">
            <summary>
            The type of the loyalty event.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.CreatedAt">
            <summary>
            The timestamp when the event was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.AccumulatePoints">
            <summary>
            Provides metadata when the event `type` is `ACCUMULATE_POINTS`.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.CreateReward">
            <summary>
            Provides metadata when the event `type` is `CREATE_REWARD`.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.RedeemReward">
            <summary>
            Provides metadata when the event `type` is `REDEEM_REWARD`.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.DeleteReward">
            <summary>
            Provides metadata when the event `type` is `DELETE_REWARD`.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.AdjustPoints">
            <summary>
            Provides metadata when the event `type` is `ADJUST_POINTS`.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.LoyaltyAccountId">
            <summary>
            The ID of the [loyalty account]($m/LoyaltyAccount) in which the event occurred.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.LocationId">
            <summary>
            The ID of the [location]($m/Location) where the event occurred.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.Source">
            <summary>
            Defines whether the event was generated by the Square Point of Sale.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.ExpirePoints">
            <summary>
            Provides metadata when the event `type` is `EXPIRE_POINTS`.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEvent.OtherEvent">
            <summary>
            Provides metadata when the event `type` is `OTHER`.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEvent.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.LoyaltyAccountId(System.String)">
            <summary>
            LoyaltyAccountId.
            </summary>
            <param name="loyaltyAccountId"> loyaltyAccountId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.Source(System.String)">
            <summary>
            Source.
            </summary>
            <param name="source"> source. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.AccumulatePoints(Square.Models.LoyaltyEventAccumulatePoints)">
            <summary>
            AccumulatePoints.
            </summary>
            <param name="accumulatePoints"> accumulatePoints. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.CreateReward(Square.Models.LoyaltyEventCreateReward)">
            <summary>
            CreateReward.
            </summary>
            <param name="createReward"> createReward. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.RedeemReward(Square.Models.LoyaltyEventRedeemReward)">
            <summary>
            RedeemReward.
            </summary>
            <param name="redeemReward"> redeemReward. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.DeleteReward(Square.Models.LoyaltyEventDeleteReward)">
            <summary>
            DeleteReward.
            </summary>
            <param name="deleteReward"> deleteReward. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.AdjustPoints(Square.Models.LoyaltyEventAdjustPoints)">
            <summary>
            AdjustPoints.
            </summary>
            <param name="adjustPoints"> adjustPoints. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.ExpirePoints(Square.Models.LoyaltyEventExpirePoints)">
            <summary>
            ExpirePoints.
            </summary>
            <param name="expirePoints"> expirePoints. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.OtherEvent(Square.Models.LoyaltyEventOther)">
            <summary>
            OtherEvent.
            </summary>
            <param name="otherEvent"> otherEvent. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEvent.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEvent. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventAccumulatePoints">
            <summary>
            LoyaltyEventAccumulatePoints.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventAccumulatePoints.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventAccumulatePoints"/> class.
            </summary>
            <param name="loyaltyProgramId">loyalty_program_id.</param>
            <param name="points">points.</param>
            <param name="orderId">order_id.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventAccumulatePoints.LoyaltyProgramId">
            <summary>
            The ID of the [loyalty program]($m/LoyaltyProgram).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventAccumulatePoints.Points">
            <summary>
            The number of points accumulated by the event.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventAccumulatePoints.OrderId">
            <summary>
            The ID of the [order]($m/Order) for which the buyer accumulated the points.
            This field is returned only if the Orders API is used to process orders.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventAccumulatePoints.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventAccumulatePoints.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventAccumulatePoints.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventAccumulatePoints.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventAccumulatePoints.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventAccumulatePoints.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventAccumulatePoints.Builder.LoyaltyProgramId(System.String)">
            <summary>
            LoyaltyProgramId.
            </summary>
            <param name="loyaltyProgramId"> loyaltyProgramId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventAccumulatePoints.Builder.Points(System.Nullable{System.Int32})">
            <summary>
            Points.
            </summary>
            <param name="points"> points. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventAccumulatePoints.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventAccumulatePoints.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventAccumulatePoints. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventAdjustPoints">
            <summary>
            LoyaltyEventAdjustPoints.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventAdjustPoints.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventAdjustPoints"/> class.
            </summary>
            <param name="points">points.</param>
            <param name="loyaltyProgramId">loyalty_program_id.</param>
            <param name="reason">reason.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventAdjustPoints.LoyaltyProgramId">
            <summary>
            The Square-assigned ID of the [loyalty program]($m/LoyaltyProgram).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventAdjustPoints.Points">
            <summary>
            The number of points added or removed.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventAdjustPoints.Reason">
            <summary>
            The reason for the adjustment of points.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventAdjustPoints.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventAdjustPoints.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventAdjustPoints.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventAdjustPoints.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventAdjustPoints.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventAdjustPoints.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventAdjustPoints.Builder.Points(System.Int32)">
            <summary>
            Points.
            </summary>
            <param name="points"> points. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventAdjustPoints.Builder.LoyaltyProgramId(System.String)">
            <summary>
            LoyaltyProgramId.
            </summary>
            <param name="loyaltyProgramId"> loyaltyProgramId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventAdjustPoints.Builder.Reason(System.String)">
            <summary>
            Reason.
            </summary>
            <param name="reason"> reason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventAdjustPoints.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventAdjustPoints. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventCreateReward">
            <summary>
            LoyaltyEventCreateReward.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventCreateReward.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventCreateReward"/> class.
            </summary>
            <param name="loyaltyProgramId">loyalty_program_id.</param>
            <param name="points">points.</param>
            <param name="rewardId">reward_id.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventCreateReward.LoyaltyProgramId">
            <summary>
            The ID of the [loyalty program]($m/LoyaltyProgram).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventCreateReward.RewardId">
            <summary>
            The Square-assigned ID of the created [loyalty reward]($m/LoyaltyReward).
            This field is returned only if the event source is `LOYALTY_API`.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventCreateReward.Points">
            <summary>
            The loyalty points used to create the reward.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventCreateReward.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventCreateReward.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventCreateReward.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventCreateReward.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventCreateReward.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventCreateReward.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventCreateReward.Builder.LoyaltyProgramId(System.String)">
            <summary>
            LoyaltyProgramId.
            </summary>
            <param name="loyaltyProgramId"> loyaltyProgramId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventCreateReward.Builder.Points(System.Int32)">
            <summary>
            Points.
            </summary>
            <param name="points"> points. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventCreateReward.Builder.RewardId(System.String)">
            <summary>
            RewardId.
            </summary>
            <param name="rewardId"> rewardId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventCreateReward.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventCreateReward. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventDateTimeFilter">
            <summary>
            LoyaltyEventDateTimeFilter.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventDateTimeFilter.#ctor(Square.Models.TimeRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventDateTimeFilter"/> class.
            </summary>
            <param name="createdAt">created_at.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventDateTimeFilter.CreatedAt">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventDateTimeFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventDateTimeFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventDateTimeFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventDateTimeFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventDateTimeFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventDateTimeFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventDateTimeFilter.Builder.CreatedAt(Square.Models.TimeRange)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventDateTimeFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventDateTimeFilter. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventDeleteReward">
            <summary>
            LoyaltyEventDeleteReward.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventDeleteReward.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventDeleteReward"/> class.
            </summary>
            <param name="loyaltyProgramId">loyalty_program_id.</param>
            <param name="points">points.</param>
            <param name="rewardId">reward_id.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventDeleteReward.LoyaltyProgramId">
            <summary>
            The ID of the [loyalty program]($m/LoyaltyProgram).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventDeleteReward.RewardId">
            <summary>
            The ID of the deleted [loyalty reward]($m/LoyaltyReward).
            This field is returned only if the event source is `LOYALTY_API`.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventDeleteReward.Points">
            <summary>
            The number of points returned to the loyalty account.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventDeleteReward.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventDeleteReward.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventDeleteReward.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventDeleteReward.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventDeleteReward.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventDeleteReward.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventDeleteReward.Builder.LoyaltyProgramId(System.String)">
            <summary>
            LoyaltyProgramId.
            </summary>
            <param name="loyaltyProgramId"> loyaltyProgramId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventDeleteReward.Builder.Points(System.Int32)">
            <summary>
            Points.
            </summary>
            <param name="points"> points. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventDeleteReward.Builder.RewardId(System.String)">
            <summary>
            RewardId.
            </summary>
            <param name="rewardId"> rewardId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventDeleteReward.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventDeleteReward. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventExpirePoints">
            <summary>
            LoyaltyEventExpirePoints.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventExpirePoints.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventExpirePoints"/> class.
            </summary>
            <param name="loyaltyProgramId">loyalty_program_id.</param>
            <param name="points">points.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventExpirePoints.LoyaltyProgramId">
            <summary>
            The Square-assigned ID of the [loyalty program]($m/LoyaltyProgram).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventExpirePoints.Points">
            <summary>
            The number of points expired.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventExpirePoints.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventExpirePoints.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventExpirePoints.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventExpirePoints.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventExpirePoints.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventExpirePoints.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventExpirePoints.Builder.LoyaltyProgramId(System.String)">
            <summary>
            LoyaltyProgramId.
            </summary>
            <param name="loyaltyProgramId"> loyaltyProgramId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventExpirePoints.Builder.Points(System.Int32)">
            <summary>
            Points.
            </summary>
            <param name="points"> points. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventExpirePoints.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventExpirePoints. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventFilter">
            <summary>
            LoyaltyEventFilter.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.#ctor(Square.Models.LoyaltyEventLoyaltyAccountFilter,Square.Models.LoyaltyEventTypeFilter,Square.Models.LoyaltyEventDateTimeFilter,Square.Models.LoyaltyEventLocationFilter,Square.Models.LoyaltyEventOrderFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventFilter"/> class.
            </summary>
            <param name="loyaltyAccountFilter">loyalty_account_filter.</param>
            <param name="typeFilter">type_filter.</param>
            <param name="dateTimeFilter">date_time_filter.</param>
            <param name="locationFilter">location_filter.</param>
            <param name="orderFilter">order_filter.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventFilter.LoyaltyAccountFilter">
            <summary>
            Filter events by loyalty account.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventFilter.TypeFilter">
            <summary>
            Filter events by event type.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventFilter.DateTimeFilter">
            <summary>
            Filter events by date time range.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventFilter.LocationFilter">
            <summary>
            Filter events by location.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventFilter.OrderFilter">
            <summary>
            Filter events by the order associated with the event.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.Builder.LoyaltyAccountFilter(Square.Models.LoyaltyEventLoyaltyAccountFilter)">
            <summary>
            LoyaltyAccountFilter.
            </summary>
            <param name="loyaltyAccountFilter"> loyaltyAccountFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.Builder.TypeFilter(Square.Models.LoyaltyEventTypeFilter)">
            <summary>
            TypeFilter.
            </summary>
            <param name="typeFilter"> typeFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.Builder.DateTimeFilter(Square.Models.LoyaltyEventDateTimeFilter)">
            <summary>
            DateTimeFilter.
            </summary>
            <param name="dateTimeFilter"> dateTimeFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.Builder.LocationFilter(Square.Models.LoyaltyEventLocationFilter)">
            <summary>
            LocationFilter.
            </summary>
            <param name="locationFilter"> locationFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.Builder.OrderFilter(Square.Models.LoyaltyEventOrderFilter)">
            <summary>
            OrderFilter.
            </summary>
            <param name="orderFilter"> orderFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventFilter. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventLocationFilter">
            <summary>
            LoyaltyEventLocationFilter.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventLocationFilter.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventLocationFilter"/> class.
            </summary>
            <param name="locationIds">location_ids.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventLocationFilter.LocationIds">
            <summary>
            The [location]($m/Location) IDs for loyalty events to query.
            If multiple values are specified, the endpoint uses
            a logical OR to combine them.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventLocationFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventLocationFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventLocationFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventLocationFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventLocationFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventLocationFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventLocationFilter.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventLocationFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventLocationFilter. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventLoyaltyAccountFilter">
            <summary>
            LoyaltyEventLoyaltyAccountFilter.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventLoyaltyAccountFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventLoyaltyAccountFilter"/> class.
            </summary>
            <param name="loyaltyAccountId">loyalty_account_id.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventLoyaltyAccountFilter.LoyaltyAccountId">
            <summary>
            The ID of the [loyalty account]($m/LoyaltyAccount) associated with loyalty events.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventLoyaltyAccountFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventLoyaltyAccountFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventLoyaltyAccountFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventLoyaltyAccountFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventLoyaltyAccountFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventLoyaltyAccountFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventLoyaltyAccountFilter.Builder.LoyaltyAccountId(System.String)">
            <summary>
            LoyaltyAccountId.
            </summary>
            <param name="loyaltyAccountId"> loyaltyAccountId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventLoyaltyAccountFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventLoyaltyAccountFilter. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventOrderFilter">
            <summary>
            LoyaltyEventOrderFilter.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventOrderFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventOrderFilter"/> class.
            </summary>
            <param name="orderId">order_id.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventOrderFilter.OrderId">
            <summary>
            The ID of the [order]($m/Order) associated with the event.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventOrderFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventOrderFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventOrderFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventOrderFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventOrderFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventOrderFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventOrderFilter.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventOrderFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventOrderFilter. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventOther">
            <summary>
            LoyaltyEventOther.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventOther.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventOther"/> class.
            </summary>
            <param name="loyaltyProgramId">loyalty_program_id.</param>
            <param name="points">points.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventOther.LoyaltyProgramId">
            <summary>
            The Square-assigned ID of the [loyalty program]($m/LoyaltyProgram).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventOther.Points">
            <summary>
            The number of points added or removed.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventOther.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventOther.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventOther.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventOther.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventOther.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventOther.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventOther.Builder.LoyaltyProgramId(System.String)">
            <summary>
            LoyaltyProgramId.
            </summary>
            <param name="loyaltyProgramId"> loyaltyProgramId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventOther.Builder.Points(System.Int32)">
            <summary>
            Points.
            </summary>
            <param name="points"> points. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventOther.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventOther. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventQuery">
            <summary>
            LoyaltyEventQuery.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventQuery.#ctor(Square.Models.LoyaltyEventFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventQuery"/> class.
            </summary>
            <param name="filter">filter.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventQuery.Filter">
            <summary>
            The filtering criteria. If the request specifies multiple filters,
            the endpoint uses a logical AND to evaluate them.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventQuery.Builder.Filter(Square.Models.LoyaltyEventFilter)">
            <summary>
            Filter.
            </summary>
            <param name="filter"> filter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventQuery. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventRedeemReward">
            <summary>
            LoyaltyEventRedeemReward.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventRedeemReward.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventRedeemReward"/> class.
            </summary>
            <param name="loyaltyProgramId">loyalty_program_id.</param>
            <param name="rewardId">reward_id.</param>
            <param name="orderId">order_id.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventRedeemReward.LoyaltyProgramId">
            <summary>
            The ID of the [loyalty program]($m/LoyaltyProgram).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventRedeemReward.RewardId">
            <summary>
            The ID of the redeemed [loyalty reward]($m/LoyaltyReward).
            This field is returned only if the event source is `LOYALTY_API`.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyEventRedeemReward.OrderId">
            <summary>
            The ID of the [order]($m/Order) that redeemed the reward.
            This field is returned only if the Orders API is used to process orders.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventRedeemReward.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventRedeemReward.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventRedeemReward.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventRedeemReward.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventRedeemReward.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventRedeemReward.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventRedeemReward.Builder.LoyaltyProgramId(System.String)">
            <summary>
            LoyaltyProgramId.
            </summary>
            <param name="loyaltyProgramId"> loyaltyProgramId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventRedeemReward.Builder.RewardId(System.String)">
            <summary>
            RewardId.
            </summary>
            <param name="rewardId"> rewardId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventRedeemReward.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventRedeemReward.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventRedeemReward. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventTypeFilter">
            <summary>
            LoyaltyEventTypeFilter.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventTypeFilter.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyEventTypeFilter"/> class.
            </summary>
            <param name="types">types.</param>
        </member>
        <member name="P:Square.Models.LoyaltyEventTypeFilter.Types">
            <summary>
            The loyalty event types used to filter the result.
            If multiple values are specified, the endpoint uses a
            logical OR to combine them.
            See [LoyaltyEventType](#type-loyaltyeventtype) for possible values
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventTypeFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventTypeFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventTypeFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyEventTypeFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyEventTypeFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyEventTypeFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyEventTypeFilter.Builder.Types(System.Collections.Generic.IList{System.String})">
            <summary>
            Types.
            </summary>
            <param name="types"> types. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyEventTypeFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyEventTypeFilter. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgram">
            <summary>
            LoyaltyProgram.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.#ctor(System.String,System.String,System.Collections.Generic.IList{Square.Models.LoyaltyProgramRewardTier},Square.Models.LoyaltyProgramTerminology,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{Square.Models.LoyaltyProgramAccrualRule},Square.Models.LoyaltyProgramExpirationPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyProgram"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="status">status.</param>
            <param name="rewardTiers">reward_tiers.</param>
            <param name="terminology">terminology.</param>
            <param name="locationIds">location_ids.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="accrualRules">accrual_rules.</param>
            <param name="expirationPolicy">expiration_policy.</param>
        </member>
        <member name="P:Square.Models.LoyaltyProgram.Id">
            <summary>
            The Square-assigned ID of the loyalty program. Updates to
            the loyalty program do not modify the identifier.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgram.Status">
            <summary>
            Indicates whether the program is currently active.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgram.RewardTiers">
            <summary>
            The list of rewards for buyers, sorted by ascending points.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgram.ExpirationPolicy">
            <summary>
            Describes when the loyalty program expires.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgram.Terminology">
            <summary>
            Gets or sets Terminology.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgram.LocationIds">
            <summary>
            The [locations]($m/Location) at which the program is active.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgram.CreatedAt">
            <summary>
            The timestamp when the program was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgram.UpdatedAt">
            <summary>
            The timestamp when the reward was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgram.AccrualRules">
            <summary>
            Defines how buyers can earn loyalty points.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgram.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Builder.RewardTiers(System.Collections.Generic.IList{Square.Models.LoyaltyProgramRewardTier})">
            <summary>
            RewardTiers.
            </summary>
            <param name="rewardTiers"> rewardTiers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Builder.Terminology(Square.Models.LoyaltyProgramTerminology)">
            <summary>
            Terminology.
            </summary>
            <param name="terminology"> terminology. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Builder.AccrualRules(System.Collections.Generic.IList{Square.Models.LoyaltyProgramAccrualRule})">
            <summary>
            AccrualRules.
            </summary>
            <param name="accrualRules"> accrualRules. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Builder.ExpirationPolicy(Square.Models.LoyaltyProgramExpirationPolicy)">
            <summary>
            ExpirationPolicy.
            </summary>
            <param name="expirationPolicy"> expirationPolicy. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgram.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyProgram. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgramAccrualRule">
            <summary>
            LoyaltyProgramAccrualRule.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.#ctor(System.String,System.Nullable{System.Int32},Square.Models.Money,Square.Models.Money,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyProgramAccrualRule"/> class.
            </summary>
            <param name="accrualType">accrual_type.</param>
            <param name="points">points.</param>
            <param name="visitMinimumAmountMoney">visit_minimum_amount_money.</param>
            <param name="spendAmountMoney">spend_amount_money.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
        </member>
        <member name="P:Square.Models.LoyaltyProgramAccrualRule.AccrualType">
            <summary>
            The type of the accrual rule that defines how buyers can earn points.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramAccrualRule.Points">
            <summary>
            The number of points that
            buyers earn based on the `accrual_type`.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramAccrualRule.VisitMinimumAmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramAccrualRule.SpendAmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramAccrualRule.CatalogObjectId">
            <summary>
            The ID of the [catalog object]($m/CatalogObject) to purchase to earn the number of points defined by the
            rule. This is either an item variation or a category, depending on the type. This is defined on
            `ITEM_VARIATION` rules and `CATEGORY` rules.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgramAccrualRule.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.Builder.AccrualType(System.String)">
            <summary>
            AccrualType.
            </summary>
            <param name="accrualType"> accrualType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.Builder.Points(System.Nullable{System.Int32})">
            <summary>
            Points.
            </summary>
            <param name="points"> points. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.Builder.VisitMinimumAmountMoney(Square.Models.Money)">
            <summary>
            VisitMinimumAmountMoney.
            </summary>
            <param name="visitMinimumAmountMoney"> visitMinimumAmountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.Builder.SpendAmountMoney(Square.Models.Money)">
            <summary>
            SpendAmountMoney.
            </summary>
            <param name="spendAmountMoney"> spendAmountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramAccrualRule.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyProgramAccrualRule. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgramExpirationPolicy">
            <summary>
            LoyaltyProgramExpirationPolicy.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramExpirationPolicy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyProgramExpirationPolicy"/> class.
            </summary>
            <param name="expirationDuration">expiration_duration.</param>
        </member>
        <member name="P:Square.Models.LoyaltyProgramExpirationPolicy.ExpirationDuration">
            <summary>
            The duration of time before points expire, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramExpirationPolicy.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramExpirationPolicy.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramExpirationPolicy.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramExpirationPolicy.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyProgramExpirationPolicy.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgramExpirationPolicy.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramExpirationPolicy.Builder.ExpirationDuration(System.String)">
            <summary>
            ExpirationDuration.
            </summary>
            <param name="expirationDuration"> expirationDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramExpirationPolicy.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyProgramExpirationPolicy. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgramRewardDefinition">
            <summary>
            LoyaltyProgramRewardDefinition.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Square.Models.Money,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyProgramRewardDefinition"/> class.
            </summary>
            <param name="scope">scope.</param>
            <param name="discountType">discount_type.</param>
            <param name="percentageDiscount">percentage_discount.</param>
            <param name="catalogObjectIds">catalog_object_ids.</param>
            <param name="fixedDiscountMoney">fixed_discount_money.</param>
            <param name="maxDiscountMoney">max_discount_money.</param>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardDefinition.Scope">
            <summary>
            Indicates the scope of the reward tier. DEPRECATED at version 2020-12-16. Discount details
            are now defined using a catalog pricing rule and other catalog objects. For more information, see
            [Get discount details for the reward](https://developer.squareup.com/docs/loyalty-api/overview#get-discount-details).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardDefinition.DiscountType">
            <summary>
            The type of discount the reward tier offers. DEPRECATED at version 2020-12-16. Discount details
            are now defined using a catalog pricing rule and other catalog objects. For more information, see
            [Get discount details for the reward](https://developer.squareup.com/docs/loyalty-api/overview#get-discount-details).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardDefinition.PercentageDiscount">
            <summary>
            The fixed percentage of the discount. Present if `discount_type` is `FIXED_PERCENTAGE`.
            For example, a 7.25% off discount will be represented as "7.25". DEPRECATED at version 2020-12-16. You can find this
            information in the `discount_data.percentage` field of the `DISCOUNT` catalog object referenced by the pricing rule.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardDefinition.CatalogObjectIds">
            <summary>
            The list of catalog objects to which this reward can be applied. They are either all item-variation ids or category ids, depending on the `type` field.
            DEPRECATED at version 2020-12-16. You can find this information in the `product_set_data.product_ids_any` field
            of the `PRODUCT_SET` catalog object referenced by the pricing rule.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardDefinition.FixedDiscountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardDefinition.MaxDiscountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgramRewardDefinition.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.Builder.Scope(System.String)">
            <summary>
            Scope.
            </summary>
            <param name="scope"> scope. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.Builder.DiscountType(System.String)">
            <summary>
            DiscountType.
            </summary>
            <param name="discountType"> discountType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.Builder.PercentageDiscount(System.String)">
            <summary>
            PercentageDiscount.
            </summary>
            <param name="percentageDiscount"> percentageDiscount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.Builder.CatalogObjectIds(System.Collections.Generic.IList{System.String})">
            <summary>
            CatalogObjectIds.
            </summary>
            <param name="catalogObjectIds"> catalogObjectIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.Builder.FixedDiscountMoney(Square.Models.Money)">
            <summary>
            FixedDiscountMoney.
            </summary>
            <param name="fixedDiscountMoney"> fixedDiscountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.Builder.MaxDiscountMoney(Square.Models.Money)">
            <summary>
            MaxDiscountMoney.
            </summary>
            <param name="maxDiscountMoney"> maxDiscountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardDefinition.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyProgramRewardDefinition. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgramRewardTier">
            <summary>
            LoyaltyProgramRewardTier.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.#ctor(System.String,System.Int32,System.String,Square.Models.LoyaltyProgramRewardDefinition,System.String,Square.Models.CatalogObjectReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyProgramRewardTier"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="points">points.</param>
            <param name="name">name.</param>
            <param name="definition">definition.</param>
            <param name="createdAt">created_at.</param>
            <param name="pricingRuleReference">pricing_rule_reference.</param>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardTier.Id">
            <summary>
            The Square-assigned ID of the reward tier.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardTier.Points">
            <summary>
            The points exchanged for the reward tier.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardTier.Name">
            <summary>
            The name of the reward tier.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardTier.Definition">
            <summary>
            Provides details about the reward tier discount. DEPRECATED at version 2020-12-16. Discount details
            are now defined using a catalog pricing rule and other catalog objects. For more information, see
            [Get discount details for the reward](https://developer.squareup.com/docs/loyalty-api/overview#get-discount-details).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardTier.CreatedAt">
            <summary>
            The timestamp when the reward tier was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramRewardTier.PricingRuleReference">
            <summary>
            A reference to a Catalog object at a specific version. In general this is
            used as an entry point into a graph of catalog objects, where the objects exist
            at a specific version.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgramRewardTier.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.Builder.Points(System.Int32)">
            <summary>
            Points.
            </summary>
            <param name="points"> points. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.Builder.Definition(Square.Models.LoyaltyProgramRewardDefinition)">
            <summary>
            Definition.
            </summary>
            <param name="definition"> definition. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.Builder.PricingRuleReference(Square.Models.CatalogObjectReference)">
            <summary>
            PricingRuleReference.
            </summary>
            <param name="pricingRuleReference"> pricingRuleReference. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramRewardTier.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyProgramRewardTier. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgramTerminology">
            <summary>
            LoyaltyProgramTerminology.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramTerminology.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyProgramTerminology"/> class.
            </summary>
            <param name="one">one.</param>
            <param name="other">other.</param>
        </member>
        <member name="P:Square.Models.LoyaltyProgramTerminology.One">
            <summary>
            A singular unit for a point (for example, 1 point is called 1 star).
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyProgramTerminology.Other">
            <summary>
            A plural unit for point (for example, 10 points is called 10 stars).
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramTerminology.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramTerminology.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramTerminology.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyProgramTerminology.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyProgramTerminology.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyProgramTerminology.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyProgramTerminology.Builder.One(System.String)">
            <summary>
            One.
            </summary>
            <param name="one"> one. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramTerminology.Builder.Other(System.String)">
            <summary>
            Other.
            </summary>
            <param name="other"> other. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyProgramTerminology.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyProgramTerminology. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyReward">
            <summary>
            LoyaltyReward.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyReward.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.LoyaltyReward"/> class.
            </summary>
            <param name="loyaltyAccountId">loyalty_account_id.</param>
            <param name="rewardTierId">reward_tier_id.</param>
            <param name="id">id.</param>
            <param name="status">status.</param>
            <param name="points">points.</param>
            <param name="orderId">order_id.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="redeemedAt">redeemed_at.</param>
        </member>
        <member name="P:Square.Models.LoyaltyReward.Id">
            <summary>
            The Square-assigned ID of the loyalty reward.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyReward.Status">
            <summary>
            The status of the loyalty reward.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyReward.LoyaltyAccountId">
            <summary>
            The Square-assigned ID of the [loyalty account]($m/LoyaltyAccount) to which the reward belongs.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyReward.RewardTierId">
            <summary>
            The Square-assigned ID of the [reward tier]($m/LoyaltyProgramRewardTier) used to create the reward.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyReward.Points">
            <summary>
            The number of loyalty points used for the reward.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyReward.OrderId">
            <summary>
            The Square-assigned ID of the [order]($m/Order) to which the reward is attached.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyReward.CreatedAt">
            <summary>
            The timestamp when the reward was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyReward.UpdatedAt">
            <summary>
            The timestamp when the reward was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.LoyaltyReward.RedeemedAt">
            <summary>
            The timestamp when the reward was redeemed, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyReward.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyReward.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.LoyaltyReward.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.LoyaltyReward.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.LoyaltyReward.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Builder.LoyaltyAccountId(System.String)">
            <summary>
            LoyaltyAccountId.
            </summary>
            <param name="loyaltyAccountId"> loyaltyAccountId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Builder.RewardTierId(System.String)">
            <summary>
            RewardTierId.
            </summary>
            <param name="rewardTierId"> rewardTierId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Builder.Points(System.Nullable{System.Int32})">
            <summary>
            Points.
            </summary>
            <param name="points"> points. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Builder.RedeemedAt(System.String)">
            <summary>
            RedeemedAt.
            </summary>
            <param name="redeemedAt"> redeemedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.LoyaltyReward.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> LoyaltyReward. </returns>
        </member>
        <member name="T:Square.Models.MeasurementUnit">
            <summary>
            MeasurementUnit.
            </summary>
        </member>
        <member name="M:Square.Models.MeasurementUnit.#ctor(Square.Models.MeasurementUnitCustom,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.MeasurementUnit"/> class.
            </summary>
            <param name="customUnit">custom_unit.</param>
            <param name="areaUnit">area_unit.</param>
            <param name="lengthUnit">length_unit.</param>
            <param name="volumeUnit">volume_unit.</param>
            <param name="weightUnit">weight_unit.</param>
            <param name="genericUnit">generic_unit.</param>
            <param name="timeUnit">time_unit.</param>
            <param name="type">type.</param>
        </member>
        <member name="P:Square.Models.MeasurementUnit.CustomUnit">
            <summary>
            The information needed to define a custom unit, provided by the seller.
            </summary>
        </member>
        <member name="P:Square.Models.MeasurementUnit.AreaUnit">
            <summary>
            Unit of area used to measure a quantity.
            </summary>
        </member>
        <member name="P:Square.Models.MeasurementUnit.LengthUnit">
            <summary>
            The unit of length used to measure a quantity.
            </summary>
        </member>
        <member name="P:Square.Models.MeasurementUnit.VolumeUnit">
            <summary>
            The unit of volume used to measure a quantity.
            </summary>
        </member>
        <member name="P:Square.Models.MeasurementUnit.WeightUnit">
            <summary>
            Unit of weight used to measure a quantity.
            </summary>
        </member>
        <member name="P:Square.Models.MeasurementUnit.GenericUnit">
            <summary>
            Gets or sets GenericUnit.
            </summary>
        </member>
        <member name="P:Square.Models.MeasurementUnit.TimeUnit">
            <summary>
            Unit of time used to measure a quantity (a duration).
            </summary>
        </member>
        <member name="P:Square.Models.MeasurementUnit.Type">
            <summary>
            Describes the type of this unit and indicates which field contains the unit information. This is an ‘open’ enum.
            </summary>
        </member>
        <member name="M:Square.Models.MeasurementUnit.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.MeasurementUnit.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.MeasurementUnit.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.MeasurementUnit.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.MeasurementUnit.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.MeasurementUnit.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.MeasurementUnit.Builder.CustomUnit(Square.Models.MeasurementUnitCustom)">
            <summary>
            CustomUnit.
            </summary>
            <param name="customUnit"> customUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.MeasurementUnit.Builder.AreaUnit(System.String)">
            <summary>
            AreaUnit.
            </summary>
            <param name="areaUnit"> areaUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.MeasurementUnit.Builder.LengthUnit(System.String)">
            <summary>
            LengthUnit.
            </summary>
            <param name="lengthUnit"> lengthUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.MeasurementUnit.Builder.VolumeUnit(System.String)">
            <summary>
            VolumeUnit.
            </summary>
            <param name="volumeUnit"> volumeUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.MeasurementUnit.Builder.WeightUnit(System.String)">
            <summary>
            WeightUnit.
            </summary>
            <param name="weightUnit"> weightUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.MeasurementUnit.Builder.GenericUnit(System.String)">
            <summary>
            GenericUnit.
            </summary>
            <param name="genericUnit"> genericUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.MeasurementUnit.Builder.TimeUnit(System.String)">
            <summary>
            TimeUnit.
            </summary>
            <param name="timeUnit"> timeUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.MeasurementUnit.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.MeasurementUnit.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> MeasurementUnit. </returns>
        </member>
        <member name="T:Square.Models.MeasurementUnitCustom">
            <summary>
            MeasurementUnitCustom.
            </summary>
        </member>
        <member name="M:Square.Models.MeasurementUnitCustom.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.MeasurementUnitCustom"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="abbreviation">abbreviation.</param>
        </member>
        <member name="P:Square.Models.MeasurementUnitCustom.Name">
            <summary>
            The name of the custom unit, for example "bushel".
            </summary>
        </member>
        <member name="P:Square.Models.MeasurementUnitCustom.Abbreviation">
            <summary>
            The abbreviation of the custom unit, such as "bsh" (bushel). This appears
            in the cart for the Point of Sale app, and in reports.
            </summary>
        </member>
        <member name="M:Square.Models.MeasurementUnitCustom.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.MeasurementUnitCustom.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.MeasurementUnitCustom.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.MeasurementUnitCustom.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.MeasurementUnitCustom.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.MeasurementUnitCustom.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.MeasurementUnitCustom.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.MeasurementUnitCustom.Builder.Abbreviation(System.String)">
            <summary>
            Abbreviation.
            </summary>
            <param name="abbreviation"> abbreviation. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.MeasurementUnitCustom.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> MeasurementUnitCustom. </returns>
        </member>
        <member name="T:Square.Models.Merchant">
            <summary>
            Merchant.
            </summary>
        </member>
        <member name="M:Square.Models.Merchant.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Merchant"/> class.
            </summary>
            <param name="country">country.</param>
            <param name="id">id.</param>
            <param name="businessName">business_name.</param>
            <param name="languageCode">language_code.</param>
            <param name="currency">currency.</param>
            <param name="status">status.</param>
            <param name="mainLocationId">main_location_id.</param>
        </member>
        <member name="P:Square.Models.Merchant.Id">
            <summary>
            The Square-issued ID of the merchant.
            </summary>
        </member>
        <member name="P:Square.Models.Merchant.BusinessName">
            <summary>
            The business name of the merchant.
            </summary>
        </member>
        <member name="P:Square.Models.Merchant.Country">
            <summary>
            Indicates the country associated with another entity, such as a business.
            Values are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).
            </summary>
        </member>
        <member name="P:Square.Models.Merchant.LanguageCode">
            <summary>
            The language code associated with the merchant account, in BCP 47 format.
            </summary>
        </member>
        <member name="P:Square.Models.Merchant.Currency">
            <summary>
            Indicates the associated currency for an amount of money. Values correspond
            to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
            </summary>
        </member>
        <member name="P:Square.Models.Merchant.Status">
            <summary>
            Gets or sets Status.
            </summary>
        </member>
        <member name="P:Square.Models.Merchant.MainLocationId">
            <summary>
            The ID of the main `Location` for this merchant.
            </summary>
        </member>
        <member name="M:Square.Models.Merchant.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Merchant.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Merchant.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Merchant.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Merchant.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Merchant.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Merchant.Builder.Country(System.String)">
            <summary>
            Country.
            </summary>
            <param name="country"> country. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Merchant.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Merchant.Builder.BusinessName(System.String)">
            <summary>
            BusinessName.
            </summary>
            <param name="businessName"> businessName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Merchant.Builder.LanguageCode(System.String)">
            <summary>
            LanguageCode.
            </summary>
            <param name="languageCode"> languageCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Merchant.Builder.Currency(System.String)">
            <summary>
            Currency.
            </summary>
            <param name="currency"> currency. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Merchant.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Merchant.Builder.MainLocationId(System.String)">
            <summary>
            MainLocationId.
            </summary>
            <param name="mainLocationId"> mainLocationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Merchant.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Merchant. </returns>
        </member>
        <member name="T:Square.Models.Money">
            <summary>
            Money.
            </summary>
        </member>
        <member name="M:Square.Models.Money.#ctor(System.Nullable{System.Int64},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Money"/> class.
            </summary>
            <param name="amount">amount.</param>
            <param name="currency">currency.</param>
        </member>
        <member name="P:Square.Models.Money.Amount">
            <summary>
            The amount of money, in the smallest denomination of the currency
            indicated by `currency`. For example, when `currency` is `USD`, `amount` is
            in cents. Monetary amounts can be positive or negative. See the specific
            field description to determine the meaning of the sign in a particular case.
            </summary>
        </member>
        <member name="P:Square.Models.Money.Currency">
            <summary>
            Indicates the associated currency for an amount of money. Values correspond
            to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
            </summary>
        </member>
        <member name="M:Square.Models.Money.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Money.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Money.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Money.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Money.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Money.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Money.Builder.Amount(System.Nullable{System.Int64})">
            <summary>
            Amount.
            </summary>
            <param name="amount"> amount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Money.Builder.Currency(System.String)">
            <summary>
            Currency.
            </summary>
            <param name="currency"> currency. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Money.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Money. </returns>
        </member>
        <member name="T:Square.Models.ObtainTokenRequest">
            <summary>
            ObtainTokenRequest.
            </summary>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ObtainTokenRequest"/> class.
            </summary>
            <param name="clientId">client_id.</param>
            <param name="clientSecret">client_secret.</param>
            <param name="grantType">grant_type.</param>
            <param name="code">code.</param>
            <param name="redirectUri">redirect_uri.</param>
            <param name="refreshToken">refresh_token.</param>
            <param name="migrationToken">migration_token.</param>
            <param name="scopes">scopes.</param>
            <param name="shortLived">short_lived.</param>
        </member>
        <member name="P:Square.Models.ObtainTokenRequest.ClientId">
            <summary>
            The Square-issued ID of your application, available from the
            [application dashboard](https://connect.squareup.com/apps).
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenRequest.ClientSecret">
            <summary>
            The Square-issued application secret for your application, available
            from the [application dashboard](https://connect.squareup.com/apps).
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenRequest.Code">
            <summary>
            The authorization code to exchange.
            This is required if `grant_type` is set to `authorization_code`, to indicate that
            the application wants to exchange an authorization code for an OAuth access token.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenRequest.RedirectUri">
            <summary>
            The redirect URL assigned in the [application dashboard](https://connect.squareup.com/apps).
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenRequest.GrantType">
            <summary>
            Specifies the method to request an OAuth access token.
            Valid values are: `authorization_code`, `refresh_token`, and `migration_token`
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenRequest.RefreshToken">
            <summary>
            A valid refresh token for generating a new OAuth access token.
            A valid refresh token is required if `grant_type` is set to `refresh_token` ,
            to indicate the application wants a replacement for an expired OAuth access token.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenRequest.MigrationToken">
            <summary>
            Legacy OAuth access token obtained using a Connect API version prior
            to 2019-03-13. This parameter is required if `grant_type` is set to
            `migration_token` to indicate that the application wants to get a replacement
            OAuth access token. The response also returns a refresh token.
            For more information, see [Migrate to Using Refresh Tokens](https://developer.squareup.com/docs/oauth-api/migrate-to-refresh-tokens).
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenRequest.Scopes">
            <summary>
            __OPTIONAL__
            A JSON list of strings representing the permissions the application is requesting.
            For example: "`["MERCHANT_PROFILE_READ","PAYMENTS_READ","BANK_ACCOUNTS_READ"]`"
            The access token returned in the response is granted the permissions
            that comprise the intersection between the requested list of permissions, and those
            that belong to the provided refresh token.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenRequest.ShortLived">
            <summary>
            __OPTIONAL__
            A boolean indicating a request for a short-lived access token.
            The short-lived access token returned in the response will expire in 24 hours.
            </summary>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ObtainTokenRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Builder.ClientId(System.String)">
            <summary>
            ClientId.
            </summary>
            <param name="clientId"> clientId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Builder.ClientSecret(System.String)">
            <summary>
            ClientSecret.
            </summary>
            <param name="clientSecret"> clientSecret. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Builder.GrantType(System.String)">
            <summary>
            GrantType.
            </summary>
            <param name="grantType"> grantType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Builder.Code(System.String)">
            <summary>
            Code.
            </summary>
            <param name="code"> code. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Builder.RedirectUri(System.String)">
            <summary>
            RedirectUri.
            </summary>
            <param name="redirectUri"> redirectUri. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Builder.RefreshToken(System.String)">
            <summary>
            RefreshToken.
            </summary>
            <param name="refreshToken"> refreshToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Builder.MigrationToken(System.String)">
            <summary>
            MigrationToken.
            </summary>
            <param name="migrationToken"> migrationToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Builder.Scopes(System.Collections.Generic.IList{System.String})">
            <summary>
            Scopes.
            </summary>
            <param name="scopes"> scopes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Builder.ShortLived(System.Nullable{System.Boolean})">
            <summary>
            ShortLived.
            </summary>
            <param name="shortLived"> shortLived. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ObtainTokenRequest. </returns>
        </member>
        <member name="T:Square.Models.ObtainTokenResponse">
            <summary>
            ObtainTokenResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ObtainTokenResponse"/> class.
            </summary>
            <param name="accessToken">access_token.</param>
            <param name="tokenType">token_type.</param>
            <param name="expiresAt">expires_at.</param>
            <param name="merchantId">merchant_id.</param>
            <param name="subscriptionId">subscription_id.</param>
            <param name="planId">plan_id.</param>
            <param name="idToken">id_token.</param>
            <param name="refreshToken">refresh_token.</param>
            <param name="shortLived">short_lived.</param>
        </member>
        <member name="P:Square.Models.ObtainTokenResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenResponse.AccessToken">
            <summary>
            A valid OAuth access token. OAuth access tokens are 64 bytes long.
            Provide the access token in a header with every request to Connect API
            endpoints. See [OAuth API: Walkthrough](https://developer.squareup.com/docs/oauth-api/walkthrough)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenResponse.TokenType">
            <summary>
            This value is always _bearer_.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenResponse.ExpiresAt">
            <summary>
            The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenResponse.MerchantId">
            <summary>
            The ID of the authorizing merchant's business.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenResponse.SubscriptionId">
            <summary>
            __LEGACY FIELD__. The ID of a subscription plan the merchant signed up
            for. Only present if the merchant signed up for a subscription during authorization.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenResponse.PlanId">
            <summary>
            __LEGACY FIELD__. The ID of the subscription plan the merchant signed
            up for. Only present if the merchant signed up for a subscription during
            authorization.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenResponse.IdToken">
            <summary>
            Then OpenID token belonging to this this person. Only present if the
            OPENID scope is included in the authorize request.
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenResponse.RefreshToken">
            <summary>
            A refresh token. OAuth refresh tokens are 64 bytes long.
            For more information, see [OAuth access token management](https://developer.squareup.com/docs/oauth-api/how-it-works#oauth-access-token-management).
            </summary>
        </member>
        <member name="P:Square.Models.ObtainTokenResponse.ShortLived">
            <summary>
            A boolean indicating the access token is a short-lived access token.
            The short-lived access token returned in the response will expire in 24 hours.
            </summary>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ObtainTokenResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Builder.AccessToken(System.String)">
            <summary>
            AccessToken.
            </summary>
            <param name="accessToken"> accessToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Builder.TokenType(System.String)">
            <summary>
            TokenType.
            </summary>
            <param name="tokenType"> tokenType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Builder.ExpiresAt(System.String)">
            <summary>
            ExpiresAt.
            </summary>
            <param name="expiresAt"> expiresAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Builder.MerchantId(System.String)">
            <summary>
            MerchantId.
            </summary>
            <param name="merchantId"> merchantId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Builder.SubscriptionId(System.String)">
            <summary>
            SubscriptionId.
            </summary>
            <param name="subscriptionId"> subscriptionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Builder.PlanId(System.String)">
            <summary>
            PlanId.
            </summary>
            <param name="planId"> planId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Builder.IdToken(System.String)">
            <summary>
            IdToken.
            </summary>
            <param name="idToken"> idToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Builder.RefreshToken(System.String)">
            <summary>
            RefreshToken.
            </summary>
            <param name="refreshToken"> refreshToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Builder.ShortLived(System.Nullable{System.Boolean})">
            <summary>
            ShortLived.
            </summary>
            <param name="shortLived"> shortLived. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ObtainTokenResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ObtainTokenResponse. </returns>
        </member>
        <member name="T:Square.Models.Order">
            <summary>
            Order.
            </summary>
        </member>
        <member name="M:Square.Models.Order.#ctor(System.String,System.String,System.String,Square.Models.OrderSource,System.String,System.Collections.Generic.IList{Square.Models.OrderLineItem},System.Collections.Generic.IList{Square.Models.OrderLineItemTax},System.Collections.Generic.IList{Square.Models.OrderLineItemDiscount},System.Collections.Generic.IList{Square.Models.OrderServiceCharge},System.Collections.Generic.IList{Square.Models.OrderFulfillment},System.Collections.Generic.IList{Square.Models.OrderReturn},Square.Models.OrderMoneyAmounts,Square.Models.OrderMoneyAmounts,Square.Models.OrderRoundingAdjustment,System.Collections.Generic.IList{Square.Models.Tender},System.Collections.Generic.IList{Square.Models.Refund},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.OrderPricingOptions,System.Collections.Generic.IList{Square.Models.OrderReward})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Order"/> class.
            </summary>
            <param name="locationId">location_id.</param>
            <param name="id">id.</param>
            <param name="referenceId">reference_id.</param>
            <param name="source">source.</param>
            <param name="customerId">customer_id.</param>
            <param name="lineItems">line_items.</param>
            <param name="taxes">taxes.</param>
            <param name="discounts">discounts.</param>
            <param name="serviceCharges">service_charges.</param>
            <param name="fulfillments">fulfillments.</param>
            <param name="returns">returns.</param>
            <param name="returnAmounts">return_amounts.</param>
            <param name="netAmounts">net_amounts.</param>
            <param name="roundingAdjustment">rounding_adjustment.</param>
            <param name="tenders">tenders.</param>
            <param name="refunds">refunds.</param>
            <param name="metadata">metadata.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="closedAt">closed_at.</param>
            <param name="state">state.</param>
            <param name="version">version.</param>
            <param name="totalMoney">total_money.</param>
            <param name="totalTaxMoney">total_tax_money.</param>
            <param name="totalDiscountMoney">total_discount_money.</param>
            <param name="totalTipMoney">total_tip_money.</param>
            <param name="totalServiceChargeMoney">total_service_charge_money.</param>
            <param name="pricingOptions">pricing_options.</param>
            <param name="rewards">rewards.</param>
        </member>
        <member name="P:Square.Models.Order.Id">
            <summary>
            The order's unique ID.
            </summary>
        </member>
        <member name="P:Square.Models.Order.LocationId">
            <summary>
            The ID of the seller location that this order is associated with.
            </summary>
        </member>
        <member name="P:Square.Models.Order.ReferenceId">
            <summary>
            A client-specified ID to associate an entity in another system
            with this order.
            </summary>
        </member>
        <member name="P:Square.Models.Order.Source">
            <summary>
            Represents the origination details of an order.
            </summary>
        </member>
        <member name="P:Square.Models.Order.CustomerId">
            <summary>
            The ID of the [customer]($m/Customer) associated with the order.
            </summary>
        </member>
        <member name="P:Square.Models.Order.LineItems">
            <summary>
            The line items included in the order.
            </summary>
        </member>
        <member name="P:Square.Models.Order.Taxes">
            <summary>
            The list of all taxes associated with the order.
            Taxes can be scoped to either `ORDER` or `LINE_ITEM`. For taxes with `LINE_ITEM` scope, an
            `OrderLineItemAppliedTax` must be added to each line item that the tax applies to. For taxes
            with `ORDER` scope, the server generates an `OrderLineItemAppliedTax` for every line item.
            On reads, each tax in the list includes the total amount of that tax applied to the order.
            __IMPORTANT__: If `LINE_ITEM` scope is set on any taxes in this field, using the deprecated
            `line_items.taxes` field results in an error. Use `line_items.applied_taxes`
            instead.
            </summary>
        </member>
        <member name="P:Square.Models.Order.Discounts">
            <summary>
            The list of all discounts associated with the order.
            Discounts can be scoped to either `ORDER` or `LINE_ITEM`. For discounts scoped to `LINE_ITEM`,
            an `OrderLineItemAppliedDiscount` must be added to each line item that the discount applies to.
            For discounts with `ORDER` scope, the server generates an `OrderLineItemAppliedDiscount`
            for every line item.
            __IMPORTANT__: If `LINE_ITEM` scope is set on any discounts in this field, using the deprecated
            `line_items.discounts` field results in an error. Use `line_items.applied_discounts`
            instead.
            </summary>
        </member>
        <member name="P:Square.Models.Order.ServiceCharges">
            <summary>
            A list of service charges applied to the order.
            </summary>
        </member>
        <member name="P:Square.Models.Order.Fulfillments">
            <summary>
            Details about order fulfillment.
            Orders can only be created with at most one fulfillment. However, orders returned
            by the API might contain multiple fulfillments.
            </summary>
        </member>
        <member name="P:Square.Models.Order.Returns">
            <summary>
            A collection of items from sale orders being returned in this one. Normally part of an
            itemized return or exchange. There is exactly one `Return` object per sale `Order` being
            referenced.
            </summary>
        </member>
        <member name="P:Square.Models.Order.ReturnAmounts">
            <summary>
            A collection of various money amounts.
            </summary>
        </member>
        <member name="P:Square.Models.Order.NetAmounts">
            <summary>
            A collection of various money amounts.
            </summary>
        </member>
        <member name="P:Square.Models.Order.RoundingAdjustment">
            <summary>
            A rounding adjustment of the money being returned. Commonly used to apply cash rounding
            when the minimum unit of the account is smaller than the lowest physical denomination of the currency.
            </summary>
        </member>
        <member name="P:Square.Models.Order.Tenders">
            <summary>
            The tenders that were used to pay for the order.
            </summary>
        </member>
        <member name="P:Square.Models.Order.Refunds">
            <summary>
            The refunds that are part of this order.
            </summary>
        </member>
        <member name="P:Square.Models.Order.Metadata">
            <summary>
            Application-defined data attached to this order. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (such as personally
            identifiable information or card details).
            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.
            Values have a maximum length of 255 characters.
            An application can have up to 10 entries per metadata field.
            Entries written by applications are private and can only be read or modified by the same
            application.
            For more information, see  [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
            </summary>
        </member>
        <member name="P:Square.Models.Order.CreatedAt">
            <summary>
            The timestamp for when the order was created, in RFC 3339 format (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.Order.UpdatedAt">
            <summary>
            The timestamp for when the order was last updated, in RFC 3339 format (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.Order.ClosedAt">
            <summary>
            The timestamp for when the order reached a terminal [state]($m/OrderState), in RFC 3339 format (for example "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.Order.State">
            <summary>
            The state of the order.
            </summary>
        </member>
        <member name="P:Square.Models.Order.Version">
            <summary>
            The version number, which is incremented each time an update is committed to the order.
            Orders not created through the API do not include a version number and
            therefore cannot be updated.
            [Read more about working with versions](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders).
            </summary>
        </member>
        <member name="P:Square.Models.Order.TotalMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Order.TotalTaxMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Order.TotalDiscountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Order.TotalTipMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Order.TotalServiceChargeMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Order.PricingOptions">
            <summary>
            Pricing options for an order. The options affect how the order's price is calculated.
            They can be used, for example, to apply automatic price adjustments that are based on preconfigured
            [pricing rules]($m/CatalogPricingRule).
            </summary>
        </member>
        <member name="P:Square.Models.Order.Rewards">
            <summary>
            A set-like list of Rewards that have been added to the Order.
            </summary>
        </member>
        <member name="M:Square.Models.Order.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Order.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Order.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Order.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Order.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Order.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Order.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Source(Square.Models.OrderSource)">
            <summary>
            Source.
            </summary>
            <param name="source"> source. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.LineItems(System.Collections.Generic.IList{Square.Models.OrderLineItem})">
            <summary>
            LineItems.
            </summary>
            <param name="lineItems"> lineItems. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Taxes(System.Collections.Generic.IList{Square.Models.OrderLineItemTax})">
            <summary>
            Taxes.
            </summary>
            <param name="taxes"> taxes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Discounts(System.Collections.Generic.IList{Square.Models.OrderLineItemDiscount})">
            <summary>
            Discounts.
            </summary>
            <param name="discounts"> discounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.ServiceCharges(System.Collections.Generic.IList{Square.Models.OrderServiceCharge})">
            <summary>
            ServiceCharges.
            </summary>
            <param name="serviceCharges"> serviceCharges. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Fulfillments(System.Collections.Generic.IList{Square.Models.OrderFulfillment})">
            <summary>
            Fulfillments.
            </summary>
            <param name="fulfillments"> fulfillments. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Returns(System.Collections.Generic.IList{Square.Models.OrderReturn})">
            <summary>
            Returns.
            </summary>
            <param name="returns"> returns. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.ReturnAmounts(Square.Models.OrderMoneyAmounts)">
            <summary>
            ReturnAmounts.
            </summary>
            <param name="returnAmounts"> returnAmounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.NetAmounts(Square.Models.OrderMoneyAmounts)">
            <summary>
            NetAmounts.
            </summary>
            <param name="netAmounts"> netAmounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.RoundingAdjustment(Square.Models.OrderRoundingAdjustment)">
            <summary>
            RoundingAdjustment.
            </summary>
            <param name="roundingAdjustment"> roundingAdjustment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Tenders(System.Collections.Generic.IList{Square.Models.Tender})">
            <summary>
            Tenders.
            </summary>
            <param name="tenders"> tenders. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Refunds(System.Collections.Generic.IList{Square.Models.Refund})">
            <summary>
            Refunds.
            </summary>
            <param name="refunds"> refunds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Metadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Metadata.
            </summary>
            <param name="metadata"> metadata. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.ClosedAt(System.String)">
            <summary>
            ClosedAt.
            </summary>
            <param name="closedAt"> closedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.TotalMoney(Square.Models.Money)">
            <summary>
            TotalMoney.
            </summary>
            <param name="totalMoney"> totalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.TotalTaxMoney(Square.Models.Money)">
            <summary>
            TotalTaxMoney.
            </summary>
            <param name="totalTaxMoney"> totalTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.TotalDiscountMoney(Square.Models.Money)">
            <summary>
            TotalDiscountMoney.
            </summary>
            <param name="totalDiscountMoney"> totalDiscountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.TotalTipMoney(Square.Models.Money)">
            <summary>
            TotalTipMoney.
            </summary>
            <param name="totalTipMoney"> totalTipMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.TotalServiceChargeMoney(Square.Models.Money)">
            <summary>
            TotalServiceChargeMoney.
            </summary>
            <param name="totalServiceChargeMoney"> totalServiceChargeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.PricingOptions(Square.Models.OrderPricingOptions)">
            <summary>
            PricingOptions.
            </summary>
            <param name="pricingOptions"> pricingOptions. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Rewards(System.Collections.Generic.IList{Square.Models.OrderReward})">
            <summary>
            Rewards.
            </summary>
            <param name="rewards"> rewards. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Order.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Order. </returns>
        </member>
        <member name="T:Square.Models.OrderCreated">
            <summary>
            OrderCreated.
            </summary>
        </member>
        <member name="M:Square.Models.OrderCreated.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderCreated"/> class.
            </summary>
            <param name="orderId">order_id.</param>
            <param name="version">version.</param>
            <param name="locationId">location_id.</param>
            <param name="state">state.</param>
            <param name="createdAt">created_at.</param>
        </member>
        <member name="P:Square.Models.OrderCreated.OrderId">
            <summary>
            The order's unique ID.
            </summary>
        </member>
        <member name="P:Square.Models.OrderCreated.Version">
            <summary>
            The version number, which is incremented each time an update is committed to the order.
            Orders that were not created through the API do not include a version number and
            therefore cannot be updated.
            [Read more about working with versions.](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders)
            </summary>
        </member>
        <member name="P:Square.Models.OrderCreated.LocationId">
            <summary>
            The ID of the seller location that this order is associated with.
            </summary>
        </member>
        <member name="P:Square.Models.OrderCreated.State">
            <summary>
            The state of the order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderCreated.CreatedAt">
            <summary>
            The timestamp for when the order was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.OrderCreated.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderCreated.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderCreated.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderCreated.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderCreated.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderCreated.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderCreated.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderCreated.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderCreated.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderCreated.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderCreated.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderCreated.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderCreated. </returns>
        </member>
        <member name="T:Square.Models.OrderCreatedObject">
            <summary>
            OrderCreatedObject.
            </summary>
        </member>
        <member name="M:Square.Models.OrderCreatedObject.#ctor(Square.Models.OrderCreated)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderCreatedObject"/> class.
            </summary>
            <param name="orderCreated">order_created.</param>
        </member>
        <member name="P:Square.Models.OrderCreatedObject.OrderCreated">
            <summary>
            Gets or sets OrderCreated.
            </summary>
        </member>
        <member name="M:Square.Models.OrderCreatedObject.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderCreatedObject.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderCreatedObject.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderCreatedObject.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderCreatedObject.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderCreatedObject.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderCreatedObject.Builder.OrderCreated(Square.Models.OrderCreated)">
            <summary>
            OrderCreated.
            </summary>
            <param name="orderCreated"> orderCreated. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderCreatedObject.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderCreatedObject. </returns>
        </member>
        <member name="T:Square.Models.OrderEntry">
            <summary>
            OrderEntry.
            </summary>
        </member>
        <member name="M:Square.Models.OrderEntry.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderEntry"/> class.
            </summary>
            <param name="orderId">order_id.</param>
            <param name="version">version.</param>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.OrderEntry.OrderId">
            <summary>
            The ID of the order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderEntry.Version">
            <summary>
            The version number, which is incremented each time an update is committed to the order.
            Orders that were not created through the API do not include a version number and
            therefore cannot be updated.
            [Read more about working with versions.](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders)
            </summary>
        </member>
        <member name="P:Square.Models.OrderEntry.LocationId">
            <summary>
            The location ID the order belongs to.
            </summary>
        </member>
        <member name="M:Square.Models.OrderEntry.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderEntry.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderEntry.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderEntry.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderEntry.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderEntry.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderEntry.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderEntry.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderEntry.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderEntry.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderEntry. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillment">
            <summary>
            OrderFulfillment.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillment.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Square.Models.OrderFulfillmentPickupDetails,Square.Models.OrderFulfillmentShipmentDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderFulfillment"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="type">type.</param>
            <param name="state">state.</param>
            <param name="metadata">metadata.</param>
            <param name="pickupDetails">pickup_details.</param>
            <param name="shipmentDetails">shipment_details.</param>
        </member>
        <member name="P:Square.Models.OrderFulfillment.Uid">
            <summary>
            A unique ID that identifies the fulfillment only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillment.Type">
            <summary>
            The type of fulfillment.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillment.State">
            <summary>
            The current state of this fulfillment.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillment.Metadata">
            <summary>
            Application-defined data attached to this fulfillment. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (such as personally
            identifiable information or card details).
            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.
            Values have a maximum length of 255 characters.
            An application can have up to 10 entries per metadata field.
            Entries written by applications are private and can only be read or modified by the same
            application.
            For more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillment.PickupDetails">
            <summary>
            Contains details necessary to fulfill a pickup order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillment.ShipmentDetails">
            <summary>
            Contains the details necessary to fulfill a shipment order.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillment.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillment.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderFulfillment.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillment.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillment.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillment.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillment.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillment.Builder.Metadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Metadata.
            </summary>
            <param name="metadata"> metadata. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillment.Builder.PickupDetails(Square.Models.OrderFulfillmentPickupDetails)">
            <summary>
            PickupDetails.
            </summary>
            <param name="pickupDetails"> pickupDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillment.Builder.ShipmentDetails(Square.Models.OrderFulfillmentShipmentDetails)">
            <summary>
            ShipmentDetails.
            </summary>
            <param name="shipmentDetails"> shipmentDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillment.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderFulfillment. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentPickupDetails">
            <summary>
            OrderFulfillmentPickupDetails.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.#ctor(Square.Models.OrderFulfillmentRecipient,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderFulfillmentPickupDetails"/> class.
            </summary>
            <param name="recipient">recipient.</param>
            <param name="expiresAt">expires_at.</param>
            <param name="autoCompleteDuration">auto_complete_duration.</param>
            <param name="scheduleType">schedule_type.</param>
            <param name="pickupAt">pickup_at.</param>
            <param name="pickupWindowDuration">pickup_window_duration.</param>
            <param name="prepTimeDuration">prep_time_duration.</param>
            <param name="note">note.</param>
            <param name="placedAt">placed_at.</param>
            <param name="acceptedAt">accepted_at.</param>
            <param name="rejectedAt">rejected_at.</param>
            <param name="readyAt">ready_at.</param>
            <param name="expiredAt">expired_at.</param>
            <param name="pickedUpAt">picked_up_at.</param>
            <param name="canceledAt">canceled_at.</param>
            <param name="cancelReason">cancel_reason.</param>
            <param name="isCurbsidePickup">is_curbside_pickup.</param>
            <param name="curbsidePickupDetails">curbside_pickup_details.</param>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.Recipient">
            <summary>
            Contains information about the recipient of a fulfillment.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.ExpiresAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when this fulfillment expires if it is not accepted. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z"). The expiration time can only be set up to 7 days in the future.
            If `expires_at` is not set, this pickup fulfillment is automatically accepted when
            placed.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.AutoCompleteDuration">
            <summary>
            The duration of time after which an open and accepted pickup fulfillment
            is automatically moved to the `COMPLETED` state. The duration must be in RFC 3339
            format (for example, "P1W3D").
            If not set, this pickup fulfillment remains accepted until it is canceled or completed.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.ScheduleType">
            <summary>
            The schedule type of the pickup fulfillment.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.PickupAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            that represents the start of the pickup window. Must be in RFC 3339 timestamp format, e.g.,
            "2016-09-04T23:59:33.123Z".
            For fulfillments with the schedule type `ASAP`, this is automatically set
            to the current time plus the expected duration to prepare the fulfillment.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.PickupWindowDuration">
            <summary>
            The window of time in which the order should be picked up after the `pickup_at` timestamp.
            Must be in RFC 3339 duration format, e.g., "P1W3D". Can be used as an
            informational guideline for merchants.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.PrepTimeDuration">
            <summary>
            The duration of time it takes to prepare this fulfillment.
            The duration must be in RFC 3339 format (for example, "P1W3D").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.Note">
            <summary>
            A note meant to provide additional instructions about the pickup
            fulfillment displayed in the Square Point of Sale application and set by the API.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.PlacedAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the fulfillment was placed. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.AcceptedAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the fulfillment was accepted. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.RejectedAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the fulfillment was rejected. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.ReadyAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the fulfillment is marked as ready for pickup. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.ExpiredAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the fulfillment expired. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.PickedUpAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the fulfillment was picked up by the recipient. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.CanceledAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the fulfillment was canceled. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.CancelReason">
            <summary>
            A description of why the pickup was canceled. The maximum length: 100 characters.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.IsCurbsidePickup">
            <summary>
            If set to `true`, indicates that this pickup order is for curbside pickup, not in-store pickup.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetails.CurbsidePickupDetails">
            <summary>
            Specific details for curbside pickup.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentPickupDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.Recipient(Square.Models.OrderFulfillmentRecipient)">
            <summary>
            Recipient.
            </summary>
            <param name="recipient"> recipient. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.ExpiresAt(System.String)">
            <summary>
            ExpiresAt.
            </summary>
            <param name="expiresAt"> expiresAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.AutoCompleteDuration(System.String)">
            <summary>
            AutoCompleteDuration.
            </summary>
            <param name="autoCompleteDuration"> autoCompleteDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.ScheduleType(System.String)">
            <summary>
            ScheduleType.
            </summary>
            <param name="scheduleType"> scheduleType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.PickupAt(System.String)">
            <summary>
            PickupAt.
            </summary>
            <param name="pickupAt"> pickupAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.PickupWindowDuration(System.String)">
            <summary>
            PickupWindowDuration.
            </summary>
            <param name="pickupWindowDuration"> pickupWindowDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.PrepTimeDuration(System.String)">
            <summary>
            PrepTimeDuration.
            </summary>
            <param name="prepTimeDuration"> prepTimeDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.PlacedAt(System.String)">
            <summary>
            PlacedAt.
            </summary>
            <param name="placedAt"> placedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.AcceptedAt(System.String)">
            <summary>
            AcceptedAt.
            </summary>
            <param name="acceptedAt"> acceptedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.RejectedAt(System.String)">
            <summary>
            RejectedAt.
            </summary>
            <param name="rejectedAt"> rejectedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.ReadyAt(System.String)">
            <summary>
            ReadyAt.
            </summary>
            <param name="readyAt"> readyAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.ExpiredAt(System.String)">
            <summary>
            ExpiredAt.
            </summary>
            <param name="expiredAt"> expiredAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.PickedUpAt(System.String)">
            <summary>
            PickedUpAt.
            </summary>
            <param name="pickedUpAt"> pickedUpAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.CanceledAt(System.String)">
            <summary>
            CanceledAt.
            </summary>
            <param name="canceledAt"> canceledAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.CancelReason(System.String)">
            <summary>
            CancelReason.
            </summary>
            <param name="cancelReason"> cancelReason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.IsCurbsidePickup(System.Nullable{System.Boolean})">
            <summary>
            IsCurbsidePickup.
            </summary>
            <param name="isCurbsidePickup"> isCurbsidePickup. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.CurbsidePickupDetails(Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails)">
            <summary>
            CurbsidePickupDetails.
            </summary>
            <param name="curbsidePickupDetails"> curbsidePickupDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderFulfillmentPickupDetails. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails">
            <summary>
            OrderFulfillmentPickupDetailsCurbsidePickupDetails.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails"/> class.
            </summary>
            <param name="curbsideDetails">curbside_details.</param>
            <param name="buyerArrivedAt">buyer_arrived_at.</param>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.CurbsideDetails">
            <summary>
            Specific details for curbside pickup, such as parking number and vehicle model.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.BuyerArrivedAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.Builder.CurbsideDetails(System.String)">
            <summary>
            CurbsideDetails.
            </summary>
            <param name="curbsideDetails"> curbsideDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.Builder.BuyerArrivedAt(System.String)">
            <summary>
            BuyerArrivedAt.
            </summary>
            <param name="buyerArrivedAt"> buyerArrivedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentPickupDetailsCurbsidePickupDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderFulfillmentPickupDetailsCurbsidePickupDetails. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentRecipient">
            <summary>
            OrderFulfillmentRecipient.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.#ctor(System.String,System.String,System.String,System.String,Square.Models.Address)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderFulfillmentRecipient"/> class.
            </summary>
            <param name="customerId">customer_id.</param>
            <param name="displayName">display_name.</param>
            <param name="emailAddress">email_address.</param>
            <param name="phoneNumber">phone_number.</param>
            <param name="address">address.</param>
        </member>
        <member name="P:Square.Models.OrderFulfillmentRecipient.CustomerId">
            <summary>
            The customer ID of the customer associated with the fulfillment.
            If `customer_id` is provided, the fulfillment recipient's `display_name`,
            `email_address`, and `phone_number` are automatically populated from the
            targeted customer profile. If these fields are set in the request, the request
            values overrides the information from the customer profile. If the
            targeted customer profile does not contain the necessary information and
            these fields are left unset, the request results in an error.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentRecipient.DisplayName">
            <summary>
            The display name of the fulfillment recipient.
            If provided, the display name overrides the value pulled from the customer profile indicated by `customer_id`.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentRecipient.EmailAddress">
            <summary>
            The email address of the fulfillment recipient.
            If provided, the email address overrides the value pulled from the customer profile indicated by `customer_id`.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentRecipient.PhoneNumber">
            <summary>
            The phone number of the fulfillment recipient.
            If provided, the phone number overrides the value pulled from the customer profile indicated by `customer_id`.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentRecipient.Address">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentRecipient.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.Builder.DisplayName(System.String)">
            <summary>
            DisplayName.
            </summary>
            <param name="displayName"> displayName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.Builder.EmailAddress(System.String)">
            <summary>
            EmailAddress.
            </summary>
            <param name="emailAddress"> emailAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.Builder.PhoneNumber(System.String)">
            <summary>
            PhoneNumber.
            </summary>
            <param name="phoneNumber"> phoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.Builder.Address(Square.Models.Address)">
            <summary>
            Address.
            </summary>
            <param name="address"> address. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentRecipient.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderFulfillmentRecipient. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentShipmentDetails">
            <summary>
            OrderFulfillmentShipmentDetails.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.#ctor(Square.Models.OrderFulfillmentRecipient,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderFulfillmentShipmentDetails"/> class.
            </summary>
            <param name="recipient">recipient.</param>
            <param name="carrier">carrier.</param>
            <param name="shippingNote">shipping_note.</param>
            <param name="shippingType">shipping_type.</param>
            <param name="trackingNumber">tracking_number.</param>
            <param name="trackingUrl">tracking_url.</param>
            <param name="placedAt">placed_at.</param>
            <param name="inProgressAt">in_progress_at.</param>
            <param name="packagedAt">packaged_at.</param>
            <param name="expectedShippedAt">expected_shipped_at.</param>
            <param name="shippedAt">shipped_at.</param>
            <param name="canceledAt">canceled_at.</param>
            <param name="cancelReason">cancel_reason.</param>
            <param name="failedAt">failed_at.</param>
            <param name="failureReason">failure_reason.</param>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.Recipient">
            <summary>
            Contains information about the recipient of a fulfillment.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.Carrier">
            <summary>
            The shipping carrier being used to ship this fulfillment (such as UPS, FedEx, or USPS).
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.ShippingNote">
            <summary>
            A note with additional information for the shipping carrier.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.ShippingType">
            <summary>
            A description of the type of shipping product purchased from the carrier
            (such as First Class, Priority, or Express).
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.TrackingNumber">
            <summary>
            The reference number provided by the carrier to track the shipment's progress.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.TrackingUrl">
            <summary>
            A link to the tracking webpage on the carrier's website.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.PlacedAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the shipment was requested. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.InProgressAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when this fulfillment was moved to the `RESERVED` state, which  indicates that preparation
            of this shipment has begun. The timestamp must be in RFC 3339 format (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.PackagedAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when this fulfillment was moved to the `PREPARED` state, which indicates that the
            fulfillment is packaged. The timestamp must be in RFC 3339 format (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.ExpectedShippedAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the shipment is expected to be delivered to the shipping carrier.
            The timestamp must be in RFC 3339 format (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.ShippedAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when this fulfillment was moved to the `COMPLETED` state, which indicates that
            the fulfillment has been given to the shipping carrier. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.CanceledAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating the shipment was canceled.
            The timestamp must be in RFC 3339 format (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.CancelReason">
            <summary>
            A description of why the shipment was canceled.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.FailedAt">
            <summary>
            The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
            indicating when the shipment failed to be completed. The timestamp must be in RFC 3339 format
            (for example, "2016-09-04T23:59:33.123Z").
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentShipmentDetails.FailureReason">
            <summary>
            A description of why the shipment failed to be completed.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentShipmentDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.Recipient(Square.Models.OrderFulfillmentRecipient)">
            <summary>
            Recipient.
            </summary>
            <param name="recipient"> recipient. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.Carrier(System.String)">
            <summary>
            Carrier.
            </summary>
            <param name="carrier"> carrier. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.ShippingNote(System.String)">
            <summary>
            ShippingNote.
            </summary>
            <param name="shippingNote"> shippingNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.ShippingType(System.String)">
            <summary>
            ShippingType.
            </summary>
            <param name="shippingType"> shippingType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.TrackingNumber(System.String)">
            <summary>
            TrackingNumber.
            </summary>
            <param name="trackingNumber"> trackingNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.TrackingUrl(System.String)">
            <summary>
            TrackingUrl.
            </summary>
            <param name="trackingUrl"> trackingUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.PlacedAt(System.String)">
            <summary>
            PlacedAt.
            </summary>
            <param name="placedAt"> placedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.InProgressAt(System.String)">
            <summary>
            InProgressAt.
            </summary>
            <param name="inProgressAt"> inProgressAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.PackagedAt(System.String)">
            <summary>
            PackagedAt.
            </summary>
            <param name="packagedAt"> packagedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.ExpectedShippedAt(System.String)">
            <summary>
            ExpectedShippedAt.
            </summary>
            <param name="expectedShippedAt"> expectedShippedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.ShippedAt(System.String)">
            <summary>
            ShippedAt.
            </summary>
            <param name="shippedAt"> shippedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.CanceledAt(System.String)">
            <summary>
            CanceledAt.
            </summary>
            <param name="canceledAt"> canceledAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.CancelReason(System.String)">
            <summary>
            CancelReason.
            </summary>
            <param name="cancelReason"> cancelReason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.FailedAt(System.String)">
            <summary>
            FailedAt.
            </summary>
            <param name="failedAt"> failedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.FailureReason(System.String)">
            <summary>
            FailureReason.
            </summary>
            <param name="failureReason"> failureReason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentShipmentDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderFulfillmentShipmentDetails. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentUpdated">
            <summary>
            OrderFulfillmentUpdated.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Square.Models.OrderFulfillmentUpdatedUpdate})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderFulfillmentUpdated"/> class.
            </summary>
            <param name="orderId">order_id.</param>
            <param name="version">version.</param>
            <param name="locationId">location_id.</param>
            <param name="state">state.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="fulfillmentUpdate">fulfillment_update.</param>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdated.OrderId">
            <summary>
            The order's unique ID.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdated.Version">
            <summary>
            The version number, which is incremented each time an update is committed to the order.
            Orders that were not created through the API do not include a version number and
            therefore cannot be updated.
            [Read more about working with versions.](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders)
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdated.LocationId">
            <summary>
            The ID of the seller location that this order is associated with.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdated.State">
            <summary>
            The state of the order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdated.CreatedAt">
            <summary>
            The timestamp for when the order was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdated.UpdatedAt">
            <summary>
            The timestamp for when the order was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdated.FulfillmentUpdate">
            <summary>
            The fulfillments that were updated with this version change.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentUpdated.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.Builder.FulfillmentUpdate(System.Collections.Generic.IList{Square.Models.OrderFulfillmentUpdatedUpdate})">
            <summary>
            FulfillmentUpdate.
            </summary>
            <param name="fulfillmentUpdate"> fulfillmentUpdate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdated.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderFulfillmentUpdated. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentUpdatedObject">
            <summary>
            OrderFulfillmentUpdatedObject.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedObject.#ctor(Square.Models.OrderFulfillmentUpdated)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderFulfillmentUpdatedObject"/> class.
            </summary>
            <param name="orderFulfillmentUpdated">order_fulfillment_updated.</param>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdatedObject.OrderFulfillmentUpdated">
            <summary>
            Gets or sets OrderFulfillmentUpdated.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedObject.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedObject.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedObject.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedObject.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedObject.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentUpdatedObject.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedObject.Builder.OrderFulfillmentUpdated(Square.Models.OrderFulfillmentUpdated)">
            <summary>
            OrderFulfillmentUpdated.
            </summary>
            <param name="orderFulfillmentUpdated"> orderFulfillmentUpdated. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedObject.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderFulfillmentUpdatedObject. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentUpdatedUpdate">
            <summary>
            OrderFulfillmentUpdatedUpdate.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedUpdate.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderFulfillmentUpdatedUpdate"/> class.
            </summary>
            <param name="fulfillmentUid">fulfillment_uid.</param>
            <param name="oldState">old_state.</param>
            <param name="newState">new_state.</param>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdatedUpdate.FulfillmentUid">
            <summary>
            A unique ID that identifies the fulfillment only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdatedUpdate.OldState">
            <summary>
            The current state of this fulfillment.
            </summary>
        </member>
        <member name="P:Square.Models.OrderFulfillmentUpdatedUpdate.NewState">
            <summary>
            The current state of this fulfillment.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedUpdate.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedUpdate.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedUpdate.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedUpdate.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedUpdate.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderFulfillmentUpdatedUpdate.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedUpdate.Builder.FulfillmentUid(System.String)">
            <summary>
            FulfillmentUid.
            </summary>
            <param name="fulfillmentUid"> fulfillmentUid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedUpdate.Builder.OldState(System.String)">
            <summary>
            OldState.
            </summary>
            <param name="oldState"> oldState. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedUpdate.Builder.NewState(System.String)">
            <summary>
            NewState.
            </summary>
            <param name="newState"> newState. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderFulfillmentUpdatedUpdate.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderFulfillmentUpdatedUpdate. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItem">
            <summary>
            OrderLineItem.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItem.#ctor(System.String,System.String,System.String,Square.Models.OrderQuantityUnit,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Square.Models.OrderLineItemModifier},System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedTax},System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedDiscount},Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.OrderLineItemPricingBlocklists)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderLineItem"/> class.
            </summary>
            <param name="quantity">quantity.</param>
            <param name="uid">uid.</param>
            <param name="name">name.</param>
            <param name="quantityUnit">quantity_unit.</param>
            <param name="note">note.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="variationName">variation_name.</param>
            <param name="metadata">metadata.</param>
            <param name="modifiers">modifiers.</param>
            <param name="appliedTaxes">applied_taxes.</param>
            <param name="appliedDiscounts">applied_discounts.</param>
            <param name="basePriceMoney">base_price_money.</param>
            <param name="variationTotalPriceMoney">variation_total_price_money.</param>
            <param name="grossSalesMoney">gross_sales_money.</param>
            <param name="totalTaxMoney">total_tax_money.</param>
            <param name="totalDiscountMoney">total_discount_money.</param>
            <param name="totalMoney">total_money.</param>
            <param name="pricingBlocklists">pricing_blocklists.</param>
        </member>
        <member name="P:Square.Models.OrderLineItem.Uid">
            <summary>
            A unique ID that identifies the line item only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.Name">
            <summary>
            The name of the line item.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.Quantity">
            <summary>
            The quantity purchased, formatted as a decimal number.
            For example, `"3"`.
            Line items with a quantity of `"0"` are automatically removed
            when paying for or otherwise completing the order.
            Line items with a `quantity_unit` can have non-integer quantities.
            For example, `"1.70000"`.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.QuantityUnit">
            <summary>
            Contains the measurement unit for a quantity and a precision that
            specifies the number of digits after the decimal point for decimal quantities.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.Note">
            <summary>
            The note of the line item.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.CatalogObjectId">
            <summary>
            The [CatalogItemVariation]($m/CatalogItemVariation) ID applied to this line item.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.VariationName">
            <summary>
            The name of the variation applied to this line item.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.Metadata">
            <summary>
            Application-defined data attached to this line item. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (such as personally
            identifiable information or card details).
            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.
            Values have a maximum length of 255 characters.
            An application can have up to 10 entries per metadata field.
            Entries written by applications are private and can only be read or modified by the same
            application.
            For more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.Modifiers">
            <summary>
            The [CatalogModifier]($m/CatalogModifier)s applied to this line item.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.AppliedTaxes">
            <summary>
            The list of references to taxes applied to this line item. Each
            `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a
            top-level `OrderLineItemTax` applied to the line item. On reads, the
            amount applied is populated.
            An `OrderLineItemAppliedTax` is automatically created on every line
            item for all `ORDER` scoped taxes added to the order. `OrderLineItemAppliedTax`
            records for `LINE_ITEM` scoped taxes must be added in requests for the tax
            to apply to any line items.
            To change the amount of a tax, modify the referenced top-level tax.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.AppliedDiscounts">
            <summary>
            The list of references to discounts applied to this line item. Each
            `OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level
            `OrderLineItemDiscounts` applied to the line item. On reads, the amount
            applied is populated.
            An `OrderLineItemAppliedDiscount` is automatically created on every line item for all
            `ORDER` scoped discounts that are added to the order. `OrderLineItemAppliedDiscount` records
            for `LINE_ITEM` scoped discounts must be added in requests for the discount to apply to any
            line items.
            To change the amount of a discount, modify the referenced top-level discount.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.BasePriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.VariationTotalPriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.GrossSalesMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.TotalTaxMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.TotalDiscountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.TotalMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItem.PricingBlocklists">
            <summary>
            Describes pricing adjustments that are blocked from manual and
            automatic application to a line item. For more information, see
            [Apply Taxes and Discounts](https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts).
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItem.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItem.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItem.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItem.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderLineItem.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItem.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.Quantity(System.String)">
            <summary>
            Quantity.
            </summary>
            <param name="quantity"> quantity. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.QuantityUnit(Square.Models.OrderQuantityUnit)">
            <summary>
            QuantityUnit.
            </summary>
            <param name="quantityUnit"> quantityUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.VariationName(System.String)">
            <summary>
            VariationName.
            </summary>
            <param name="variationName"> variationName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.Metadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Metadata.
            </summary>
            <param name="metadata"> metadata. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.Modifiers(System.Collections.Generic.IList{Square.Models.OrderLineItemModifier})">
            <summary>
            Modifiers.
            </summary>
            <param name="modifiers"> modifiers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.AppliedTaxes(System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedTax})">
            <summary>
            AppliedTaxes.
            </summary>
            <param name="appliedTaxes"> appliedTaxes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.AppliedDiscounts(System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedDiscount})">
            <summary>
            AppliedDiscounts.
            </summary>
            <param name="appliedDiscounts"> appliedDiscounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.BasePriceMoney(Square.Models.Money)">
            <summary>
            BasePriceMoney.
            </summary>
            <param name="basePriceMoney"> basePriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.VariationTotalPriceMoney(Square.Models.Money)">
            <summary>
            VariationTotalPriceMoney.
            </summary>
            <param name="variationTotalPriceMoney"> variationTotalPriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.GrossSalesMoney(Square.Models.Money)">
            <summary>
            GrossSalesMoney.
            </summary>
            <param name="grossSalesMoney"> grossSalesMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.TotalTaxMoney(Square.Models.Money)">
            <summary>
            TotalTaxMoney.
            </summary>
            <param name="totalTaxMoney"> totalTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.TotalDiscountMoney(Square.Models.Money)">
            <summary>
            TotalDiscountMoney.
            </summary>
            <param name="totalDiscountMoney"> totalDiscountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.TotalMoney(Square.Models.Money)">
            <summary>
            TotalMoney.
            </summary>
            <param name="totalMoney"> totalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.PricingBlocklists(Square.Models.OrderLineItemPricingBlocklists)">
            <summary>
            PricingBlocklists.
            </summary>
            <param name="pricingBlocklists"> pricingBlocklists. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItem.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderLineItem. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemAppliedDiscount">
            <summary>
            OrderLineItemAppliedDiscount.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedDiscount.#ctor(System.String,System.String,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderLineItemAppliedDiscount"/> class.
            </summary>
            <param name="discountUid">discount_uid.</param>
            <param name="uid">uid.</param>
            <param name="appliedMoney">applied_money.</param>
        </member>
        <member name="P:Square.Models.OrderLineItemAppliedDiscount.Uid">
            <summary>
            A unique ID that identifies the applied discount only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemAppliedDiscount.DiscountUid">
            <summary>
            The `uid` of the discount that the applied discount represents. It must
            reference a discount present in the `order.discounts` field.
            This field is immutable. To change which discounts apply to a line item,
            you must delete the discount and re-add it as a new `OrderLineItemAppliedDiscount`.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemAppliedDiscount.AppliedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedDiscount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedDiscount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedDiscount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedDiscount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedDiscount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemAppliedDiscount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedDiscount.Builder.DiscountUid(System.String)">
            <summary>
            DiscountUid.
            </summary>
            <param name="discountUid"> discountUid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedDiscount.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedDiscount.Builder.AppliedMoney(Square.Models.Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedDiscount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderLineItemAppliedDiscount. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemAppliedTax">
            <summary>
            OrderLineItemAppliedTax.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedTax.#ctor(System.String,System.String,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderLineItemAppliedTax"/> class.
            </summary>
            <param name="taxUid">tax_uid.</param>
            <param name="uid">uid.</param>
            <param name="appliedMoney">applied_money.</param>
        </member>
        <member name="P:Square.Models.OrderLineItemAppliedTax.Uid">
            <summary>
            A unique ID that identifies the applied tax only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemAppliedTax.TaxUid">
            <summary>
            The `uid` of the tax for which this applied tax represents. It must reference
            a tax present in the `order.taxes` field.
            This field is immutable. To change which taxes apply to a line item, delete and add a new
            `OrderLineItemAppliedTax`.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemAppliedTax.AppliedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedTax.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedTax.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedTax.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedTax.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedTax.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemAppliedTax.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedTax.Builder.TaxUid(System.String)">
            <summary>
            TaxUid.
            </summary>
            <param name="taxUid"> taxUid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedTax.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedTax.Builder.AppliedMoney(Square.Models.Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemAppliedTax.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderLineItemAppliedTax. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemDiscount">
            <summary>
            OrderLineItemDiscount.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.#ctor(System.String,System.String,System.String,System.String,System.String,Square.Models.Money,Square.Models.Money,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderLineItemDiscount"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="name">name.</param>
            <param name="type">type.</param>
            <param name="percentage">percentage.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="appliedMoney">applied_money.</param>
            <param name="metadata">metadata.</param>
            <param name="scope">scope.</param>
            <param name="rewardIds">reward_ids.</param>
            <param name="pricingRuleId">pricing_rule_id.</param>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.Uid">
            <summary>
            A unique ID that identifies the discount only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.CatalogObjectId">
            <summary>
            The catalog object ID referencing [CatalogDiscount]($m/CatalogDiscount).
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.Name">
            <summary>
            The discount's name.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.Type">
            <summary>
            Indicates how the discount is applied to the associated line item or order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.Percentage">
            <summary>
            The percentage of the discount, as a string representation of a decimal number.
            A value of `7.25` corresponds to a percentage of 7.25%.
            `percentage` is not set for amount-based discounts.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.AppliedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.Metadata">
            <summary>
            Application-defined data attached to this discount. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (such as personally
            identifiable information or card details).
            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.
            Values have a maximum length of 255 characters.
            An application can have up to 10 entries per metadata field.
            Entries written by applications are private and can only be read or modified by the same
            application.
            For more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.Scope">
            <summary>
            Indicates whether this is a line-item or order-level discount.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.RewardIds">
            <summary>
            The reward IDs corresponding to this discount. The application and
            specification of discounts that have `reward_ids` are completely controlled by the backing
            criteria corresponding to the reward tiers of the rewards that are added to the order
            through the Loyalty API. To manually unapply discounts that are the result of added rewards,
            the rewards must be removed from the order through the Loyalty API.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemDiscount.PricingRuleId">
            <summary>
            The object ID of a [pricing rule]($m/CatalogPricingRule) to be applied
            automatically to this discount. The specification and application of the discounts, to
            which a `pricing_rule_id` is assigned, are completely controlled by the corresponding
            pricing rule.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemDiscount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.Percentage(System.String)">
            <summary>
            Percentage.
            </summary>
            <param name="percentage"> percentage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.AppliedMoney(Square.Models.Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.Metadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Metadata.
            </summary>
            <param name="metadata"> metadata. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.Scope(System.String)">
            <summary>
            Scope.
            </summary>
            <param name="scope"> scope. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.RewardIds(System.Collections.Generic.IList{System.String})">
            <summary>
            RewardIds.
            </summary>
            <param name="rewardIds"> rewardIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.PricingRuleId(System.String)">
            <summary>
            PricingRuleId.
            </summary>
            <param name="pricingRuleId"> pricingRuleId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemDiscount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderLineItemDiscount. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemModifier">
            <summary>
            OrderLineItemModifier.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.#ctor(System.String,System.String,System.String,Square.Models.Money,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderLineItemModifier"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="name">name.</param>
            <param name="basePriceMoney">base_price_money.</param>
            <param name="totalPriceMoney">total_price_money.</param>
        </member>
        <member name="P:Square.Models.OrderLineItemModifier.Uid">
            <summary>
            A unique ID that identifies the modifier only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemModifier.CatalogObjectId">
            <summary>
            The catalog object ID referencing [CatalogModifier]($m/CatalogModifier).
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemModifier.Name">
            <summary>
            The name of the item modifier.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemModifier.BasePriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemModifier.TotalPriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemModifier.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.Builder.BasePriceMoney(Square.Models.Money)">
            <summary>
            BasePriceMoney.
            </summary>
            <param name="basePriceMoney"> basePriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.Builder.TotalPriceMoney(Square.Models.Money)">
            <summary>
            TotalPriceMoney.
            </summary>
            <param name="totalPriceMoney"> totalPriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemModifier.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderLineItemModifier. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemPricingBlocklists">
            <summary>
            OrderLineItemPricingBlocklists.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklists.#ctor(System.Collections.Generic.IList{Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount},System.Collections.Generic.IList{Square.Models.OrderLineItemPricingBlocklistsBlockedTax})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderLineItemPricingBlocklists"/> class.
            </summary>
            <param name="blockedDiscounts">blocked_discounts.</param>
            <param name="blockedTaxes">blocked_taxes.</param>
        </member>
        <member name="P:Square.Models.OrderLineItemPricingBlocklists.BlockedDiscounts">
            <summary>
            A list of discounts blocked from applying to the line item.
            Discounts can be blocked by the `discount_uid` (for ad hoc discounts) or
            the `discount_catalog_object_id` (for catalog discounts).
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemPricingBlocklists.BlockedTaxes">
            <summary>
            A list of taxes blocked from applying to the line item.
            Taxes can be blocked by the `tax_uid` (for ad hoc taxes) or
            the `tax_catalog_object_id` (for catalog taxes).
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklists.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklists.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklists.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklists.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklists.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemPricingBlocklists.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklists.Builder.BlockedDiscounts(System.Collections.Generic.IList{Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount})">
            <summary>
            BlockedDiscounts.
            </summary>
            <param name="blockedDiscounts"> blockedDiscounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklists.Builder.BlockedTaxes(System.Collections.Generic.IList{Square.Models.OrderLineItemPricingBlocklistsBlockedTax})">
            <summary>
            BlockedTaxes.
            </summary>
            <param name="blockedTaxes"> blockedTaxes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklists.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderLineItemPricingBlocklists. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount">
            <summary>
            OrderLineItemPricingBlocklistsBlockedDiscount.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="discountUid">discount_uid.</param>
            <param name="discountCatalogObjectId">discount_catalog_object_id.</param>
        </member>
        <member name="P:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.Uid">
            <summary>
            A unique ID of the `BlockedDiscount` within the order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.DiscountUid">
            <summary>
            The `uid` of the discount that should be blocked. Use this field to block
            ad hoc discounts. For catalog discounts, use the `discount_catalog_object_id` field.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.DiscountCatalogObjectId">
            <summary>
            The `catalog_object_id` of the discount that should be blocked.
            Use this field to block catalog discounts. For ad hoc discounts, use the
            `discount_uid` field.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.Builder.DiscountUid(System.String)">
            <summary>
            DiscountUid.
            </summary>
            <param name="discountUid"> discountUid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.Builder.DiscountCatalogObjectId(System.String)">
            <summary>
            DiscountCatalogObjectId.
            </summary>
            <param name="discountCatalogObjectId"> discountCatalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedDiscount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderLineItemPricingBlocklistsBlockedDiscount. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemPricingBlocklistsBlockedTax">
            <summary>
            OrderLineItemPricingBlocklistsBlockedTax.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderLineItemPricingBlocklistsBlockedTax"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="taxUid">tax_uid.</param>
            <param name="taxCatalogObjectId">tax_catalog_object_id.</param>
        </member>
        <member name="P:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.Uid">
            <summary>
            A unique ID of the `BlockedTax` within the order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.TaxUid">
            <summary>
            The `uid` of the tax that should be blocked. Use this field to block
            ad hoc taxes. For catalog, taxes use the `tax_catalog_object_id` field.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.TaxCatalogObjectId">
            <summary>
            The `catalog_object_id` of the tax that should be blocked.
            Use this field to block catalog taxes. For ad hoc taxes, use the
            `tax_uid` field.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.Builder.TaxUid(System.String)">
            <summary>
            TaxUid.
            </summary>
            <param name="taxUid"> taxUid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.Builder.TaxCatalogObjectId(System.String)">
            <summary>
            TaxCatalogObjectId.
            </summary>
            <param name="taxCatalogObjectId"> taxCatalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemPricingBlocklistsBlockedTax.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderLineItemPricingBlocklistsBlockedTax. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemTax">
            <summary>
            OrderLineItemTax.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Square.Models.Money,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderLineItemTax"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="name">name.</param>
            <param name="type">type.</param>
            <param name="percentage">percentage.</param>
            <param name="metadata">metadata.</param>
            <param name="appliedMoney">applied_money.</param>
            <param name="scope">scope.</param>
            <param name="autoApplied">auto_applied.</param>
        </member>
        <member name="P:Square.Models.OrderLineItemTax.Uid">
            <summary>
            A unique ID that identifies the tax only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemTax.CatalogObjectId">
            <summary>
            The catalog object ID referencing [CatalogTax]($m/CatalogTax).
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemTax.Name">
            <summary>
            The tax's name.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemTax.Type">
            <summary>
            Indicates how the tax is applied to the associated line item or order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemTax.Percentage">
            <summary>
            The percentage of the tax, as a string representation of a decimal
            number. For example, a value of `"7.25"` corresponds to a percentage of
            7.25%.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemTax.Metadata">
            <summary>
            Application-defined data attached to this tax. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (such as personally
            identifiable information or card details).
            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.
            Values have a maximum length of 255 characters.
            An application can have up to 10 entries per metadata field.
            Entries written by applications are private and can only be read or modified by the same
            application.
            For more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemTax.AppliedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemTax.Scope">
            <summary>
            Indicates whether this is a line-item or order-level tax.
            </summary>
        </member>
        <member name="P:Square.Models.OrderLineItemTax.AutoApplied">
            <summary>
            Determines whether the tax was automatically applied to the order based on
            the catalog configuration. For an example, see
            [Automatically Apply Taxes to an Order](https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts/auto-apply-taxes).
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderLineItemTax.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Builder.Percentage(System.String)">
            <summary>
            Percentage.
            </summary>
            <param name="percentage"> percentage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Builder.Metadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Metadata.
            </summary>
            <param name="metadata"> metadata. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Builder.AppliedMoney(Square.Models.Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Builder.Scope(System.String)">
            <summary>
            Scope.
            </summary>
            <param name="scope"> scope. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Builder.AutoApplied(System.Nullable{System.Boolean})">
            <summary>
            AutoApplied.
            </summary>
            <param name="autoApplied"> autoApplied. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderLineItemTax.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderLineItemTax. </returns>
        </member>
        <member name="T:Square.Models.OrderMoneyAmounts">
            <summary>
            OrderMoneyAmounts.
            </summary>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.#ctor(Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderMoneyAmounts"/> class.
            </summary>
            <param name="totalMoney">total_money.</param>
            <param name="taxMoney">tax_money.</param>
            <param name="discountMoney">discount_money.</param>
            <param name="tipMoney">tip_money.</param>
            <param name="serviceChargeMoney">service_charge_money.</param>
        </member>
        <member name="P:Square.Models.OrderMoneyAmounts.TotalMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderMoneyAmounts.TaxMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderMoneyAmounts.DiscountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderMoneyAmounts.TipMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderMoneyAmounts.ServiceChargeMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderMoneyAmounts.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.Builder.TotalMoney(Square.Models.Money)">
            <summary>
            TotalMoney.
            </summary>
            <param name="totalMoney"> totalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.Builder.TaxMoney(Square.Models.Money)">
            <summary>
            TaxMoney.
            </summary>
            <param name="taxMoney"> taxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.Builder.DiscountMoney(Square.Models.Money)">
            <summary>
            DiscountMoney.
            </summary>
            <param name="discountMoney"> discountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.Builder.TipMoney(Square.Models.Money)">
            <summary>
            TipMoney.
            </summary>
            <param name="tipMoney"> tipMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.Builder.ServiceChargeMoney(Square.Models.Money)">
            <summary>
            ServiceChargeMoney.
            </summary>
            <param name="serviceChargeMoney"> serviceChargeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderMoneyAmounts.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderMoneyAmounts. </returns>
        </member>
        <member name="T:Square.Models.OrderPricingOptions">
            <summary>
            OrderPricingOptions.
            </summary>
        </member>
        <member name="M:Square.Models.OrderPricingOptions.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderPricingOptions"/> class.
            </summary>
            <param name="autoApplyDiscounts">auto_apply_discounts.</param>
            <param name="autoApplyTaxes">auto_apply_taxes.</param>
        </member>
        <member name="P:Square.Models.OrderPricingOptions.AutoApplyDiscounts">
            <summary>
            The option to determine whether pricing rule-based
            discounts are automatically applied to an order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderPricingOptions.AutoApplyTaxes">
            <summary>
            The option to determine whether rule-based taxes are automatically
            applied to an order when the criteria of the corresponding rules are met.
            </summary>
        </member>
        <member name="M:Square.Models.OrderPricingOptions.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderPricingOptions.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderPricingOptions.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderPricingOptions.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderPricingOptions.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderPricingOptions.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderPricingOptions.Builder.AutoApplyDiscounts(System.Nullable{System.Boolean})">
            <summary>
            AutoApplyDiscounts.
            </summary>
            <param name="autoApplyDiscounts"> autoApplyDiscounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderPricingOptions.Builder.AutoApplyTaxes(System.Nullable{System.Boolean})">
            <summary>
            AutoApplyTaxes.
            </summary>
            <param name="autoApplyTaxes"> autoApplyTaxes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderPricingOptions.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderPricingOptions. </returns>
        </member>
        <member name="T:Square.Models.OrderQuantityUnit">
            <summary>
            OrderQuantityUnit.
            </summary>
        </member>
        <member name="M:Square.Models.OrderQuantityUnit.#ctor(Square.Models.MeasurementUnit,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderQuantityUnit"/> class.
            </summary>
            <param name="measurementUnit">measurement_unit.</param>
            <param name="precision">precision.</param>
        </member>
        <member name="P:Square.Models.OrderQuantityUnit.MeasurementUnit">
            <summary>
            Represents a unit of measurement to use with a quantity, such as ounces
            or inches. Exactly one of the following fields are required: `custom_unit`,
            `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
            </summary>
        </member>
        <member name="P:Square.Models.OrderQuantityUnit.Precision">
            <summary>
            For non-integer quantities, represents the number of digits after the decimal point that are
            recorded for this quantity.
            For example, a precision of 1 allows quantities such as `"1.0"` and `"1.1"`, but not `"1.01"`.
            Min: 0. Max: 5.
            </summary>
        </member>
        <member name="M:Square.Models.OrderQuantityUnit.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderQuantityUnit.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderQuantityUnit.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderQuantityUnit.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderQuantityUnit.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderQuantityUnit.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderQuantityUnit.Builder.MeasurementUnit(Square.Models.MeasurementUnit)">
            <summary>
            MeasurementUnit.
            </summary>
            <param name="measurementUnit"> measurementUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderQuantityUnit.Builder.Precision(System.Nullable{System.Int32})">
            <summary>
            Precision.
            </summary>
            <param name="precision"> precision. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderQuantityUnit.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderQuantityUnit. </returns>
        </member>
        <member name="T:Square.Models.OrderReturn">
            <summary>
            OrderReturn.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturn.#ctor(System.String,System.String,System.Collections.Generic.IList{Square.Models.OrderReturnLineItem},System.Collections.Generic.IList{Square.Models.OrderReturnServiceCharge},System.Collections.Generic.IList{Square.Models.OrderReturnTax},System.Collections.Generic.IList{Square.Models.OrderReturnDiscount},Square.Models.OrderRoundingAdjustment,Square.Models.OrderMoneyAmounts)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderReturn"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="sourceOrderId">source_order_id.</param>
            <param name="returnLineItems">return_line_items.</param>
            <param name="returnServiceCharges">return_service_charges.</param>
            <param name="returnTaxes">return_taxes.</param>
            <param name="returnDiscounts">return_discounts.</param>
            <param name="roundingAdjustment">rounding_adjustment.</param>
            <param name="returnAmounts">return_amounts.</param>
        </member>
        <member name="P:Square.Models.OrderReturn.Uid">
            <summary>
            A unique ID that identifies the return only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturn.SourceOrderId">
            <summary>
            An order that contains the original sale of these return line items. This is unset
            for unlinked returns.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturn.ReturnLineItems">
            <summary>
            A collection of line items that are being returned.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturn.ReturnServiceCharges">
            <summary>
            A collection of service charges that are being returned.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturn.ReturnTaxes">
            <summary>
            A collection of references to taxes being returned for an order, including the total
            applied tax amount to be returned. The taxes must reference a top-level tax ID from the source
            order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturn.ReturnDiscounts">
            <summary>
            A collection of references to discounts being returned for an order, including the total
            applied discount amount to be returned. The discounts must reference a top-level discount ID
            from the source order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturn.RoundingAdjustment">
            <summary>
            A rounding adjustment of the money being returned. Commonly used to apply cash rounding
            when the minimum unit of the account is smaller than the lowest physical denomination of the currency.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturn.ReturnAmounts">
            <summary>
            A collection of various money amounts.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturn.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturn.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturn.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturn.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderReturn.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderReturn.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturn.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturn.Builder.SourceOrderId(System.String)">
            <summary>
            SourceOrderId.
            </summary>
            <param name="sourceOrderId"> sourceOrderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturn.Builder.ReturnLineItems(System.Collections.Generic.IList{Square.Models.OrderReturnLineItem})">
            <summary>
            ReturnLineItems.
            </summary>
            <param name="returnLineItems"> returnLineItems. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturn.Builder.ReturnServiceCharges(System.Collections.Generic.IList{Square.Models.OrderReturnServiceCharge})">
            <summary>
            ReturnServiceCharges.
            </summary>
            <param name="returnServiceCharges"> returnServiceCharges. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturn.Builder.ReturnTaxes(System.Collections.Generic.IList{Square.Models.OrderReturnTax})">
            <summary>
            ReturnTaxes.
            </summary>
            <param name="returnTaxes"> returnTaxes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturn.Builder.ReturnDiscounts(System.Collections.Generic.IList{Square.Models.OrderReturnDiscount})">
            <summary>
            ReturnDiscounts.
            </summary>
            <param name="returnDiscounts"> returnDiscounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturn.Builder.RoundingAdjustment(Square.Models.OrderRoundingAdjustment)">
            <summary>
            RoundingAdjustment.
            </summary>
            <param name="roundingAdjustment"> roundingAdjustment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturn.Builder.ReturnAmounts(Square.Models.OrderMoneyAmounts)">
            <summary>
            ReturnAmounts.
            </summary>
            <param name="returnAmounts"> returnAmounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturn.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderReturn. </returns>
        </member>
        <member name="T:Square.Models.OrderReturnDiscount">
            <summary>
            OrderReturnDiscount.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.Money,Square.Models.Money,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderReturnDiscount"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="sourceDiscountUid">source_discount_uid.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="name">name.</param>
            <param name="type">type.</param>
            <param name="percentage">percentage.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="appliedMoney">applied_money.</param>
            <param name="scope">scope.</param>
        </member>
        <member name="P:Square.Models.OrderReturnDiscount.Uid">
            <summary>
            A unique ID that identifies the returned discount only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnDiscount.SourceDiscountUid">
            <summary>
            The discount `uid` from the order that contains the original application of this discount.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnDiscount.CatalogObjectId">
            <summary>
            The catalog object ID referencing [CatalogDiscount]($m/CatalogDiscount).
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnDiscount.Name">
            <summary>
            The discount's name.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnDiscount.Type">
            <summary>
            Indicates how the discount is applied to the associated line item or order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnDiscount.Percentage">
            <summary>
            The percentage of the tax, as a string representation of a decimal number.
            A value of `"7.25"` corresponds to a percentage of 7.25%.
            `percentage` is not set for amount-based discounts.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnDiscount.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnDiscount.AppliedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnDiscount.Scope">
            <summary>
            Indicates whether this is a line-item or order-level discount.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderReturnDiscount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Builder.SourceDiscountUid(System.String)">
            <summary>
            SourceDiscountUid.
            </summary>
            <param name="sourceDiscountUid"> sourceDiscountUid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Builder.Percentage(System.String)">
            <summary>
            Percentage.
            </summary>
            <param name="percentage"> percentage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Builder.AppliedMoney(Square.Models.Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Builder.Scope(System.String)">
            <summary>
            Scope.
            </summary>
            <param name="scope"> scope. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnDiscount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderReturnDiscount. </returns>
        </member>
        <member name="T:Square.Models.OrderReturnLineItem">
            <summary>
            OrderReturnLineItem.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.#ctor(System.String,System.String,System.String,System.String,Square.Models.OrderQuantityUnit,System.String,System.String,System.String,System.Collections.Generic.IList{Square.Models.OrderReturnLineItemModifier},System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedTax},System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedDiscount},Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderReturnLineItem"/> class.
            </summary>
            <param name="quantity">quantity.</param>
            <param name="uid">uid.</param>
            <param name="sourceLineItemUid">source_line_item_uid.</param>
            <param name="name">name.</param>
            <param name="quantityUnit">quantity_unit.</param>
            <param name="note">note.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="variationName">variation_name.</param>
            <param name="returnModifiers">return_modifiers.</param>
            <param name="appliedTaxes">applied_taxes.</param>
            <param name="appliedDiscounts">applied_discounts.</param>
            <param name="basePriceMoney">base_price_money.</param>
            <param name="variationTotalPriceMoney">variation_total_price_money.</param>
            <param name="grossReturnMoney">gross_return_money.</param>
            <param name="totalTaxMoney">total_tax_money.</param>
            <param name="totalDiscountMoney">total_discount_money.</param>
            <param name="totalMoney">total_money.</param>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.Uid">
            <summary>
            A unique ID for this return line-item entry.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.SourceLineItemUid">
            <summary>
            The `uid` of the line item in the original sale order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.Name">
            <summary>
            The name of the line item.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.Quantity">
            <summary>
            The quantity returned, formatted as a decimal number.
            For example, `"3"`.
            Line items with a `quantity_unit` can have non-integer quantities.
            For example, `"1.70000"`.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.QuantityUnit">
            <summary>
            Contains the measurement unit for a quantity and a precision that
            specifies the number of digits after the decimal point for decimal quantities.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.Note">
            <summary>
            The note of the return line item.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.CatalogObjectId">
            <summary>
            The [CatalogItemVariation]($m/CatalogItemVariation) ID applied to this return line item.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.VariationName">
            <summary>
            The name of the variation applied to this return line item.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.ReturnModifiers">
            <summary>
            The [CatalogModifier]($m/CatalogModifier)s applied to this line item.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.AppliedTaxes">
            <summary>
            The list of references to `OrderReturnTax` entities applied to the return line item. Each
            `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level
            `OrderReturnTax` applied to the return line item. On reads, the applied amount
            is populated.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.AppliedDiscounts">
            <summary>
            The list of references to `OrderReturnDiscount` entities applied to the return line item. Each
            `OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level
            `OrderReturnDiscount` applied to the return line item. On reads, the applied amount
            is populated.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.BasePriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.VariationTotalPriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.GrossReturnMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.TotalTaxMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.TotalDiscountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItem.TotalMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderReturnLineItem.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.Quantity(System.String)">
            <summary>
            Quantity.
            </summary>
            <param name="quantity"> quantity. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.SourceLineItemUid(System.String)">
            <summary>
            SourceLineItemUid.
            </summary>
            <param name="sourceLineItemUid"> sourceLineItemUid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.QuantityUnit(Square.Models.OrderQuantityUnit)">
            <summary>
            QuantityUnit.
            </summary>
            <param name="quantityUnit"> quantityUnit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.VariationName(System.String)">
            <summary>
            VariationName.
            </summary>
            <param name="variationName"> variationName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.ReturnModifiers(System.Collections.Generic.IList{Square.Models.OrderReturnLineItemModifier})">
            <summary>
            ReturnModifiers.
            </summary>
            <param name="returnModifiers"> returnModifiers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.AppliedTaxes(System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedTax})">
            <summary>
            AppliedTaxes.
            </summary>
            <param name="appliedTaxes"> appliedTaxes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.AppliedDiscounts(System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedDiscount})">
            <summary>
            AppliedDiscounts.
            </summary>
            <param name="appliedDiscounts"> appliedDiscounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.BasePriceMoney(Square.Models.Money)">
            <summary>
            BasePriceMoney.
            </summary>
            <param name="basePriceMoney"> basePriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.VariationTotalPriceMoney(Square.Models.Money)">
            <summary>
            VariationTotalPriceMoney.
            </summary>
            <param name="variationTotalPriceMoney"> variationTotalPriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.GrossReturnMoney(Square.Models.Money)">
            <summary>
            GrossReturnMoney.
            </summary>
            <param name="grossReturnMoney"> grossReturnMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.TotalTaxMoney(Square.Models.Money)">
            <summary>
            TotalTaxMoney.
            </summary>
            <param name="totalTaxMoney"> totalTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.TotalDiscountMoney(Square.Models.Money)">
            <summary>
            TotalDiscountMoney.
            </summary>
            <param name="totalDiscountMoney"> totalDiscountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.TotalMoney(Square.Models.Money)">
            <summary>
            TotalMoney.
            </summary>
            <param name="totalMoney"> totalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItem.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderReturnLineItem. </returns>
        </member>
        <member name="T:Square.Models.OrderReturnLineItemModifier">
            <summary>
            OrderReturnLineItemModifier.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.#ctor(System.String,System.String,System.String,System.String,Square.Models.Money,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderReturnLineItemModifier"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="sourceModifierUid">source_modifier_uid.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="name">name.</param>
            <param name="basePriceMoney">base_price_money.</param>
            <param name="totalPriceMoney">total_price_money.</param>
        </member>
        <member name="P:Square.Models.OrderReturnLineItemModifier.Uid">
            <summary>
            A unique ID that identifies the return modifier only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItemModifier.SourceModifierUid">
            <summary>
            The modifier `uid` from the order's line item that contains the
            original sale of this line item modifier.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItemModifier.CatalogObjectId">
            <summary>
            The catalog object ID referencing [CatalogModifier]($m/CatalogModifier).
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItemModifier.Name">
            <summary>
            The name of the item modifier.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItemModifier.BasePriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnLineItemModifier.TotalPriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderReturnLineItemModifier.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.Builder.SourceModifierUid(System.String)">
            <summary>
            SourceModifierUid.
            </summary>
            <param name="sourceModifierUid"> sourceModifierUid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.Builder.BasePriceMoney(Square.Models.Money)">
            <summary>
            BasePriceMoney.
            </summary>
            <param name="basePriceMoney"> basePriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.Builder.TotalPriceMoney(Square.Models.Money)">
            <summary>
            TotalPriceMoney.
            </summary>
            <param name="totalPriceMoney"> totalPriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnLineItemModifier.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderReturnLineItemModifier. </returns>
        </member>
        <member name="T:Square.Models.OrderReturnServiceCharge">
            <summary>
            OrderReturnServiceCharge.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.#ctor(System.String,System.String,System.String,System.String,System.String,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedTax})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderReturnServiceCharge"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="sourceServiceChargeUid">source_service_charge_uid.</param>
            <param name="name">name.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="percentage">percentage.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="appliedMoney">applied_money.</param>
            <param name="totalMoney">total_money.</param>
            <param name="totalTaxMoney">total_tax_money.</param>
            <param name="calculationPhase">calculation_phase.</param>
            <param name="taxable">taxable.</param>
            <param name="appliedTaxes">applied_taxes.</param>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.Uid">
            <summary>
            A unique ID that identifies the return service charge only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.SourceServiceChargeUid">
            <summary>
            The service charge `uid` from the order containing the original
            service charge. `source_service_charge_uid` is `null` for
            unlinked returns.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.Name">
            <summary>
            The name of the service charge.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.CatalogObjectId">
            <summary>
            The catalog object ID of the associated [OrderServiceCharge]($m/OrderServiceCharge).
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.Percentage">
            <summary>
            The percentage of the service charge, as a string representation of
            a decimal number. For example, a value of `"7.25"` corresponds to a
            percentage of 7.25%.
            Either `percentage` or `amount_money` should be set, but not both.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.AppliedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.TotalMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.TotalTaxMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.CalculationPhase">
            <summary>
            Represents a phase in the process of calculating order totals.
            Service charges are applied after the indicated phase.
            [Read more about how order totals are calculated.](https://developer.squareup.com/docs/orders-api/how-it-works#how-totals-are-calculated)
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.Taxable">
            <summary>
            Indicates whether the surcharge can be taxed. Service charges
            calculated in the `TOTAL_PHASE` cannot be marked as taxable.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnServiceCharge.AppliedTaxes">
            <summary>
            The list of references to `OrderReturnTax` entities applied to the
            `OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a `tax_uid`
            that references the `uid` of a top-level `OrderReturnTax` that is being
            applied to the `OrderReturnServiceCharge`. On reads, the applied amount is
            populated.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderReturnServiceCharge.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.SourceServiceChargeUid(System.String)">
            <summary>
            SourceServiceChargeUid.
            </summary>
            <param name="sourceServiceChargeUid"> sourceServiceChargeUid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.Percentage(System.String)">
            <summary>
            Percentage.
            </summary>
            <param name="percentage"> percentage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.AppliedMoney(Square.Models.Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.TotalMoney(Square.Models.Money)">
            <summary>
            TotalMoney.
            </summary>
            <param name="totalMoney"> totalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.TotalTaxMoney(Square.Models.Money)">
            <summary>
            TotalTaxMoney.
            </summary>
            <param name="totalTaxMoney"> totalTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.CalculationPhase(System.String)">
            <summary>
            CalculationPhase.
            </summary>
            <param name="calculationPhase"> calculationPhase. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.Taxable(System.Nullable{System.Boolean})">
            <summary>
            Taxable.
            </summary>
            <param name="taxable"> taxable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.AppliedTaxes(System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedTax})">
            <summary>
            AppliedTaxes.
            </summary>
            <param name="appliedTaxes"> appliedTaxes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnServiceCharge.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderReturnServiceCharge. </returns>
        </member>
        <member name="T:Square.Models.OrderReturnTax">
            <summary>
            OrderReturnTax.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnTax.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.Money,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderReturnTax"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="sourceTaxUid">source_tax_uid.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="name">name.</param>
            <param name="type">type.</param>
            <param name="percentage">percentage.</param>
            <param name="appliedMoney">applied_money.</param>
            <param name="scope">scope.</param>
        </member>
        <member name="P:Square.Models.OrderReturnTax.Uid">
            <summary>
            A unique ID that identifies the returned tax only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnTax.SourceTaxUid">
            <summary>
            The tax `uid` from the order that contains the original tax charge.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnTax.CatalogObjectId">
            <summary>
            The catalog object ID referencing [CatalogTax]($m/CatalogTax).
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnTax.Name">
            <summary>
            The tax's name.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnTax.Type">
            <summary>
            Indicates how the tax is applied to the associated line item or order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnTax.Percentage">
            <summary>
            The percentage of the tax, as a string representation of a decimal number.
            For example, a value of `"7.25"` corresponds to a percentage of 7.25%.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnTax.AppliedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReturnTax.Scope">
            <summary>
            Indicates whether this is a line-item or order-level tax.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnTax.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnTax.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnTax.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReturnTax.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderReturnTax.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderReturnTax.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReturnTax.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnTax.Builder.SourceTaxUid(System.String)">
            <summary>
            SourceTaxUid.
            </summary>
            <param name="sourceTaxUid"> sourceTaxUid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnTax.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnTax.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnTax.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnTax.Builder.Percentage(System.String)">
            <summary>
            Percentage.
            </summary>
            <param name="percentage"> percentage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnTax.Builder.AppliedMoney(Square.Models.Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnTax.Builder.Scope(System.String)">
            <summary>
            Scope.
            </summary>
            <param name="scope"> scope. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReturnTax.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderReturnTax. </returns>
        </member>
        <member name="T:Square.Models.OrderReward">
            <summary>
            OrderReward.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReward.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderReward"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="rewardTierId">reward_tier_id.</param>
        </member>
        <member name="P:Square.Models.OrderReward.Id">
            <summary>
            The identifier of the reward.
            </summary>
        </member>
        <member name="P:Square.Models.OrderReward.RewardTierId">
            <summary>
            The identifier of the reward tier corresponding to this reward.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReward.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReward.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReward.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderReward.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderReward.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderReward.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderReward.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReward.Builder.RewardTierId(System.String)">
            <summary>
            RewardTierId.
            </summary>
            <param name="rewardTierId"> rewardTierId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderReward.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderReward. </returns>
        </member>
        <member name="T:Square.Models.OrderRoundingAdjustment">
            <summary>
            OrderRoundingAdjustment.
            </summary>
        </member>
        <member name="M:Square.Models.OrderRoundingAdjustment.#ctor(System.String,System.String,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderRoundingAdjustment"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="name">name.</param>
            <param name="amountMoney">amount_money.</param>
        </member>
        <member name="P:Square.Models.OrderRoundingAdjustment.Uid">
            <summary>
            A unique ID that identifies the rounding adjustment only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderRoundingAdjustment.Name">
            <summary>
            The name of the rounding adjustment from the original sale order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderRoundingAdjustment.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.OrderRoundingAdjustment.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderRoundingAdjustment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderRoundingAdjustment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderRoundingAdjustment.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderRoundingAdjustment.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderRoundingAdjustment.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderRoundingAdjustment.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderRoundingAdjustment.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderRoundingAdjustment.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderRoundingAdjustment.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderRoundingAdjustment. </returns>
        </member>
        <member name="T:Square.Models.OrderServiceCharge">
            <summary>
            OrderServiceCharge.
            </summary>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.#ctor(System.String,System.String,System.String,System.String,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedTax},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderServiceCharge"/> class.
            </summary>
            <param name="uid">uid.</param>
            <param name="name">name.</param>
            <param name="catalogObjectId">catalog_object_id.</param>
            <param name="percentage">percentage.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="appliedMoney">applied_money.</param>
            <param name="totalMoney">total_money.</param>
            <param name="totalTaxMoney">total_tax_money.</param>
            <param name="calculationPhase">calculation_phase.</param>
            <param name="taxable">taxable.</param>
            <param name="appliedTaxes">applied_taxes.</param>
            <param name="metadata">metadata.</param>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.Uid">
            <summary>
            A unique ID that identifies the service charge only within this order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.Name">
            <summary>
            The name of the service charge.
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.CatalogObjectId">
            <summary>
            The catalog object ID referencing the service charge [CatalogObject]($m/CatalogObject).
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.Percentage">
            <summary>
            The service charge percentage as a string representation of a
            decimal number. For example, `"7.25"` indicates a service charge of 7.25%.
            Exactly 1 of `percentage` or `amount_money` should be set.
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.AppliedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.TotalMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.TotalTaxMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.CalculationPhase">
            <summary>
            Represents a phase in the process of calculating order totals.
            Service charges are applied after the indicated phase.
            [Read more about how order totals are calculated.](https://developer.squareup.com/docs/orders-api/how-it-works#how-totals-are-calculated)
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.Taxable">
            <summary>
            Indicates whether the service charge can be taxed. If set to `true`,
            order-level taxes automatically apply to the service charge. Note that
            service charges calculated in the `TOTAL_PHASE` cannot be marked as taxable.
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.AppliedTaxes">
            <summary>
            The list of references to the taxes applied to this service charge. Each
            `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level
            `OrderLineItemTax` that is being applied to this service charge. On reads, the amount applied
            is populated.
            An `OrderLineItemAppliedTax` is automatically created on every taxable service charge
            for all `ORDER` scoped taxes that are added to the order. `OrderLineItemAppliedTax` records
            for `LINE_ITEM` scoped taxes must be added in requests for the tax to apply to any taxable
            service charge. Taxable service charges have the `taxable` field set to `true` and calculated
            in the `SUBTOTAL_PHASE`.
            To change the amount of a tax, modify the referenced top-level tax.
            </summary>
        </member>
        <member name="P:Square.Models.OrderServiceCharge.Metadata">
            <summary>
            Application-defined data attached to this service charge. Metadata fields are intended
            to store descriptive references or associations with an entity in another system or store brief
            information about the object. Square does not process this field; it only stores and returns it
            in relevant API calls. Do not use metadata to store any sensitive information (such as personally
            identifiable information or card details).
            Keys written by applications must be 60 characters or less and must be in the character set
            `[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed
            with a namespace, separated from the key with a ':' character.
            Values have a maximum length of 255 characters.
            An application can have up to 10 entries per metadata field.
            Entries written by applications are private and can only be read or modified by the same
            application.
            For more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
            </summary>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderServiceCharge.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.CatalogObjectId(System.String)">
            <summary>
            CatalogObjectId.
            </summary>
            <param name="catalogObjectId"> catalogObjectId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.Percentage(System.String)">
            <summary>
            Percentage.
            </summary>
            <param name="percentage"> percentage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.AppliedMoney(Square.Models.Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.TotalMoney(Square.Models.Money)">
            <summary>
            TotalMoney.
            </summary>
            <param name="totalMoney"> totalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.TotalTaxMoney(Square.Models.Money)">
            <summary>
            TotalTaxMoney.
            </summary>
            <param name="totalTaxMoney"> totalTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.CalculationPhase(System.String)">
            <summary>
            CalculationPhase.
            </summary>
            <param name="calculationPhase"> calculationPhase. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.Taxable(System.Nullable{System.Boolean})">
            <summary>
            Taxable.
            </summary>
            <param name="taxable"> taxable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.AppliedTaxes(System.Collections.Generic.IList{Square.Models.OrderLineItemAppliedTax})">
            <summary>
            AppliedTaxes.
            </summary>
            <param name="appliedTaxes"> appliedTaxes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.Metadata(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Metadata.
            </summary>
            <param name="metadata"> metadata. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderServiceCharge.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderServiceCharge. </returns>
        </member>
        <member name="T:Square.Models.OrderSource">
            <summary>
            OrderSource.
            </summary>
        </member>
        <member name="M:Square.Models.OrderSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderSource"/> class.
            </summary>
            <param name="name">name.</param>
        </member>
        <member name="P:Square.Models.OrderSource.Name">
            <summary>
            The name used to identify the place (physical or digital) that an order originates.
            If unset, the name defaults to the name of the application that created the order.
            </summary>
        </member>
        <member name="M:Square.Models.OrderSource.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderSource.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderSource.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderSource.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderSource.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderSource.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderSource.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderSource.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderSource. </returns>
        </member>
        <member name="T:Square.Models.OrderUpdated">
            <summary>
            OrderUpdated.
            </summary>
        </member>
        <member name="M:Square.Models.OrderUpdated.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderUpdated"/> class.
            </summary>
            <param name="orderId">order_id.</param>
            <param name="version">version.</param>
            <param name="locationId">location_id.</param>
            <param name="state">state.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.OrderUpdated.OrderId">
            <summary>
            The order's unique ID.
            </summary>
        </member>
        <member name="P:Square.Models.OrderUpdated.Version">
            <summary>
            The version number, which is incremented each time an update is committed to the order.
            Orders that were not created through the API do not include a version number and
            therefore cannot be updated.
            [Read more about working with versions.](https://developer.squareup.com/docs/orders-api/manage-orders#update-orders)
            </summary>
        </member>
        <member name="P:Square.Models.OrderUpdated.LocationId">
            <summary>
            The ID of the seller location that this order is associated with.
            </summary>
        </member>
        <member name="P:Square.Models.OrderUpdated.State">
            <summary>
            The state of the order.
            </summary>
        </member>
        <member name="P:Square.Models.OrderUpdated.CreatedAt">
            <summary>
            The timestamp for when the order was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.OrderUpdated.UpdatedAt">
            <summary>
            The timestamp for when the order was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.OrderUpdated.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderUpdated.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderUpdated.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderUpdated.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderUpdated.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderUpdated.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderUpdated.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderUpdated.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderUpdated.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderUpdated.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderUpdated.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderUpdated.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderUpdated.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderUpdated. </returns>
        </member>
        <member name="T:Square.Models.OrderUpdatedObject">
            <summary>
            OrderUpdatedObject.
            </summary>
        </member>
        <member name="M:Square.Models.OrderUpdatedObject.#ctor(Square.Models.OrderUpdated)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.OrderUpdatedObject"/> class.
            </summary>
            <param name="orderUpdated">order_updated.</param>
        </member>
        <member name="P:Square.Models.OrderUpdatedObject.OrderUpdated">
            <summary>
            Gets or sets OrderUpdated.
            </summary>
        </member>
        <member name="M:Square.Models.OrderUpdatedObject.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderUpdatedObject.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderUpdatedObject.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.OrderUpdatedObject.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.OrderUpdatedObject.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.OrderUpdatedObject.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.OrderUpdatedObject.Builder.OrderUpdated(Square.Models.OrderUpdated)">
            <summary>
            OrderUpdated.
            </summary>
            <param name="orderUpdated"> orderUpdated. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.OrderUpdatedObject.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> OrderUpdatedObject. </returns>
        </member>
        <member name="T:Square.Models.Payment">
            <summary>
            Payment.
            </summary>
        </member>
        <member name="M:Square.Models.Payment.#ctor(System.String,System.String,System.String,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,Square.Models.Money,System.Collections.Generic.IList{Square.Models.ProcessingFee},Square.Models.Money,System.String,System.String,System.String,System.String,System.String,Square.Models.CardPaymentDetails,Square.Models.CashPaymentDetails,Square.Models.BankAccountPaymentDetails,Square.Models.ExternalPaymentDetails,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Square.Models.RiskEvaluation,System.String,Square.Models.Address,Square.Models.Address,System.String,System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Payment"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="tipMoney">tip_money.</param>
            <param name="totalMoney">total_money.</param>
            <param name="appFeeMoney">app_fee_money.</param>
            <param name="approvedMoney">approved_money.</param>
            <param name="processingFee">processing_fee.</param>
            <param name="refundedMoney">refunded_money.</param>
            <param name="status">status.</param>
            <param name="delayDuration">delay_duration.</param>
            <param name="delayAction">delay_action.</param>
            <param name="delayedUntil">delayed_until.</param>
            <param name="sourceType">source_type.</param>
            <param name="cardDetails">card_details.</param>
            <param name="cashDetails">cash_details.</param>
            <param name="bankAccountDetails">bank_account_details.</param>
            <param name="externalDetails">external_details.</param>
            <param name="locationId">location_id.</param>
            <param name="orderId">order_id.</param>
            <param name="referenceId">reference_id.</param>
            <param name="customerId">customer_id.</param>
            <param name="employeeId">employee_id.</param>
            <param name="refundIds">refund_ids.</param>
            <param name="riskEvaluation">risk_evaluation.</param>
            <param name="buyerEmailAddress">buyer_email_address.</param>
            <param name="billingAddress">billing_address.</param>
            <param name="shippingAddress">shipping_address.</param>
            <param name="note">note.</param>
            <param name="statementDescriptionIdentifier">statement_description_identifier.</param>
            <param name="capabilities">capabilities.</param>
            <param name="receiptNumber">receipt_number.</param>
            <param name="receiptUrl">receipt_url.</param>
            <param name="versionToken">version_token.</param>
        </member>
        <member name="P:Square.Models.Payment.Id">
            <summary>
            A unique ID for the payment.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.CreatedAt">
            <summary>
            The timestamp of when the payment was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.UpdatedAt">
            <summary>
            The timestamp of when the payment was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.TipMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.TotalMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.AppFeeMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.ApprovedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.ProcessingFee">
            <summary>
            The processing fees and fee adjustments assessed by Square for this payment.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.RefundedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.Status">
            <summary>
            Indicates whether the payment is APPROVED, PENDING, COMPLETED, CANCELED, or FAILED.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.DelayDuration">
            <summary>
            The duration of time after the payment's creation when Square automatically applies the
            `delay_action` to the payment. This automatic `delay_action` applies only to payments that
            do not reach a terminal state (COMPLETED, CANCELED, or FAILED) before the `delay_duration`
            time period.
            This field is specified as a time duration, in RFC 3339 format.
            Notes:
            This feature is only supported for card payments.
            Default:
            - Card-present payments: "PT36H" (36 hours) from the creation time.
            - Card-not-present payments: "P7D" (7 days) from the creation time.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.DelayAction">
            <summary>
            The action to be applied to the payment when the `delay_duration` has elapsed. This field
            is read-only.
            Current values include `CANCEL`.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.DelayedUntil">
            <summary>
            The read-only timestamp of when the `delay_action` is automatically applied,
            in RFC 3339 format.
            Note that this field is calculated by summing the payment's `delay_duration` and `created_at`
            fields. The `created_at` field is generated by Square and might not exactly match the
            time on your local machine.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.SourceType">
            <summary>
            The source type for this payment.
            Current values include `CARD`, `BANK_ACCOUNT`, `CASH`, or `EXTERNAL`.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.CardDetails">
            <summary>
            Reflects the current status of a card payment. Contains only non-confidential information.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.CashDetails">
            <summary>
            Stores details about a cash payment. Contains only non-confidential information. For more information, see
            [Take Cash Payments](https://developer.squareup.com/docs/payments-api/take-payments/cash-payments).
            </summary>
        </member>
        <member name="P:Square.Models.Payment.BankAccountDetails">
            <summary>
            Additional details about BANK_ACCOUNT type payments.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.ExternalDetails">
            <summary>
            Stores details about an external payment. Contains only non-confidential information.
            For more information, see
            [Take External Payments](https://developer.squareup.com/docs/payments-api/take-payments/external-payments).
            </summary>
        </member>
        <member name="P:Square.Models.Payment.LocationId">
            <summary>
            The ID of the location associated with the payment.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.OrderId">
            <summary>
            The ID of the order associated with the payment.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.ReferenceId">
            <summary>
            An optional ID that associates the payment with an entity in
            another system.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.CustomerId">
            <summary>
            The [Customer]($m/Customer) ID of the customer associated with the payment.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.EmployeeId">
            <summary>
            An optional ID of the employee associated with taking the payment.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.RefundIds">
            <summary>
            A list of `refund_id`s identifying refunds for the payment.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.RiskEvaluation">
            <summary>
            Represents fraud risk information for the associated payment.
            When you take a payment through Square's Payments API (using the `CreatePayment`
            endpoint), Square evaluates it and assigns a risk level to the payment. Sellers
            can use this information to determine the course of action (for example,
            provide the goods/services or refund the payment).
            </summary>
        </member>
        <member name="P:Square.Models.Payment.BuyerEmailAddress">
            <summary>
            The buyer's email address.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.BillingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.ShippingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.Note">
            <summary>
            An optional note to include when creating a payment.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.StatementDescriptionIdentifier">
            <summary>
            Additional payment information that gets added to the customer's card statement
            as part of the statement description.
            Note that the `statement_description_identifier` might get truncated on the statement description
            to fit the required information including the Square identifier (SQ *) and the name of the
            seller taking the payment.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.Capabilities">
            <summary>
            Actions that can be performed on this payment:
            - `EDIT_AMOUNT_UP` - The payment amount can be edited up.
            - `EDIT_AMOUNT_DOWN` - The payment amount can be edited down.
            - `EDIT_TIP_AMOUNT_UP` - The tip amount can be edited up.
            - `EDIT_TIP_AMOUNT_DOWN` - The tip amount can be edited down.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.ReceiptNumber">
            <summary>
            The payment's receipt number.
            The field is missing if a payment is canceled.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.ReceiptUrl">
            <summary>
            The URL for the payment's receipt.
            The field is only populated for COMPLETED payments.
            </summary>
        </member>
        <member name="P:Square.Models.Payment.VersionToken">
            <summary>
            Used for optimistic concurrency. This opaque token identifies a specific version of the
            `Payment` object.
            </summary>
        </member>
        <member name="M:Square.Models.Payment.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Payment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Payment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Payment.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Payment.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Payment.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Payment.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.TipMoney(Square.Models.Money)">
            <summary>
            TipMoney.
            </summary>
            <param name="tipMoney"> tipMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.TotalMoney(Square.Models.Money)">
            <summary>
            TotalMoney.
            </summary>
            <param name="totalMoney"> totalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.AppFeeMoney(Square.Models.Money)">
            <summary>
            AppFeeMoney.
            </summary>
            <param name="appFeeMoney"> appFeeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.ApprovedMoney(Square.Models.Money)">
            <summary>
            ApprovedMoney.
            </summary>
            <param name="approvedMoney"> approvedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.ProcessingFee(System.Collections.Generic.IList{Square.Models.ProcessingFee})">
            <summary>
            ProcessingFee.
            </summary>
            <param name="processingFee"> processingFee. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.RefundedMoney(Square.Models.Money)">
            <summary>
            RefundedMoney.
            </summary>
            <param name="refundedMoney"> refundedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.DelayDuration(System.String)">
            <summary>
            DelayDuration.
            </summary>
            <param name="delayDuration"> delayDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.DelayAction(System.String)">
            <summary>
            DelayAction.
            </summary>
            <param name="delayAction"> delayAction. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.DelayedUntil(System.String)">
            <summary>
            DelayedUntil.
            </summary>
            <param name="delayedUntil"> delayedUntil. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.SourceType(System.String)">
            <summary>
            SourceType.
            </summary>
            <param name="sourceType"> sourceType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.CardDetails(Square.Models.CardPaymentDetails)">
            <summary>
            CardDetails.
            </summary>
            <param name="cardDetails"> cardDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.CashDetails(Square.Models.CashPaymentDetails)">
            <summary>
            CashDetails.
            </summary>
            <param name="cashDetails"> cashDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.BankAccountDetails(Square.Models.BankAccountPaymentDetails)">
            <summary>
            BankAccountDetails.
            </summary>
            <param name="bankAccountDetails"> bankAccountDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.ExternalDetails(Square.Models.ExternalPaymentDetails)">
            <summary>
            ExternalDetails.
            </summary>
            <param name="externalDetails"> externalDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.EmployeeId(System.String)">
            <summary>
            EmployeeId.
            </summary>
            <param name="employeeId"> employeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.RefundIds(System.Collections.Generic.IList{System.String})">
            <summary>
            RefundIds.
            </summary>
            <param name="refundIds"> refundIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.RiskEvaluation(Square.Models.RiskEvaluation)">
            <summary>
            RiskEvaluation.
            </summary>
            <param name="riskEvaluation"> riskEvaluation. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.BuyerEmailAddress(System.String)">
            <summary>
            BuyerEmailAddress.
            </summary>
            <param name="buyerEmailAddress"> buyerEmailAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.BillingAddress(Square.Models.Address)">
            <summary>
            BillingAddress.
            </summary>
            <param name="billingAddress"> billingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.ShippingAddress(Square.Models.Address)">
            <summary>
            ShippingAddress.
            </summary>
            <param name="shippingAddress"> shippingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.StatementDescriptionIdentifier(System.String)">
            <summary>
            StatementDescriptionIdentifier.
            </summary>
            <param name="statementDescriptionIdentifier"> statementDescriptionIdentifier. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.Capabilities(System.Collections.Generic.IList{System.String})">
            <summary>
            Capabilities.
            </summary>
            <param name="capabilities"> capabilities. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.ReceiptNumber(System.String)">
            <summary>
            ReceiptNumber.
            </summary>
            <param name="receiptNumber"> receiptNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.ReceiptUrl(System.String)">
            <summary>
            ReceiptUrl.
            </summary>
            <param name="receiptUrl"> receiptUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.VersionToken(System.String)">
            <summary>
            VersionToken.
            </summary>
            <param name="versionToken"> versionToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Payment.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Payment. </returns>
        </member>
        <member name="T:Square.Models.PaymentOptions">
            <summary>
            PaymentOptions.
            </summary>
        </member>
        <member name="M:Square.Models.PaymentOptions.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.PaymentOptions"/> class.
            </summary>
            <param name="autocomplete">autocomplete.</param>
        </member>
        <member name="P:Square.Models.PaymentOptions.Autocomplete">
            <summary>
            Indicates whether the `Payment` objects created from this `TerminalCheckout` are automatically
            `COMPLETED` or left in an `APPROVED` state for later modification.
            </summary>
        </member>
        <member name="M:Square.Models.PaymentOptions.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PaymentOptions.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PaymentOptions.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PaymentOptions.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.PaymentOptions.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.PaymentOptions.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.PaymentOptions.Builder.Autocomplete(System.Nullable{System.Boolean})">
            <summary>
            Autocomplete.
            </summary>
            <param name="autocomplete"> autocomplete. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentOptions.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> PaymentOptions. </returns>
        </member>
        <member name="T:Square.Models.PaymentRefund">
            <summary>
            PaymentRefund.
            </summary>
        </member>
        <member name="M:Square.Models.PaymentRefund.#ctor(System.String,Square.Models.Money,System.String,System.String,Square.Models.Money,System.Collections.Generic.IList{Square.Models.ProcessingFee},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.PaymentRefund"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="status">status.</param>
            <param name="locationId">location_id.</param>
            <param name="appFeeMoney">app_fee_money.</param>
            <param name="processingFee">processing_fee.</param>
            <param name="paymentId">payment_id.</param>
            <param name="orderId">order_id.</param>
            <param name="reason">reason.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.PaymentRefund.Id">
            <summary>
            The unique ID for this refund, generated by Square.
            </summary>
        </member>
        <member name="P:Square.Models.PaymentRefund.Status">
            <summary>
            The refund's status:
            - `PENDING` - Awaiting approval.
            - `COMPLETED` - Successfully completed.
            - `REJECTED` - The refund was rejected.
            - `FAILED` - An error occurred.
            </summary>
        </member>
        <member name="P:Square.Models.PaymentRefund.LocationId">
            <summary>
            The location ID associated with the payment this refund is attached to.
            </summary>
        </member>
        <member name="P:Square.Models.PaymentRefund.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.PaymentRefund.AppFeeMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.PaymentRefund.ProcessingFee">
            <summary>
            Processing fees and fee adjustments assessed by Square for this refund.
            </summary>
        </member>
        <member name="P:Square.Models.PaymentRefund.PaymentId">
            <summary>
            The ID of the payment associated with this refund.
            </summary>
        </member>
        <member name="P:Square.Models.PaymentRefund.OrderId">
            <summary>
            The ID of the order associated with the refund.
            </summary>
        </member>
        <member name="P:Square.Models.PaymentRefund.Reason">
            <summary>
            The reason for the refund.
            </summary>
        </member>
        <member name="P:Square.Models.PaymentRefund.CreatedAt">
            <summary>
            The timestamp of when the refund was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.PaymentRefund.UpdatedAt">
            <summary>
            The timestamp of when the refund was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.PaymentRefund.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PaymentRefund.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PaymentRefund.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PaymentRefund.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.PaymentRefund.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.PaymentRefund.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.AppFeeMoney(Square.Models.Money)">
            <summary>
            AppFeeMoney.
            </summary>
            <param name="appFeeMoney"> appFeeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.ProcessingFee(System.Collections.Generic.IList{Square.Models.ProcessingFee})">
            <summary>
            ProcessingFee.
            </summary>
            <param name="processingFee"> processingFee. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.PaymentId(System.String)">
            <summary>
            PaymentId.
            </summary>
            <param name="paymentId"> paymentId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.Reason(System.String)">
            <summary>
            Reason.
            </summary>
            <param name="reason"> reason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PaymentRefund.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> PaymentRefund. </returns>
        </member>
        <member name="T:Square.Models.PayOrderRequest">
            <summary>
            PayOrderRequest.
            </summary>
        </member>
        <member name="M:Square.Models.PayOrderRequest.#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.PayOrderRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="orderVersion">order_version.</param>
            <param name="paymentIds">payment_ids.</param>
        </member>
        <member name="P:Square.Models.PayOrderRequest.IdempotencyKey">
            <summary>
            A value you specify that uniquely identifies this request among requests you have sent. If
            you are unsure whether a particular payment request was completed successfully, you can reattempt
            it with the same idempotency key without worrying about duplicate payments.
            For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="P:Square.Models.PayOrderRequest.OrderVersion">
            <summary>
            The version of the order being paid. If not supplied, the latest version will be paid.
            </summary>
        </member>
        <member name="P:Square.Models.PayOrderRequest.PaymentIds">
            <summary>
            The IDs of the [payments]($m/Payment) to collect.
            The payment total must match the order total.
            </summary>
        </member>
        <member name="M:Square.Models.PayOrderRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PayOrderRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PayOrderRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PayOrderRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.PayOrderRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.PayOrderRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.PayOrderRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PayOrderRequest.Builder.OrderVersion(System.Nullable{System.Int32})">
            <summary>
            OrderVersion.
            </summary>
            <param name="orderVersion"> orderVersion. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PayOrderRequest.Builder.PaymentIds(System.Collections.Generic.IList{System.String})">
            <summary>
            PaymentIds.
            </summary>
            <param name="paymentIds"> paymentIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PayOrderRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> PayOrderRequest. </returns>
        </member>
        <member name="T:Square.Models.PayOrderResponse">
            <summary>
            PayOrderResponse.
            </summary>
        </member>
        <member name="M:Square.Models.PayOrderResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Order)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.PayOrderResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="order">order.</param>
        </member>
        <member name="P:Square.Models.PayOrderResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.PayOrderResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.PayOrderResponse.Order">
            <summary>
            Contains all information related to a single order to process with Square,
            including line items that specify the products to purchase. `Order` objects also
            include information about any associated tenders, refunds, and returns.
            All Connect V2 Transactions have all been converted to Orders including all associated
            itemization data.
            </summary>
        </member>
        <member name="M:Square.Models.PayOrderResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PayOrderResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PayOrderResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PayOrderResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.PayOrderResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.PayOrderResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.PayOrderResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PayOrderResponse.Builder.Order(Square.Models.Order)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PayOrderResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> PayOrderResponse. </returns>
        </member>
        <member name="T:Square.Models.ProcessingFee">
            <summary>
            ProcessingFee.
            </summary>
        </member>
        <member name="M:Square.Models.ProcessingFee.#ctor(System.String,System.String,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ProcessingFee"/> class.
            </summary>
            <param name="effectiveAt">effective_at.</param>
            <param name="type">type.</param>
            <param name="amountMoney">amount_money.</param>
        </member>
        <member name="P:Square.Models.ProcessingFee.EffectiveAt">
            <summary>
            The timestamp of when the fee takes effect, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.ProcessingFee.Type">
            <summary>
            The type of fee assessed or adjusted. The fee type can be `INITIAL` or `ADJUSTMENT`.
            </summary>
        </member>
        <member name="P:Square.Models.ProcessingFee.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.ProcessingFee.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ProcessingFee.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ProcessingFee.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ProcessingFee.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ProcessingFee.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ProcessingFee.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ProcessingFee.Builder.EffectiveAt(System.String)">
            <summary>
            EffectiveAt.
            </summary>
            <param name="effectiveAt"> effectiveAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ProcessingFee.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ProcessingFee.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ProcessingFee.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ProcessingFee. </returns>
        </member>
        <member name="T:Square.Models.PublishInvoiceRequest">
            <summary>
            PublishInvoiceRequest.
            </summary>
        </member>
        <member name="M:Square.Models.PublishInvoiceRequest.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.PublishInvoiceRequest"/> class.
            </summary>
            <param name="version">version.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.PublishInvoiceRequest.Version">
            <summary>
            The version of the [invoice]($m/Invoice) to publish.
            This must match the current version of the invoice; otherwise, the request is rejected.
            </summary>
        </member>
        <member name="P:Square.Models.PublishInvoiceRequest.IdempotencyKey">
            <summary>
            A unique string that identifies the `PublishInvoice` request. If you do not
            provide `idempotency_key` (or provide an empty string as the value), the endpoint
            treats each request as independent.
            For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="M:Square.Models.PublishInvoiceRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PublishInvoiceRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PublishInvoiceRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PublishInvoiceRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.PublishInvoiceRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.PublishInvoiceRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.PublishInvoiceRequest.Builder.Version(System.Int32)">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PublishInvoiceRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PublishInvoiceRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> PublishInvoiceRequest. </returns>
        </member>
        <member name="T:Square.Models.PublishInvoiceResponse">
            <summary>
            PublishInvoiceResponse.
            </summary>
        </member>
        <member name="M:Square.Models.PublishInvoiceResponse.#ctor(Square.Models.Invoice,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.PublishInvoiceResponse"/> class.
            </summary>
            <param name="invoice">invoice.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.PublishInvoiceResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.PublishInvoiceResponse.Invoice">
            <summary>
            Stores information about an invoice. You use the Invoices API to create and manage
            invoices. For more information, see [Manage Invoices Using the Invoices API](https://developer.squareup.com/docs/invoices-api/overview).
            </summary>
        </member>
        <member name="P:Square.Models.PublishInvoiceResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.PublishInvoiceResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PublishInvoiceResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PublishInvoiceResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.PublishInvoiceResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.PublishInvoiceResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.PublishInvoiceResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.PublishInvoiceResponse.Builder.Invoice(Square.Models.Invoice)">
            <summary>
            Invoice.
            </summary>
            <param name="invoice"> invoice. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PublishInvoiceResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.PublishInvoiceResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> PublishInvoiceResponse. </returns>
        </member>
        <member name="T:Square.Models.Range">
            <summary>
            Range.
            </summary>
        </member>
        <member name="M:Square.Models.Range.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Range"/> class.
            </summary>
            <param name="min">min.</param>
            <param name="max">max.</param>
        </member>
        <member name="P:Square.Models.Range.Min">
            <summary>
            The lower bound of the number range.
            </summary>
        </member>
        <member name="P:Square.Models.Range.Max">
            <summary>
            The upper bound of the number range.
            </summary>
        </member>
        <member name="M:Square.Models.Range.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Range.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Range.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Range.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Range.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Range.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Range.Builder.Min(System.String)">
            <summary>
            Min.
            </summary>
            <param name="min"> min. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Range.Builder.Max(System.String)">
            <summary>
            Max.
            </summary>
            <param name="max"> max. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Range.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Range. </returns>
        </member>
        <member name="T:Square.Models.RedeemLoyaltyRewardRequest">
            <summary>
            RedeemLoyaltyRewardRequest.
            </summary>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RedeemLoyaltyRewardRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.RedeemLoyaltyRewardRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this `RedeemLoyaltyReward` request.
            Keys can be any valid string, but must be unique for every request.
            </summary>
        </member>
        <member name="P:Square.Models.RedeemLoyaltyRewardRequest.LocationId">
            <summary>
            The ID of the [location]($m/Location) where the reward is redeemed.
            </summary>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RedeemLoyaltyRewardRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RedeemLoyaltyRewardRequest. </returns>
        </member>
        <member name="T:Square.Models.RedeemLoyaltyRewardResponse">
            <summary>
            RedeemLoyaltyRewardResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.LoyaltyEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RedeemLoyaltyRewardResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="mEvent">event.</param>
        </member>
        <member name="P:Square.Models.RedeemLoyaltyRewardResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RedeemLoyaltyRewardResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RedeemLoyaltyRewardResponse.MEvent">
            <summary>
            Provides information about a loyalty event.
            For more information, see [Loyalty events](https://developer.squareup.com/docs/loyalty-api/overview/#loyalty-events).
            </summary>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RedeemLoyaltyRewardResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardResponse.Builder.MEvent(Square.Models.LoyaltyEvent)">
            <summary>
            MEvent.
            </summary>
            <param name="mEvent"> mEvent. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RedeemLoyaltyRewardResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RedeemLoyaltyRewardResponse. </returns>
        </member>
        <member name="T:Square.Models.Refund">
            <summary>
            Refund.
            </summary>
        </member>
        <member name="M:Square.Models.Refund.#ctor(System.String,System.String,System.String,System.String,System.String,Square.Models.Money,System.String,System.String,Square.Models.Money,System.Collections.Generic.IList{Square.Models.AdditionalRecipient})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Refund"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="locationId">location_id.</param>
            <param name="transactionId">transaction_id.</param>
            <param name="tenderId">tender_id.</param>
            <param name="reason">reason.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="status">status.</param>
            <param name="createdAt">created_at.</param>
            <param name="processingFeeMoney">processing_fee_money.</param>
            <param name="additionalRecipients">additional_recipients.</param>
        </member>
        <member name="P:Square.Models.Refund.Id">
            <summary>
            The refund's unique ID.
            </summary>
        </member>
        <member name="P:Square.Models.Refund.LocationId">
            <summary>
            The ID of the refund's associated location.
            </summary>
        </member>
        <member name="P:Square.Models.Refund.TransactionId">
            <summary>
            The ID of the transaction that the refunded tender is part of.
            </summary>
        </member>
        <member name="P:Square.Models.Refund.TenderId">
            <summary>
            The ID of the refunded tender.
            </summary>
        </member>
        <member name="P:Square.Models.Refund.CreatedAt">
            <summary>
            The timestamp for when the refund was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Refund.Reason">
            <summary>
            The reason for the refund being issued.
            </summary>
        </member>
        <member name="P:Square.Models.Refund.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Refund.Status">
            <summary>
            Indicates a refund's current status.
            </summary>
        </member>
        <member name="P:Square.Models.Refund.ProcessingFeeMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Refund.AdditionalRecipients">
            <summary>
            Additional recipients (other than the merchant) receiving a portion of this refund.
            For example, fees assessed on a refund of a purchase by a third party integration.
            </summary>
        </member>
        <member name="M:Square.Models.Refund.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Refund.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Refund.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Refund.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Refund.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Refund.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Refund.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Refund.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Refund.Builder.TransactionId(System.String)">
            <summary>
            TransactionId.
            </summary>
            <param name="transactionId"> transactionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Refund.Builder.TenderId(System.String)">
            <summary>
            TenderId.
            </summary>
            <param name="tenderId"> tenderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Refund.Builder.Reason(System.String)">
            <summary>
            Reason.
            </summary>
            <param name="reason"> reason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Refund.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Refund.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Refund.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Refund.Builder.ProcessingFeeMoney(Square.Models.Money)">
            <summary>
            ProcessingFeeMoney.
            </summary>
            <param name="processingFeeMoney"> processingFeeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Refund.Builder.AdditionalRecipients(System.Collections.Generic.IList{Square.Models.AdditionalRecipient})">
            <summary>
            AdditionalRecipients.
            </summary>
            <param name="additionalRecipients"> additionalRecipients. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Refund.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Refund. </returns>
        </member>
        <member name="T:Square.Models.RefundPaymentRequest">
            <summary>
            RefundPaymentRequest.
            </summary>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.#ctor(System.String,Square.Models.Money,System.String,Square.Models.Money,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RefundPaymentRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="paymentId">payment_id.</param>
            <param name="appFeeMoney">app_fee_money.</param>
            <param name="reason">reason.</param>
        </member>
        <member name="P:Square.Models.RefundPaymentRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this `RefundPayment` request. The key can be any valid string
            but must be unique for every `RefundPayment` request.
            For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="P:Square.Models.RefundPaymentRequest.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.RefundPaymentRequest.AppFeeMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.RefundPaymentRequest.PaymentId">
            <summary>
            The unique ID of the payment being refunded.
            </summary>
        </member>
        <member name="P:Square.Models.RefundPaymentRequest.Reason">
            <summary>
            A description of the reason for the refund.
            </summary>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RefundPaymentRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.Builder.PaymentId(System.String)">
            <summary>
            PaymentId.
            </summary>
            <param name="paymentId"> paymentId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.Builder.AppFeeMoney(Square.Models.Money)">
            <summary>
            AppFeeMoney.
            </summary>
            <param name="appFeeMoney"> appFeeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.Builder.Reason(System.String)">
            <summary>
            Reason.
            </summary>
            <param name="reason"> reason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RefundPaymentRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RefundPaymentRequest. </returns>
        </member>
        <member name="T:Square.Models.RefundPaymentResponse">
            <summary>
            RefundPaymentResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RefundPaymentResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.PaymentRefund)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RefundPaymentResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="refund">refund.</param>
        </member>
        <member name="P:Square.Models.RefundPaymentResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RefundPaymentResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RefundPaymentResponse.Refund">
            <summary>
            Represents a refund of a payment made using Square. Contains information about
            the original payment and the amount of money refunded.
            </summary>
        </member>
        <member name="M:Square.Models.RefundPaymentResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RefundPaymentResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RefundPaymentResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RefundPaymentResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RefundPaymentResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RefundPaymentResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RefundPaymentResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RefundPaymentResponse.Builder.Refund(Square.Models.PaymentRefund)">
            <summary>
            Refund.
            </summary>
            <param name="refund"> refund. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RefundPaymentResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RefundPaymentResponse. </returns>
        </member>
        <member name="T:Square.Models.RegisterDomainRequest">
            <summary>
            RegisterDomainRequest.
            </summary>
        </member>
        <member name="M:Square.Models.RegisterDomainRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RegisterDomainRequest"/> class.
            </summary>
            <param name="domainName">domain_name.</param>
        </member>
        <member name="P:Square.Models.RegisterDomainRequest.DomainName">
            <summary>
            A domain name as described in RFC-1034 that will be registered with ApplePay.
            </summary>
        </member>
        <member name="M:Square.Models.RegisterDomainRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RegisterDomainRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RegisterDomainRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RegisterDomainRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RegisterDomainRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RegisterDomainRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RegisterDomainRequest.Builder.DomainName(System.String)">
            <summary>
            DomainName.
            </summary>
            <param name="domainName"> domainName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RegisterDomainRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RegisterDomainRequest. </returns>
        </member>
        <member name="T:Square.Models.RegisterDomainResponse">
            <summary>
            RegisterDomainResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RegisterDomainResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RegisterDomainResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:Square.Models.RegisterDomainResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RegisterDomainResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RegisterDomainResponse.Status">
            <summary>
            The status of the domain registration.
            </summary>
        </member>
        <member name="M:Square.Models.RegisterDomainResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RegisterDomainResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RegisterDomainResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RegisterDomainResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RegisterDomainResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RegisterDomainResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RegisterDomainResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RegisterDomainResponse.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RegisterDomainResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RegisterDomainResponse. </returns>
        </member>
        <member name="T:Square.Models.RemoveDisputeEvidenceResponse">
            <summary>
            RemoveDisputeEvidenceResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RemoveDisputeEvidenceResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RemoveDisputeEvidenceResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.RemoveDisputeEvidenceResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RemoveDisputeEvidenceResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.RemoveDisputeEvidenceResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RemoveDisputeEvidenceResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RemoveDisputeEvidenceResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RemoveDisputeEvidenceResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RemoveDisputeEvidenceResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RemoveDisputeEvidenceResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RemoveDisputeEvidenceResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RemoveDisputeEvidenceResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RemoveDisputeEvidenceResponse. </returns>
        </member>
        <member name="T:Square.Models.RemoveGroupFromCustomerResponse">
            <summary>
            RemoveGroupFromCustomerResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RemoveGroupFromCustomerResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RemoveGroupFromCustomerResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.RemoveGroupFromCustomerResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RemoveGroupFromCustomerResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.RemoveGroupFromCustomerResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RemoveGroupFromCustomerResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RemoveGroupFromCustomerResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RemoveGroupFromCustomerResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RemoveGroupFromCustomerResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RemoveGroupFromCustomerResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RemoveGroupFromCustomerResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RemoveGroupFromCustomerResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RemoveGroupFromCustomerResponse. </returns>
        </member>
        <member name="T:Square.Models.RenewTokenRequest">
            <summary>
            RenewTokenRequest.
            </summary>
        </member>
        <member name="M:Square.Models.RenewTokenRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RenewTokenRequest"/> class.
            </summary>
            <param name="accessToken">access_token.</param>
        </member>
        <member name="P:Square.Models.RenewTokenRequest.AccessToken">
            <summary>
            The token you want to renew.
            </summary>
        </member>
        <member name="M:Square.Models.RenewTokenRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RenewTokenRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RenewTokenRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RenewTokenRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RenewTokenRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RenewTokenRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RenewTokenRequest.Builder.AccessToken(System.String)">
            <summary>
            AccessToken.
            </summary>
            <param name="accessToken"> accessToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RenewTokenRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RenewTokenRequest. </returns>
        </member>
        <member name="T:Square.Models.RenewTokenResponse">
            <summary>
            RenewTokenResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RenewTokenResponse"/> class.
            </summary>
            <param name="accessToken">access_token.</param>
            <param name="tokenType">token_type.</param>
            <param name="expiresAt">expires_at.</param>
            <param name="merchantId">merchant_id.</param>
            <param name="subscriptionId">subscription_id.</param>
            <param name="planId">plan_id.</param>
        </member>
        <member name="P:Square.Models.RenewTokenResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RenewTokenResponse.AccessToken">
            <summary>
            The renewed access token.
            This value might be different from the `access_token` you provided in your request.
            You provide this token in a header with every request to Connect API endpoints.
            See [Request and response headers](https://developer.squareup.com/docs/api/connect/v2/#requestandresponseheaders) for the format of this header.
            </summary>
        </member>
        <member name="P:Square.Models.RenewTokenResponse.TokenType">
            <summary>
            This value is always _bearer_.
            </summary>
        </member>
        <member name="P:Square.Models.RenewTokenResponse.ExpiresAt">
            <summary>
            The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format.
            </summary>
        </member>
        <member name="P:Square.Models.RenewTokenResponse.MerchantId">
            <summary>
            The ID of the authorizing merchant's business.
            </summary>
        </member>
        <member name="P:Square.Models.RenewTokenResponse.SubscriptionId">
            <summary>
            __LEGACY FIELD__. The ID of the merchant subscription associated with
            the authorization. Only present if the merchant signed up for a subscription
            during authorization..
            </summary>
        </member>
        <member name="P:Square.Models.RenewTokenResponse.PlanId">
            <summary>
            __LEGACY FIELD__. The ID of the subscription plan the merchant signed
            up for. Only present if the merchant signed up for a subscription during
            authorization.
            </summary>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RenewTokenResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.Builder.AccessToken(System.String)">
            <summary>
            AccessToken.
            </summary>
            <param name="accessToken"> accessToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.Builder.TokenType(System.String)">
            <summary>
            TokenType.
            </summary>
            <param name="tokenType"> tokenType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.Builder.ExpiresAt(System.String)">
            <summary>
            ExpiresAt.
            </summary>
            <param name="expiresAt"> expiresAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.Builder.MerchantId(System.String)">
            <summary>
            MerchantId.
            </summary>
            <param name="merchantId"> merchantId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.Builder.SubscriptionId(System.String)">
            <summary>
            SubscriptionId.
            </summary>
            <param name="subscriptionId"> subscriptionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.Builder.PlanId(System.String)">
            <summary>
            PlanId.
            </summary>
            <param name="planId"> planId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RenewTokenResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RenewTokenResponse. </returns>
        </member>
        <member name="T:Square.Models.ResumeSubscriptionResponse">
            <summary>
            ResumeSubscriptionResponse.
            </summary>
        </member>
        <member name="M:Square.Models.ResumeSubscriptionResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ResumeSubscriptionResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="subscription">subscription.</param>
        </member>
        <member name="P:Square.Models.ResumeSubscriptionResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.ResumeSubscriptionResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.ResumeSubscriptionResponse.Subscription">
            <summary>
            Represents a customer subscription to a subscription plan.
            For an overview of the `Subscription` type, see
            [Subscription object](https://developer.squareup.com/docs/subscriptions-api/overview#subscription-object-overview).
            </summary>
        </member>
        <member name="M:Square.Models.ResumeSubscriptionResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ResumeSubscriptionResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ResumeSubscriptionResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ResumeSubscriptionResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ResumeSubscriptionResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ResumeSubscriptionResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ResumeSubscriptionResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ResumeSubscriptionResponse.Builder.Subscription(Square.Models.Subscription)">
            <summary>
            Subscription.
            </summary>
            <param name="subscription"> subscription. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ResumeSubscriptionResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ResumeSubscriptionResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveBookingResponse">
            <summary>
            RetrieveBookingResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveBookingResponse.#ctor(Square.Models.Booking,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveBookingResponse"/> class.
            </summary>
            <param name="booking">booking.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.RetrieveBookingResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveBookingResponse.Booking">
            <summary>
            Represents a booking as a time-bound service contract for a seller's staff member to provide a specified service
            at a given location to a requesting customer in one or more appointment segments.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveBookingResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveBookingResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveBookingResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveBookingResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveBookingResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveBookingResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveBookingResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveBookingResponse.Builder.Booking(Square.Models.Booking)">
            <summary>
            Booking.
            </summary>
            <param name="booking"> booking. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveBookingResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveBookingResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveBookingResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveBusinessBookingProfileResponse">
            <summary>
            RetrieveBusinessBookingProfileResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveBusinessBookingProfileResponse.#ctor(Square.Models.BusinessBookingProfile,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveBusinessBookingProfileResponse"/> class.
            </summary>
            <param name="businessBookingProfile">business_booking_profile.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.RetrieveBusinessBookingProfileResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveBusinessBookingProfileResponse.BusinessBookingProfile">
            <summary>
            Gets or sets BusinessBookingProfile.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveBusinessBookingProfileResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveBusinessBookingProfileResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveBusinessBookingProfileResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveBusinessBookingProfileResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveBusinessBookingProfileResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveBusinessBookingProfileResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveBusinessBookingProfileResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveBusinessBookingProfileResponse.Builder.BusinessBookingProfile(Square.Models.BusinessBookingProfile)">
            <summary>
            BusinessBookingProfile.
            </summary>
            <param name="businessBookingProfile"> businessBookingProfile. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveBusinessBookingProfileResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveBusinessBookingProfileResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveBusinessBookingProfileResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCashDrawerShiftRequest">
            <summary>
            RetrieveCashDrawerShiftRequest.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveCashDrawerShiftRequest"/> class.
            </summary>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.RetrieveCashDrawerShiftRequest.LocationId">
            <summary>
            The ID of the location to retrieve cash drawer shifts from.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCashDrawerShiftRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftRequest.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveCashDrawerShiftRequest. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCashDrawerShiftResponse">
            <summary>
            RetrieveCashDrawerShiftResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftResponse.#ctor(Square.Models.CashDrawerShift,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveCashDrawerShiftResponse"/> class.
            </summary>
            <param name="cashDrawerShift">cash_drawer_shift.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.RetrieveCashDrawerShiftResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCashDrawerShiftResponse.CashDrawerShift">
            <summary>
            This model gives the details of a cash drawer shift.
            The cash_payment_money, cash_refund_money, cash_paid_in_money,
            and cash_paid_out_money fields are all computed by summing their respective
            event types.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCashDrawerShiftResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCashDrawerShiftResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftResponse.Builder.CashDrawerShift(Square.Models.CashDrawerShift)">
            <summary>
            CashDrawerShift.
            </summary>
            <param name="cashDrawerShift"> cashDrawerShift. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCashDrawerShiftResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveCashDrawerShiftResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCatalogObjectRequest">
            <summary>
            RetrieveCatalogObjectRequest.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectRequest.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveCatalogObjectRequest"/> class.
            </summary>
            <param name="includeRelatedObjects">include_related_objects.</param>
            <param name="catalogVersion">catalog_version.</param>
        </member>
        <member name="P:Square.Models.RetrieveCatalogObjectRequest.IncludeRelatedObjects">
            <summary>
            If `true`, the response will include additional objects that are related to the
            requested object, as follows:
            If the `object` field of the response contains a `CatalogItem`, its associated
            `CatalogCategory`, `CatalogTax`, `CatalogImage` and `CatalogModifierList` objects will
            be returned in the `related_objects` field of the response. If the `object` field of
            the response contains a `CatalogItemVariation`, its parent `CatalogItem` will be returned
            in the `related_objects` field of the response.
            Default value: `false`
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCatalogObjectRequest.CatalogVersion">
            <summary>
            Requests objects as of a specific version of the catalog. This allows you to retrieve historical
            versions of objects. The value to retrieve a specific version of an object can be found
            in the version field of [CatalogObject]($m/CatalogObject)s.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCatalogObjectRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectRequest.Builder.IncludeRelatedObjects(System.Nullable{System.Boolean})">
            <summary>
            IncludeRelatedObjects.
            </summary>
            <param name="includeRelatedObjects"> includeRelatedObjects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectRequest.Builder.CatalogVersion(System.Nullable{System.Int64})">
            <summary>
            CatalogVersion.
            </summary>
            <param name="catalogVersion"> catalogVersion. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveCatalogObjectRequest. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCatalogObjectResponse">
            <summary>
            RetrieveCatalogObjectResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.CatalogObject,System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveCatalogObjectResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="mObject">object.</param>
            <param name="relatedObjects">related_objects.</param>
        </member>
        <member name="P:Square.Models.RetrieveCatalogObjectResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCatalogObjectResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCatalogObjectResponse.MObject">
            <summary>
            The wrapper object for the Catalog entries of a given object type.
            The type of a particular `CatalogObject` is determined by the value of the
            `type` attribute and only the corresponding data attribute can be set on the `CatalogObject` instance.
            For example, the following list shows some instances of `CatalogObject` of a given `type` and
            their corresponding data attribute that can be set:
            - For a `CatalogObject` of the `ITEM` type, set the `item_data` attribute to yield the `CatalogItem` object.
            - For a `CatalogObject` of the `ITEM_VARIATION` type, set the `item_variation_data` attribute to yield the `CatalogItemVariation` object.
            - For a `CatalogObject` of the `MODIFIER` type, set the `modifier_data` attribute to yield the `CatalogModifier` object.
            - For a `CatalogObject` of the `MODIFIER_LIST` type, set the `modifier_list_data` attribute to yield the `CatalogModifierList` object.
            - For a `CatalogObject` of the `CATEGORY` type, set the `category_data` attribute to yield the `CatalogCategory` object.
            - For a `CatalogObject` of the `DISCOUNT` type, set the `discount_data` attribute to yield the `CatalogDiscount` object.
            - For a `CatalogObject` of the `TAX` type, set the `tax_data` attribute to yield the `CatalogTax` object.
            - For a `CatalogObject` of the `IMAGE` type, set the `image_data` attribute to yield the `CatalogImageData`  object.
            - For a `CatalogObject` of the `QUICK_AMOUNTS_SETTINGS` type, set the `quick_amounts_settings_data` attribute to yield the `CatalogQuickAmountsSettings` object.
            - For a `CatalogObject` of the `PRICING_RULE` type, set the `pricing_rule_data` attribute to yield the `CatalogPricingRule` object.
            - For a `CatalogObject` of the `TIME_PERIOD` type, set the `time_period_data` attribute to yield the `CatalogTimePeriod` object.
            - For a `CatalogObject` of the `PRODUCT_SET` type, set the `product_set_data` attribute to yield the `CatalogProductSet`  object.
            - For a `CatalogObject` of the `SUBSCRIPTION_PLAN` type, set the `subscription_plan_data` attribute to yield the `CatalogSubscriptionPlan` object.
            For a more detailed discussion of the Catalog data model, please see the
            [Design a Catalog](https://developer.squareup.com/docs/catalog-api/design-a-catalog) guide.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCatalogObjectResponse.RelatedObjects">
            <summary>
            A list of `CatalogObject`s referenced by the object in the `object` field.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCatalogObjectResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectResponse.Builder.MObject(Square.Models.CatalogObject)">
            <summary>
            MObject.
            </summary>
            <param name="mObject"> mObject. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectResponse.Builder.RelatedObjects(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            RelatedObjects.
            </summary>
            <param name="relatedObjects"> relatedObjects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCatalogObjectResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveCatalogObjectResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCustomerGroupResponse">
            <summary>
            RetrieveCustomerGroupResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCustomerGroupResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.CustomerGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveCustomerGroupResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="mGroup">group.</param>
        </member>
        <member name="P:Square.Models.RetrieveCustomerGroupResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCustomerGroupResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCustomerGroupResponse.MGroup">
            <summary>
            Represents a group of customer profiles.
            Customer groups can be created, be modified, and have their membership defined using
            the Customers API or within the Customer Directory in the Square Seller Dashboard or Point of Sale.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCustomerGroupResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCustomerGroupResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCustomerGroupResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCustomerGroupResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveCustomerGroupResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCustomerGroupResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCustomerGroupResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCustomerGroupResponse.Builder.MGroup(Square.Models.CustomerGroup)">
            <summary>
            MGroup.
            </summary>
            <param name="mGroup"> mGroup. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCustomerGroupResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveCustomerGroupResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCustomerResponse">
            <summary>
            RetrieveCustomerResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCustomerResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Customer)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveCustomerResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="customer">customer.</param>
        </member>
        <member name="P:Square.Models.RetrieveCustomerResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCustomerResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCustomerResponse.Customer">
            <summary>
            Represents a Square customer profile, which can have one or more
            cards on file associated with it.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCustomerResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCustomerResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCustomerResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCustomerResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveCustomerResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCustomerResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCustomerResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCustomerResponse.Builder.Customer(Square.Models.Customer)">
            <summary>
            Customer.
            </summary>
            <param name="customer"> customer. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCustomerResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveCustomerResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCustomerSegmentResponse">
            <summary>
            RetrieveCustomerSegmentResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCustomerSegmentResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.CustomerSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveCustomerSegmentResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="segment">segment.</param>
        </member>
        <member name="P:Square.Models.RetrieveCustomerSegmentResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCustomerSegmentResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveCustomerSegmentResponse.Segment">
            <summary>
            Represents a group of customer profiles that match one or more predefined filter criteria.
            Segments (also known as Smart Groups) are defined and created within the Customer Directory in the
            Square Seller Dashboard or Point of Sale.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCustomerSegmentResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCustomerSegmentResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCustomerSegmentResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveCustomerSegmentResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveCustomerSegmentResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveCustomerSegmentResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveCustomerSegmentResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCustomerSegmentResponse.Builder.Segment(Square.Models.CustomerSegment)">
            <summary>
            Segment.
            </summary>
            <param name="segment"> segment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveCustomerSegmentResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveCustomerSegmentResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveDisputeEvidenceResponse">
            <summary>
            RetrieveDisputeEvidenceResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveDisputeEvidenceResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.DisputeEvidence)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveDisputeEvidenceResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="evidence">evidence.</param>
        </member>
        <member name="P:Square.Models.RetrieveDisputeEvidenceResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveDisputeEvidenceResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveDisputeEvidenceResponse.Evidence">
            <summary>
            Gets or sets Evidence.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveDisputeEvidenceResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveDisputeEvidenceResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveDisputeEvidenceResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveDisputeEvidenceResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveDisputeEvidenceResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveDisputeEvidenceResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveDisputeEvidenceResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveDisputeEvidenceResponse.Builder.Evidence(Square.Models.DisputeEvidence)">
            <summary>
            Evidence.
            </summary>
            <param name="evidence"> evidence. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveDisputeEvidenceResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveDisputeEvidenceResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveDisputeResponse">
            <summary>
            RetrieveDisputeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveDisputeResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Dispute)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveDisputeResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="dispute">dispute.</param>
        </member>
        <member name="P:Square.Models.RetrieveDisputeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveDisputeResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveDisputeResponse.Dispute">
            <summary>
            Represents a dispute a cardholder initiated with their bank.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveDisputeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveDisputeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveDisputeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveDisputeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveDisputeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveDisputeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveDisputeResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveDisputeResponse.Builder.Dispute(Square.Models.Dispute)">
            <summary>
            Dispute.
            </summary>
            <param name="dispute"> dispute. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveDisputeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveDisputeResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveEmployeeResponse">
            <summary>
            RetrieveEmployeeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveEmployeeResponse.#ctor(Square.Models.Employee,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveEmployeeResponse"/> class.
            </summary>
            <param name="employee">employee.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.RetrieveEmployeeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveEmployeeResponse.Employee">
            <summary>
            An employee object that is used by the external API.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveEmployeeResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveEmployeeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveEmployeeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveEmployeeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveEmployeeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveEmployeeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveEmployeeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveEmployeeResponse.Builder.Employee(Square.Models.Employee)">
            <summary>
            Employee.
            </summary>
            <param name="employee"> employee. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveEmployeeResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveEmployeeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveEmployeeResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryAdjustmentResponse">
            <summary>
            RetrieveInventoryAdjustmentResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryAdjustmentResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.InventoryAdjustment)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveInventoryAdjustmentResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="adjustment">adjustment.</param>
        </member>
        <member name="P:Square.Models.RetrieveInventoryAdjustmentResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryAdjustmentResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryAdjustmentResponse.Adjustment">
            <summary>
            Represents a change in state or quantity of product inventory at a
            particular time and location.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryAdjustmentResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryAdjustmentResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryAdjustmentResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryAdjustmentResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveInventoryAdjustmentResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryAdjustmentResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryAdjustmentResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryAdjustmentResponse.Builder.Adjustment(Square.Models.InventoryAdjustment)">
            <summary>
            Adjustment.
            </summary>
            <param name="adjustment"> adjustment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryAdjustmentResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveInventoryAdjustmentResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryChangesRequest">
            <summary>
            RetrieveInventoryChangesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveInventoryChangesRequest"/> class.
            </summary>
            <param name="locationIds">location_ids.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.RetrieveInventoryChangesRequest.LocationIds">
            <summary>
            The [Location]($m/Location) IDs to look up as a comma-separated
            list. An empty list queries all locations.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryChangesRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.
            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryChangesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesRequest.Builder.LocationIds(System.String)">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveInventoryChangesRequest. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryChangesResponse">
            <summary>
            RetrieveInventoryChangesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.InventoryChange},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveInventoryChangesResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="changes">changes.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.RetrieveInventoryChangesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryChangesResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryChangesResponse.Changes">
            <summary>
            The set of inventory changes for the requested object and locations.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryChangesResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.
            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryChangesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesResponse.Builder.Changes(System.Collections.Generic.IList{Square.Models.InventoryChange})">
            <summary>
            Changes.
            </summary>
            <param name="changes"> changes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryChangesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveInventoryChangesResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryCountRequest">
            <summary>
            RetrieveInventoryCountRequest.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveInventoryCountRequest"/> class.
            </summary>
            <param name="locationIds">location_ids.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.RetrieveInventoryCountRequest.LocationIds">
            <summary>
            The [Location]($m/Location) IDs to look up as a comma-separated
            list. An empty list queries all locations.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryCountRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.
            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryCountRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountRequest.Builder.LocationIds(System.String)">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveInventoryCountRequest. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryCountResponse">
            <summary>
            RetrieveInventoryCountResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.InventoryCount},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveInventoryCountResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="counts">counts.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.RetrieveInventoryCountResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryCountResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryCountResponse.Counts">
            <summary>
            The current calculated inventory counts for the requested object and
            locations.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryCountResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.
            See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryCountResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountResponse.Builder.Counts(System.Collections.Generic.IList{Square.Models.InventoryCount})">
            <summary>
            Counts.
            </summary>
            <param name="counts"> counts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryCountResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveInventoryCountResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryPhysicalCountResponse">
            <summary>
            RetrieveInventoryPhysicalCountResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryPhysicalCountResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.InventoryPhysicalCount)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveInventoryPhysicalCountResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="count">count.</param>
        </member>
        <member name="P:Square.Models.RetrieveInventoryPhysicalCountResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryPhysicalCountResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveInventoryPhysicalCountResponse.Count">
            <summary>
            Represents the quantity of an item variation that is physically present
            at a specific location, verified by a seller or a seller's employee. For example,
            a physical count might come from an employee counting the item variations on
            hand or from syncing with an external system.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryPhysicalCountResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryPhysicalCountResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryPhysicalCountResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveInventoryPhysicalCountResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveInventoryPhysicalCountResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveInventoryPhysicalCountResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveInventoryPhysicalCountResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryPhysicalCountResponse.Builder.Count(Square.Models.InventoryPhysicalCount)">
            <summary>
            Count.
            </summary>
            <param name="count"> count. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveInventoryPhysicalCountResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveInventoryPhysicalCountResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveLocationResponse">
            <summary>
            RetrieveLocationResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLocationResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Location)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveLocationResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="location">location.</param>
        </member>
        <member name="P:Square.Models.RetrieveLocationResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveLocationResponse.Errors">
            <summary>
            Information on errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveLocationResponse.Location">
            <summary>
            Gets or sets Location.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLocationResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLocationResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLocationResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLocationResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveLocationResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveLocationResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLocationResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveLocationResponse.Builder.Location(Square.Models.Location)">
            <summary>
            Location.
            </summary>
            <param name="location"> location. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveLocationResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveLocationResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveLoyaltyAccountResponse">
            <summary>
            RetrieveLoyaltyAccountResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyAccountResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.LoyaltyAccount)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveLoyaltyAccountResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="loyaltyAccount">loyalty_account.</param>
        </member>
        <member name="P:Square.Models.RetrieveLoyaltyAccountResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveLoyaltyAccountResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveLoyaltyAccountResponse.LoyaltyAccount">
            <summary>
            Describes a loyalty account. For more information, see
            [Loyalty Overview](https://developer.squareup.com/docs/loyalty/overview).
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyAccountResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyAccountResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyAccountResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyAccountResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyAccountResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveLoyaltyAccountResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyAccountResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyAccountResponse.Builder.LoyaltyAccount(Square.Models.LoyaltyAccount)">
            <summary>
            LoyaltyAccount.
            </summary>
            <param name="loyaltyAccount"> loyaltyAccount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyAccountResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveLoyaltyAccountResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveLoyaltyProgramResponse">
            <summary>
            RetrieveLoyaltyProgramResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyProgramResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.LoyaltyProgram)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveLoyaltyProgramResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="program">program.</param>
        </member>
        <member name="P:Square.Models.RetrieveLoyaltyProgramResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveLoyaltyProgramResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveLoyaltyProgramResponse.Program">
            <summary>
            Gets or sets Program.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyProgramResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyProgramResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyProgramResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyProgramResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyProgramResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveLoyaltyProgramResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyProgramResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyProgramResponse.Builder.Program(Square.Models.LoyaltyProgram)">
            <summary>
            Program.
            </summary>
            <param name="program"> program. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyProgramResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveLoyaltyProgramResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveLoyaltyRewardResponse">
            <summary>
            RetrieveLoyaltyRewardResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyRewardResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.LoyaltyReward)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveLoyaltyRewardResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="reward">reward.</param>
        </member>
        <member name="P:Square.Models.RetrieveLoyaltyRewardResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveLoyaltyRewardResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveLoyaltyRewardResponse.Reward">
            <summary>
            Represents a contract to redeem loyalty points for a [reward tier]($m/LoyaltyProgramRewardTier) discount. Loyalty rewards can be in an ISSUED, REDEEMED, or DELETED state. For more information, see [Redeem loyalty rewards](https://developer.squareup.com/docs/loyalty-api/overview#redeem-loyalty-rewards).
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyRewardResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyRewardResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyRewardResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyRewardResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyRewardResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveLoyaltyRewardResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyRewardResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyRewardResponse.Builder.Reward(Square.Models.LoyaltyReward)">
            <summary>
            Reward.
            </summary>
            <param name="reward"> reward. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveLoyaltyRewardResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveLoyaltyRewardResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveMerchantResponse">
            <summary>
            RetrieveMerchantResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveMerchantResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Merchant)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveMerchantResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="merchant">merchant.</param>
        </member>
        <member name="P:Square.Models.RetrieveMerchantResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveMerchantResponse.Errors">
            <summary>
            Information on errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveMerchantResponse.Merchant">
            <summary>
            Represents a Square seller.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveMerchantResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveMerchantResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveMerchantResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveMerchantResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveMerchantResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveMerchantResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveMerchantResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveMerchantResponse.Builder.Merchant(Square.Models.Merchant)">
            <summary>
            Merchant.
            </summary>
            <param name="merchant"> merchant. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveMerchantResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveMerchantResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveOrderResponse">
            <summary>
            RetrieveOrderResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveOrderResponse.#ctor(Square.Models.Order,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveOrderResponse"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.RetrieveOrderResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveOrderResponse.Order">
            <summary>
            Contains all information related to a single order to process with Square,
            including line items that specify the products to purchase. `Order` objects also
            include information about any associated tenders, refunds, and returns.
            All Connect V2 Transactions have all been converted to Orders including all associated
            itemization data.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveOrderResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveOrderResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveOrderResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveOrderResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveOrderResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveOrderResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveOrderResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveOrderResponse.Builder.Order(Square.Models.Order)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveOrderResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveOrderResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveOrderResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveSnippetResponse">
            <summary>
            RetrieveSnippetResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveSnippetResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Snippet)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveSnippetResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="snippet">snippet.</param>
        </member>
        <member name="P:Square.Models.RetrieveSnippetResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveSnippetResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveSnippetResponse.Snippet">
            <summary>
            Represents the snippet that is added to a Square Online site. The snippet code is injected into the `head` element of all pages on the site, except for checkout pages.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveSnippetResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveSnippetResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveSnippetResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveSnippetResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveSnippetResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveSnippetResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveSnippetResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveSnippetResponse.Builder.Snippet(Square.Models.Snippet)">
            <summary>
            Snippet.
            </summary>
            <param name="snippet"> snippet. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveSnippetResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveSnippetResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveSubscriptionResponse">
            <summary>
            RetrieveSubscriptionResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveSubscriptionResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveSubscriptionResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="subscription">subscription.</param>
        </member>
        <member name="P:Square.Models.RetrieveSubscriptionResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveSubscriptionResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveSubscriptionResponse.Subscription">
            <summary>
            Represents a customer subscription to a subscription plan.
            For an overview of the `Subscription` type, see
            [Subscription object](https://developer.squareup.com/docs/subscriptions-api/overview#subscription-object-overview).
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveSubscriptionResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveSubscriptionResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveSubscriptionResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveSubscriptionResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveSubscriptionResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveSubscriptionResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveSubscriptionResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveSubscriptionResponse.Builder.Subscription(Square.Models.Subscription)">
            <summary>
            Subscription.
            </summary>
            <param name="subscription"> subscription. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveSubscriptionResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveSubscriptionResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveTeamMemberBookingProfileResponse">
            <summary>
            RetrieveTeamMemberBookingProfileResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberBookingProfileResponse.#ctor(Square.Models.TeamMemberBookingProfile,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveTeamMemberBookingProfileResponse"/> class.
            </summary>
            <param name="teamMemberBookingProfile">team_member_booking_profile.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.RetrieveTeamMemberBookingProfileResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveTeamMemberBookingProfileResponse.TeamMemberBookingProfile">
            <summary>
            The booking profile of a seller's team member, including the team member's ID, display name, description and whether the team member can be booked as a service provider.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveTeamMemberBookingProfileResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberBookingProfileResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberBookingProfileResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberBookingProfileResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberBookingProfileResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberBookingProfileResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveTeamMemberBookingProfileResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberBookingProfileResponse.Builder.TeamMemberBookingProfile(Square.Models.TeamMemberBookingProfile)">
            <summary>
            TeamMemberBookingProfile.
            </summary>
            <param name="teamMemberBookingProfile"> teamMemberBookingProfile. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberBookingProfileResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberBookingProfileResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveTeamMemberBookingProfileResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveTeamMemberResponse">
            <summary>
            RetrieveTeamMemberResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberResponse.#ctor(Square.Models.TeamMember,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveTeamMemberResponse"/> class.
            </summary>
            <param name="teamMember">team_member.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.RetrieveTeamMemberResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveTeamMemberResponse.TeamMember">
            <summary>
            A record representing an individual team member for a business.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveTeamMemberResponse.Errors">
            <summary>
            The errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveTeamMemberResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberResponse.Builder.TeamMember(Square.Models.TeamMember)">
            <summary>
            TeamMember.
            </summary>
            <param name="teamMember"> teamMember. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveTeamMemberResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveTeamMemberResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveTransactionResponse">
            <summary>
            RetrieveTransactionResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveTransactionResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Transaction)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveTransactionResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="transaction">transaction.</param>
        </member>
        <member name="P:Square.Models.RetrieveTransactionResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveTransactionResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveTransactionResponse.Transaction">
            <summary>
            Represents a transaction processed with Square, either with the
            Connect API or with Square Point of Sale.
            The `tenders` field of this object lists all methods of payment used to pay in
            the transaction.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveTransactionResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveTransactionResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveTransactionResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveTransactionResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveTransactionResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveTransactionResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveTransactionResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveTransactionResponse.Builder.Transaction(Square.Models.Transaction)">
            <summary>
            Transaction.
            </summary>
            <param name="transaction"> transaction. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveTransactionResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveTransactionResponse. </returns>
        </member>
        <member name="T:Square.Models.RetrieveWageSettingResponse">
            <summary>
            RetrieveWageSettingResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveWageSettingResponse.#ctor(Square.Models.WageSetting,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RetrieveWageSettingResponse"/> class.
            </summary>
            <param name="wageSetting">wage_setting.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.RetrieveWageSettingResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveWageSettingResponse.WageSetting">
            <summary>
            An object representing a team member's wage information.
            </summary>
        </member>
        <member name="P:Square.Models.RetrieveWageSettingResponse.Errors">
            <summary>
            The errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveWageSettingResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveWageSettingResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveWageSettingResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RetrieveWageSettingResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RetrieveWageSettingResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RetrieveWageSettingResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RetrieveWageSettingResponse.Builder.WageSetting(Square.Models.WageSetting)">
            <summary>
            WageSetting.
            </summary>
            <param name="wageSetting"> wageSetting. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveWageSettingResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RetrieveWageSettingResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RetrieveWageSettingResponse. </returns>
        </member>
        <member name="T:Square.Models.RevokeTokenRequest">
            <summary>
            RevokeTokenRequest.
            </summary>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RevokeTokenRequest"/> class.
            </summary>
            <param name="clientId">client_id.</param>
            <param name="accessToken">access_token.</param>
            <param name="merchantId">merchant_id.</param>
            <param name="revokeOnlyAccessToken">revoke_only_access_token.</param>
        </member>
        <member name="P:Square.Models.RevokeTokenRequest.ClientId">
            <summary>
            The Square issued ID for your application, available from the
            [application dashboard](https://connect.squareup.com/apps).
            </summary>
        </member>
        <member name="P:Square.Models.RevokeTokenRequest.AccessToken">
            <summary>
            The access token of the merchant whose token you want to revoke.
            Do not provide a value for merchant_id if you provide this parameter.
            </summary>
        </member>
        <member name="P:Square.Models.RevokeTokenRequest.MerchantId">
            <summary>
            The ID of the merchant whose token you want to revoke.
            Do not provide a value for access_token if you provide this parameter.
            </summary>
        </member>
        <member name="P:Square.Models.RevokeTokenRequest.RevokeOnlyAccessToken">
            <summary>
            If `true`, terminate the given single access token, but do not
            terminate the entire authorization.
            Default: `false`
            </summary>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RevokeTokenRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.Builder.ClientId(System.String)">
            <summary>
            ClientId.
            </summary>
            <param name="clientId"> clientId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.Builder.AccessToken(System.String)">
            <summary>
            AccessToken.
            </summary>
            <param name="accessToken"> accessToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.Builder.MerchantId(System.String)">
            <summary>
            MerchantId.
            </summary>
            <param name="merchantId"> merchantId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.Builder.RevokeOnlyAccessToken(System.Nullable{System.Boolean})">
            <summary>
            RevokeOnlyAccessToken.
            </summary>
            <param name="revokeOnlyAccessToken"> revokeOnlyAccessToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RevokeTokenRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RevokeTokenRequest. </returns>
        </member>
        <member name="T:Square.Models.RevokeTokenResponse">
            <summary>
            RevokeTokenResponse.
            </summary>
        </member>
        <member name="M:Square.Models.RevokeTokenResponse.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RevokeTokenResponse"/> class.
            </summary>
            <param name="success">success.</param>
        </member>
        <member name="P:Square.Models.RevokeTokenResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.RevokeTokenResponse.Success">
            <summary>
            If the request is successful, this is true.
            </summary>
        </member>
        <member name="M:Square.Models.RevokeTokenResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RevokeTokenResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RevokeTokenResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RevokeTokenResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RevokeTokenResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RevokeTokenResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RevokeTokenResponse.Builder.Success(System.Nullable{System.Boolean})">
            <summary>
            Success.
            </summary>
            <param name="success"> success. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RevokeTokenResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RevokeTokenResponse. </returns>
        </member>
        <member name="T:Square.Models.RiskEvaluation">
            <summary>
            RiskEvaluation.
            </summary>
        </member>
        <member name="M:Square.Models.RiskEvaluation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.RiskEvaluation"/> class.
            </summary>
            <param name="createdAt">created_at.</param>
            <param name="riskLevel">risk_level.</param>
        </member>
        <member name="P:Square.Models.RiskEvaluation.CreatedAt">
            <summary>
            The timestamp when payment risk was evaluated, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.RiskEvaluation.RiskLevel">
            <summary>
            Gets or sets RiskLevel.
            </summary>
        </member>
        <member name="M:Square.Models.RiskEvaluation.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RiskEvaluation.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RiskEvaluation.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.RiskEvaluation.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.RiskEvaluation.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.RiskEvaluation.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.RiskEvaluation.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RiskEvaluation.Builder.RiskLevel(System.String)">
            <summary>
            RiskLevel.
            </summary>
            <param name="riskLevel"> riskLevel. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.RiskEvaluation.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> RiskEvaluation. </returns>
        </member>
        <member name="T:Square.Models.SearchAvailabilityFilter">
            <summary>
            SearchAvailabilityFilter.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.#ctor(Square.Models.TimeRange,System.String,System.Collections.Generic.IList{Square.Models.SegmentFilter},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchAvailabilityFilter"/> class.
            </summary>
            <param name="startAtRange">start_at_range.</param>
            <param name="locationId">location_id.</param>
            <param name="segmentFilters">segment_filters.</param>
            <param name="bookingId">booking_id.</param>
        </member>
        <member name="P:Square.Models.SearchAvailabilityFilter.StartAtRange">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="P:Square.Models.SearchAvailabilityFilter.LocationId">
            <summary>
            The query expression to search for availabilities matching the specified seller location IDs.
            This query expression is not applicable when `booking_id` is present.
            </summary>
        </member>
        <member name="P:Square.Models.SearchAvailabilityFilter.SegmentFilters">
            <summary>
            The list of segment filters to apply. A query with `n` segment filters returns availabilities with `n` segments per
            availability. It is not applicable when `booking_id` is present.
            </summary>
        </member>
        <member name="P:Square.Models.SearchAvailabilityFilter.BookingId">
            <summary>
            The query expression to search for availabilities for an existing booking by matching the specified `booking_id` value.
            This is commonly used to reschedule an appointment.
            If this expression is specified, the `location_id` and `segment_filters` expressions are not allowed.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchAvailabilityFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.Builder.StartAtRange(Square.Models.TimeRange)">
            <summary>
            StartAtRange.
            </summary>
            <param name="startAtRange"> startAtRange. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.Builder.SegmentFilters(System.Collections.Generic.IList{Square.Models.SegmentFilter})">
            <summary>
            SegmentFilters.
            </summary>
            <param name="segmentFilters"> segmentFilters. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.Builder.BookingId(System.String)">
            <summary>
            BookingId.
            </summary>
            <param name="bookingId"> bookingId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchAvailabilityFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchAvailabilityFilter. </returns>
        </member>
        <member name="T:Square.Models.SearchAvailabilityQuery">
            <summary>
            SearchAvailabilityQuery.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityQuery.#ctor(Square.Models.SearchAvailabilityFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchAvailabilityQuery"/> class.
            </summary>
            <param name="filter">filter.</param>
        </member>
        <member name="P:Square.Models.SearchAvailabilityQuery.Filter">
            <summary>
            A query filter to search for availabilities by.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchAvailabilityQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchAvailabilityQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityQuery.Builder.Filter(Square.Models.SearchAvailabilityFilter)">
            <summary>
            Filter.
            </summary>
            <param name="filter"> filter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchAvailabilityQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchAvailabilityQuery. </returns>
        </member>
        <member name="T:Square.Models.SearchAvailabilityRequest">
            <summary>
            SearchAvailabilityRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityRequest.#ctor(Square.Models.SearchAvailabilityQuery)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchAvailabilityRequest"/> class.
            </summary>
            <param name="query">query.</param>
        </member>
        <member name="P:Square.Models.SearchAvailabilityRequest.Query">
            <summary>
            Query conditions to search for availabilities of bookings.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchAvailabilityRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchAvailabilityRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityRequest.Builder.Query(Square.Models.SearchAvailabilityQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchAvailabilityRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchAvailabilityRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchAvailabilityResponse">
            <summary>
            SearchAvailabilityResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityResponse.#ctor(System.Collections.Generic.IList{Square.Models.Availability},System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchAvailabilityResponse"/> class.
            </summary>
            <param name="availabilities">availabilities.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.SearchAvailabilityResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchAvailabilityResponse.Availabilities">
            <summary>
            List of slots available for booking.
            </summary>
        </member>
        <member name="P:Square.Models.SearchAvailabilityResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchAvailabilityResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchAvailabilityResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchAvailabilityResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchAvailabilityResponse.Builder.Availabilities(System.Collections.Generic.IList{Square.Models.Availability})">
            <summary>
            Availabilities.
            </summary>
            <param name="availabilities"> availabilities. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchAvailabilityResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchAvailabilityResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchAvailabilityResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchCatalogItemsRequest">
            <summary>
            SearchCatalogItemsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Int32},System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Square.Models.CustomAttributeFilter})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchCatalogItemsRequest"/> class.
            </summary>
            <param name="textFilter">text_filter.</param>
            <param name="categoryIds">category_ids.</param>
            <param name="stockLevels">stock_levels.</param>
            <param name="enabledLocationIds">enabled_location_ids.</param>
            <param name="cursor">cursor.</param>
            <param name="limit">limit.</param>
            <param name="sortOrder">sort_order.</param>
            <param name="productTypes">product_types.</param>
            <param name="customAttributeFilters">custom_attribute_filters.</param>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsRequest.TextFilter">
            <summary>
            The text filter expression to return items or item variations containing specified text in
            the `name`, `description`, or `abbreviation` attribute value of an item, or in
            the `name`, `sku`, or `upc` attribute value of an item variation.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsRequest.CategoryIds">
            <summary>
            The category id query expression to return items containing the specified category IDs.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsRequest.StockLevels">
            <summary>
            The stock-level query expression to return item variations with the specified stock levels.
            See [SearchCatalogItemsRequestStockLevel](#type-searchcatalogitemsrequeststocklevel) for possible values
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsRequest.EnabledLocationIds">
            <summary>
            The enabled-location query expression to return items and item variations having specified enabled locations.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsRequest.Cursor">
            <summary>
            The pagination token, returned in the previous response, used to fetch the next batch of pending results.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsRequest.Limit">
            <summary>
            The maximum number of results to return per page. The default value is 100.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsRequest.SortOrder">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsRequest.ProductTypes">
            <summary>
            The product types query expression to return items or item variations having the specified product types.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsRequest.CustomAttributeFilters">
            <summary>
            The customer-attribute filter to return items or item variations matching the specified
            custom attribute expressions. A maximum number of 10 custom attribute expressions are supported in
            a single call to the [SearchCatalogItems]($e/Catalog/SearchCatalogItems) endpoint.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchCatalogItemsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Builder.TextFilter(System.String)">
            <summary>
            TextFilter.
            </summary>
            <param name="textFilter"> textFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Builder.CategoryIds(System.Collections.Generic.IList{System.String})">
            <summary>
            CategoryIds.
            </summary>
            <param name="categoryIds"> categoryIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Builder.StockLevels(System.Collections.Generic.IList{System.String})">
            <summary>
            StockLevels.
            </summary>
            <param name="stockLevels"> stockLevels. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Builder.EnabledLocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            EnabledLocationIds.
            </summary>
            <param name="enabledLocationIds"> enabledLocationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Builder.ProductTypes(System.Collections.Generic.IList{System.String})">
            <summary>
            ProductTypes.
            </summary>
            <param name="productTypes"> productTypes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Builder.CustomAttributeFilters(System.Collections.Generic.IList{Square.Models.CustomAttributeFilter})">
            <summary>
            CustomAttributeFilters.
            </summary>
            <param name="customAttributeFilters"> customAttributeFilters. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchCatalogItemsRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchCatalogItemsResponse">
            <summary>
            SearchCatalogItemsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.CatalogObject},System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchCatalogItemsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="items">items.</param>
            <param name="cursor">cursor.</param>
            <param name="matchedVariationIds">matched_variation_ids.</param>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsResponse.Items">
            <summary>
            Returned items matching the specified query expressions.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsResponse.Cursor">
            <summary>
            Pagination token used in the next request to return more of the search result.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogItemsResponse.MatchedVariationIds">
            <summary>
            Ids of returned item variations matching the specified query expression.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchCatalogItemsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.Builder.Items(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Items.
            </summary>
            <param name="items"> items. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.Builder.MatchedVariationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            MatchedVariationIds.
            </summary>
            <param name="matchedVariationIds"> matchedVariationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogItemsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchCatalogItemsResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchCatalogObjectsRequest">
            <summary>
            SearchCatalogObjectsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Square.Models.CatalogQuery,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchCatalogObjectsRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
            <param name="objectTypes">object_types.</param>
            <param name="includeDeletedObjects">include_deleted_objects.</param>
            <param name="includeRelatedObjects">include_related_objects.</param>
            <param name="beginTime">begin_time.</param>
            <param name="query">query.</param>
            <param name="limit">limit.</param>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsRequest.Cursor">
            <summary>
            The pagination cursor returned in the previous response. Leave unset for an initial request.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsRequest.ObjectTypes">
            <summary>
            The desired set of object types to appear in the search results.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsRequest.IncludeDeletedObjects">
            <summary>
            If `true`, deleted objects will be included in the results. Deleted objects will have their
            `is_deleted` field set to `true`.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsRequest.IncludeRelatedObjects">
            <summary>
            If `true`, the response will include additional objects that are related to the
            requested object, as follows:
            If a CatalogItem is returned in the object field of the response,
            its associated CatalogCategory, CatalogTax objects,
            CatalogImage objects and CatalogModifierList objects
            will be included in the `related_objects` field of the response.
            If a CatalogItemVariation is returned in the object field of the
            response, its parent CatalogItem will be included in the `related_objects` field of
            the response.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsRequest.BeginTime">
            <summary>
            Return objects modified after this [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates), in RFC 3339
            format, e.g., `2016-09-04T23:59:33.123Z`. The timestamp is exclusive - objects with a
            timestamp equal to `begin_time` will not be included in the response.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsRequest.Query">
            <summary>
            A query composed of one or more different types of filters to narrow the scope of targeted objects when calling the `SearchCatalogObjects` endpoint.
            Although a query can have multiple filters, only certain query types can be combined per call to [SearchCatalogObjects]($e/Catalog/SearchCatalogObjects).
            Any combination of the following types may be used together:
            - [exact_query]($m/CatalogQueryExact)
            - [prefix_query]($m/CatalogQueryPrefix)
            - [range_query]($m/CatalogQueryRange)
            - [sorted_attribute_query]($m/CatalogQuerySortedAttribute)
            - [text_query]($m/CatalogQueryText)
            All other query types cannot be combined with any others.
            When a query filter is based on an attribute, the attribute must be searchable.
            Searchable attributes are listed as follows, along their parent types that can be searched for with applicable query filters.
            * Searchable attribute and objects queryable by searchable attributes **
            - `name`:  `CatalogItem`, `CatalogItemVariation`, `CatalogCategory`, `CatalogTax`, `CatalogDiscount`, `CatalogModifier`, 'CatalogModifierList`, `CatalogItemOption`, `CatalogItemOptionValue`
            - `description`: `CatalogItem`, `CatalogItemOptionValue`
            - `abbreviation`: `CatalogItem`
            - `upc`: `CatalogItemVariation`
            - `sku`: `CatalogItemVariation`
            - `caption`: `CatalogImage`
            - `display_name`: `CatalogItemOption`
            For example, to search for [CatalogItem]($m/CatalogItem) objects by searchable attributes, you can use
            the `"name"`, `"description"`, or `"abbreviation"` attribute in an applicable query filter.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsRequest.Limit">
            <summary>
            A limit on the number of results to be returned in a single page. The limit is advisory -
            the implementation may return more or fewer results. If the supplied limit is negative, zero, or
            is higher than the maximum limit of 1,000, it will be ignored.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchCatalogObjectsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.Builder.ObjectTypes(System.Collections.Generic.IList{System.String})">
            <summary>
            ObjectTypes.
            </summary>
            <param name="objectTypes"> objectTypes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.Builder.IncludeDeletedObjects(System.Nullable{System.Boolean})">
            <summary>
            IncludeDeletedObjects.
            </summary>
            <param name="includeDeletedObjects"> includeDeletedObjects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.Builder.IncludeRelatedObjects(System.Nullable{System.Boolean})">
            <summary>
            IncludeRelatedObjects.
            </summary>
            <param name="includeRelatedObjects"> includeRelatedObjects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.Builder.BeginTime(System.String)">
            <summary>
            BeginTime.
            </summary>
            <param name="beginTime"> beginTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.Builder.Query(Square.Models.CatalogQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchCatalogObjectsRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchCatalogObjectsResponse">
            <summary>
            SearchCatalogObjectsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.String,System.Collections.Generic.IList{Square.Models.CatalogObject},System.Collections.Generic.IList{Square.Models.CatalogObject},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchCatalogObjectsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="cursor">cursor.</param>
            <param name="objects">objects.</param>
            <param name="relatedObjects">related_objects.</param>
            <param name="latestTime">latest_time.</param>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If unset, this is the final response.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsResponse.Objects">
            <summary>
            The CatalogObjects returned.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsResponse.RelatedObjects">
            <summary>
            A list of CatalogObjects referenced by the objects in the `objects` field.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCatalogObjectsResponse.LatestTime">
            <summary>
            When the associated product catalog was last updated. Will
            match the value for `end_time` or `cursor` if either field is included in the `SearchCatalog` request.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchCatalogObjectsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.Builder.Objects(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            Objects.
            </summary>
            <param name="objects"> objects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.Builder.RelatedObjects(System.Collections.Generic.IList{Square.Models.CatalogObject})">
            <summary>
            RelatedObjects.
            </summary>
            <param name="relatedObjects"> relatedObjects. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.Builder.LatestTime(System.String)">
            <summary>
            LatestTime.
            </summary>
            <param name="latestTime"> latestTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCatalogObjectsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchCatalogObjectsResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchCustomersRequest">
            <summary>
            SearchCustomersRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCustomersRequest.#ctor(System.String,System.Nullable{System.Int64},Square.Models.CustomerQuery)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchCustomersRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
            <param name="limit">limit.</param>
            <param name="query">query.</param>
        </member>
        <member name="P:Square.Models.SearchCustomersRequest.Cursor">
            <summary>
            Include the pagination cursor in subsequent calls to this endpoint to retrieve
            the next set of results associated with the original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.SearchCustomersRequest.Limit">
            <summary>
            A limit on the number of results to be returned in a single page.
            The limit is advisory. The implementation might return more or fewer results.
            If the supplied limit is negative, zero, or higher than the maximum limit
            of 100, it is ignored.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCustomersRequest.Query">
            <summary>
            Represents a query (including filtering criteria, sorting criteria, or both) used to search
            for customer profiles.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCustomersRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCustomersRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCustomersRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCustomersRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchCustomersRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchCustomersRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCustomersRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCustomersRequest.Builder.Limit(System.Nullable{System.Int64})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCustomersRequest.Builder.Query(Square.Models.CustomerQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCustomersRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchCustomersRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchCustomersResponse">
            <summary>
            SearchCustomersResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCustomersResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.Customer},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchCustomersResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="customers">customers.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchCustomersResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCustomersResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCustomersResponse.Customers">
            <summary>
            An array of `Customer` objects that match a query.
            </summary>
        </member>
        <member name="P:Square.Models.SearchCustomersResponse.Cursor">
            <summary>
            A pagination cursor that can be used during subsequent calls
            to `SearchCustomers` to retrieve the next set of results associated
            with the original query. Pagination cursors are only present when
            a request succeeds and additional results are available.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.SearchCustomersResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCustomersResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCustomersResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchCustomersResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchCustomersResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchCustomersResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchCustomersResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCustomersResponse.Builder.Customers(System.Collections.Generic.IList{Square.Models.Customer})">
            <summary>
            Customers.
            </summary>
            <param name="customers"> customers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCustomersResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchCustomersResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchCustomersResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchInvoicesRequest">
            <summary>
            SearchInvoicesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchInvoicesRequest.#ctor(Square.Models.InvoiceQuery,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchInvoicesRequest"/> class.
            </summary>
            <param name="query">query.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchInvoicesRequest.Query">
            <summary>
            Describes query criteria for searching invoices.
            </summary>
        </member>
        <member name="P:Square.Models.SearchInvoicesRequest.Limit">
            <summary>
            The maximum number of invoices to return (200 is the maximum `limit`).
            If not provided, the server uses a default limit of 100 invoices.
            </summary>
        </member>
        <member name="P:Square.Models.SearchInvoicesRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this cursor to retrieve the next set of results for your original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.SearchInvoicesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchInvoicesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchInvoicesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchInvoicesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchInvoicesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchInvoicesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchInvoicesRequest.Builder.Query(Square.Models.InvoiceQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchInvoicesRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchInvoicesRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchInvoicesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchInvoicesRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchInvoicesResponse">
            <summary>
            SearchInvoicesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchInvoicesResponse.#ctor(System.Collections.Generic.IList{Square.Models.Invoice},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchInvoicesResponse"/> class.
            </summary>
            <param name="invoices">invoices.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.SearchInvoicesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchInvoicesResponse.Invoices">
            <summary>
            The list of invoices returned by the search.
            </summary>
        </member>
        <member name="P:Square.Models.SearchInvoicesResponse.Cursor">
            <summary>
            When a response is truncated, it includes a cursor that you can use in a
            subsequent request to fetch the next set of invoices. If empty, this is the final
            response.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.SearchInvoicesResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.SearchInvoicesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchInvoicesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchInvoicesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchInvoicesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchInvoicesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchInvoicesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchInvoicesResponse.Builder.Invoices(System.Collections.Generic.IList{Square.Models.Invoice})">
            <summary>
            Invoices.
            </summary>
            <param name="invoices"> invoices. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchInvoicesResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchInvoicesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchInvoicesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchInvoicesResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyAccountsRequest">
            <summary>
            SearchLoyaltyAccountsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequest.#ctor(Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchLoyaltyAccountsRequest"/> class.
            </summary>
            <param name="query">query.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchLoyaltyAccountsRequest.Query">
            <summary>
            The search criteria for the loyalty accounts.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyAccountsRequest.Limit">
            <summary>
            The maximum number of results to include in the response.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyAccountsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to
            this endpoint. Provide this to retrieve the next set of
            results for the original query.
            For more information,
            see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyAccountsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequest.Builder.Query(Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchLoyaltyAccountsRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery">
            <summary>
            SearchLoyaltyAccountsRequestLoyaltyAccountQuery.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.#ctor(System.Collections.Generic.IList{Square.Models.LoyaltyAccountMapping},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery"/> class.
            </summary>
            <param name="mappings">mappings.</param>
            <param name="customerIds">customer_ids.</param>
        </member>
        <member name="P:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.Mappings">
            <summary>
            The set of mappings to use in the loyalty account search.
            This cannot be combined with `customer_ids`.
            Max: 30 mappings
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.CustomerIds">
            <summary>
            The set of customer IDs to use in the loyalty account search.
            This cannot be combined with `mappings`.
            Max: 30 customer IDs
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.Builder.Mappings(System.Collections.Generic.IList{Square.Models.LoyaltyAccountMapping})">
            <summary>
            Mappings.
            </summary>
            <param name="mappings"> mappings. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.Builder.CustomerIds(System.Collections.Generic.IList{System.String})">
            <summary>
            CustomerIds.
            </summary>
            <param name="customerIds"> customerIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsRequestLoyaltyAccountQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchLoyaltyAccountsRequestLoyaltyAccountQuery. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyAccountsResponse">
            <summary>
            SearchLoyaltyAccountsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.LoyaltyAccount},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchLoyaltyAccountsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="loyaltyAccounts">loyalty_accounts.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchLoyaltyAccountsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyAccountsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyAccountsResponse.LoyaltyAccounts">
            <summary>
            The loyalty accounts that met the search criteria,
            in order of creation date.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyAccountsResponse.Cursor">
            <summary>
            The pagination cursor to use in a subsequent
            request. If empty, this is the final response.
            For more information,
            see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyAccountsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsResponse.Builder.LoyaltyAccounts(System.Collections.Generic.IList{Square.Models.LoyaltyAccount})">
            <summary>
            LoyaltyAccounts.
            </summary>
            <param name="loyaltyAccounts"> loyaltyAccounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyAccountsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchLoyaltyAccountsResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyEventsRequest">
            <summary>
            SearchLoyaltyEventsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsRequest.#ctor(Square.Models.LoyaltyEventQuery,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchLoyaltyEventsRequest"/> class.
            </summary>
            <param name="query">query.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchLoyaltyEventsRequest.Query">
            <summary>
            Represents a query used to search for loyalty events.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyEventsRequest.Limit">
            <summary>
            The maximum number of results to include in the response.
            The last page might contain fewer events.
            The default is 30 events.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyEventsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for your original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyEventsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsRequest.Builder.Query(Square.Models.LoyaltyEventQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchLoyaltyEventsRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyEventsResponse">
            <summary>
            SearchLoyaltyEventsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.LoyaltyEvent},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchLoyaltyEventsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="events">events.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchLoyaltyEventsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyEventsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyEventsResponse.Events">
            <summary>
            The loyalty events that satisfy the search criteria.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyEventsResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent
            request. If empty, this is the final response.
            For more information,
            see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyEventsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsResponse.Builder.Events(System.Collections.Generic.IList{Square.Models.LoyaltyEvent})">
            <summary>
            Events.
            </summary>
            <param name="events"> events. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyEventsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchLoyaltyEventsResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyRewardsRequest">
            <summary>
            SearchLoyaltyRewardsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequest.#ctor(Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchLoyaltyRewardsRequest"/> class.
            </summary>
            <param name="query">query.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchLoyaltyRewardsRequest.Query">
            <summary>
            The set of search requirements.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyRewardsRequest.Limit">
            <summary>
            The maximum number of results to return in the response.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyRewardsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to
            this endpoint. Provide this to retrieve the next set of
            results for the original query.
            For more information,
            see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyRewardsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequest.Builder.Query(Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchLoyaltyRewardsRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery">
            <summary>
            SearchLoyaltyRewardsRequestLoyaltyRewardQuery.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery"/> class.
            </summary>
            <param name="loyaltyAccountId">loyalty_account_id.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.LoyaltyAccountId">
            <summary>
            The ID of the [loyalty account]($m/LoyaltyAccount) to which the loyalty reward belongs.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.Status">
            <summary>
            The status of the loyalty reward.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.Builder.LoyaltyAccountId(System.String)">
            <summary>
            LoyaltyAccountId.
            </summary>
            <param name="loyaltyAccountId"> loyaltyAccountId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsRequestLoyaltyRewardQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchLoyaltyRewardsRequestLoyaltyRewardQuery. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyRewardsResponse">
            <summary>
            SearchLoyaltyRewardsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.LoyaltyReward},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchLoyaltyRewardsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="rewards">rewards.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchLoyaltyRewardsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyRewardsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyRewardsResponse.Rewards">
            <summary>
            The loyalty rewards that satisfy the search criteria.
            These are returned in descending order by `updated_at`.
            </summary>
        </member>
        <member name="P:Square.Models.SearchLoyaltyRewardsResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent
            request. If empty, this is the final response.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchLoyaltyRewardsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsResponse.Builder.Rewards(System.Collections.Generic.IList{Square.Models.LoyaltyReward})">
            <summary>
            Rewards.
            </summary>
            <param name="rewards"> rewards. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchLoyaltyRewardsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchLoyaltyRewardsResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersCustomerFilter">
            <summary>
            SearchOrdersCustomerFilter.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersCustomerFilter.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchOrdersCustomerFilter"/> class.
            </summary>
            <param name="customerIds">customer_ids.</param>
        </member>
        <member name="P:Square.Models.SearchOrdersCustomerFilter.CustomerIds">
            <summary>
            A list of customer IDs to filter by.
            Max: 10 customer IDs.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersCustomerFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersCustomerFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersCustomerFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersCustomerFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchOrdersCustomerFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersCustomerFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersCustomerFilter.Builder.CustomerIds(System.Collections.Generic.IList{System.String})">
            <summary>
            CustomerIds.
            </summary>
            <param name="customerIds"> customerIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersCustomerFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchOrdersCustomerFilter. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersDateTimeFilter">
            <summary>
            SearchOrdersDateTimeFilter.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersDateTimeFilter.#ctor(Square.Models.TimeRange,Square.Models.TimeRange,Square.Models.TimeRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchOrdersDateTimeFilter"/> class.
            </summary>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="closedAt">closed_at.</param>
        </member>
        <member name="P:Square.Models.SearchOrdersDateTimeFilter.CreatedAt">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersDateTimeFilter.UpdatedAt">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersDateTimeFilter.ClosedAt">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersDateTimeFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersDateTimeFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersDateTimeFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersDateTimeFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchOrdersDateTimeFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersDateTimeFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersDateTimeFilter.Builder.CreatedAt(Square.Models.TimeRange)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersDateTimeFilter.Builder.UpdatedAt(Square.Models.TimeRange)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersDateTimeFilter.Builder.ClosedAt(Square.Models.TimeRange)">
            <summary>
            ClosedAt.
            </summary>
            <param name="closedAt"> closedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersDateTimeFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchOrdersDateTimeFilter. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersFilter">
            <summary>
            SearchOrdersFilter.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.#ctor(Square.Models.SearchOrdersStateFilter,Square.Models.SearchOrdersDateTimeFilter,Square.Models.SearchOrdersFulfillmentFilter,Square.Models.SearchOrdersSourceFilter,Square.Models.SearchOrdersCustomerFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchOrdersFilter"/> class.
            </summary>
            <param name="stateFilter">state_filter.</param>
            <param name="dateTimeFilter">date_time_filter.</param>
            <param name="fulfillmentFilter">fulfillment_filter.</param>
            <param name="sourceFilter">source_filter.</param>
            <param name="customerFilter">customer_filter.</param>
        </member>
        <member name="P:Square.Models.SearchOrdersFilter.StateFilter">
            <summary>
            Filter by the current order `state`.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersFilter.DateTimeFilter">
            <summary>
            Filter for `Order` objects based on whether their `CREATED_AT`,
            `CLOSED_AT`, or `UPDATED_AT` timestamps fall within a specified time range.
            You can specify the time range and which timestamp to filter for. You can filter
            for only one time range at a time.
            For each time range, the start time and end time are inclusive. If the end time
            is absent, it defaults to the time of the first request for the cursor.
            __Important:__ If you use the `DateTimeFilter` in a `SearchOrders` query,
            you must set the `sort_field` in [OrdersSort]($m/SearchOrdersSort)
            to the same field you filter for. For example, if you set the `CLOSED_AT` field
            in `DateTimeFilter`, you must set the `sort_field` in `SearchOrdersSort` to
            `CLOSED_AT`. Otherwise, `SearchOrders` throws an error.
            [Learn more about filtering orders by time range.](https://developer.squareup.com/docs/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range)
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersFilter.FulfillmentFilter">
            <summary>
            Filter based on [order fulfillment]($m/OrderFulfillment) information.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersFilter.SourceFilter">
            <summary>
            A filter based on order `source` information.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersFilter.CustomerFilter">
            <summary>
            A filter based on the order `customer_id` and any tender `customer_id`
            associated with the order. It does not filter based on the
            [FulfillmentRecipient]($m/OrderFulfillmentRecipient) `customer_id`.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.Builder.StateFilter(Square.Models.SearchOrdersStateFilter)">
            <summary>
            StateFilter.
            </summary>
            <param name="stateFilter"> stateFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.Builder.DateTimeFilter(Square.Models.SearchOrdersDateTimeFilter)">
            <summary>
            DateTimeFilter.
            </summary>
            <param name="dateTimeFilter"> dateTimeFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.Builder.FulfillmentFilter(Square.Models.SearchOrdersFulfillmentFilter)">
            <summary>
            FulfillmentFilter.
            </summary>
            <param name="fulfillmentFilter"> fulfillmentFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.Builder.SourceFilter(Square.Models.SearchOrdersSourceFilter)">
            <summary>
            SourceFilter.
            </summary>
            <param name="sourceFilter"> sourceFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.Builder.CustomerFilter(Square.Models.SearchOrdersCustomerFilter)">
            <summary>
            CustomerFilter.
            </summary>
            <param name="customerFilter"> customerFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchOrdersFilter. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersFulfillmentFilter">
            <summary>
            SearchOrdersFulfillmentFilter.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersFulfillmentFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchOrdersFulfillmentFilter"/> class.
            </summary>
            <param name="fulfillmentTypes">fulfillment_types.</param>
            <param name="fulfillmentStates">fulfillment_states.</param>
        </member>
        <member name="P:Square.Models.SearchOrdersFulfillmentFilter.FulfillmentTypes">
            <summary>
            A list of [fulfillment types]($m/OrderFulfillmentType) to filter
            for. The list returns orders if any of its fulfillments match any of the fulfillment types
            listed in this field.
            See [OrderFulfillmentType](#type-orderfulfillmenttype) for possible values
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersFulfillmentFilter.FulfillmentStates">
            <summary>
            A list of [fulfillment states]($m/OrderFulfillmentState) to filter
            for. The list returns orders if any of its fulfillments match any of the
            fulfillment states listed in this field.
            See [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersFulfillmentFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersFulfillmentFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersFulfillmentFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersFulfillmentFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchOrdersFulfillmentFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersFulfillmentFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersFulfillmentFilter.Builder.FulfillmentTypes(System.Collections.Generic.IList{System.String})">
            <summary>
            FulfillmentTypes.
            </summary>
            <param name="fulfillmentTypes"> fulfillmentTypes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersFulfillmentFilter.Builder.FulfillmentStates(System.Collections.Generic.IList{System.String})">
            <summary>
            FulfillmentStates.
            </summary>
            <param name="fulfillmentStates"> fulfillmentStates. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersFulfillmentFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchOrdersFulfillmentFilter. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersQuery">
            <summary>
            SearchOrdersQuery.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersQuery.#ctor(Square.Models.SearchOrdersFilter,Square.Models.SearchOrdersSort)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchOrdersQuery"/> class.
            </summary>
            <param name="filter">filter.</param>
            <param name="sort">sort.</param>
        </member>
        <member name="P:Square.Models.SearchOrdersQuery.Filter">
            <summary>
            Filtering criteria to use for a `SearchOrders` request. Multiple filters
            are ANDed together.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersQuery.Sort">
            <summary>
            Sorting criteria for a `SearchOrders` request. Results can only be sorted
            by a timestamp field.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchOrdersQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersQuery.Builder.Filter(Square.Models.SearchOrdersFilter)">
            <summary>
            Filter.
            </summary>
            <param name="filter"> filter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersQuery.Builder.Sort(Square.Models.SearchOrdersSort)">
            <summary>
            Sort.
            </summary>
            <param name="sort"> sort. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchOrdersQuery. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersRequest">
            <summary>
            SearchOrdersRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.#ctor(System.Collections.Generic.IList{System.String},System.String,Square.Models.SearchOrdersQuery,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchOrdersRequest"/> class.
            </summary>
            <param name="locationIds">location_ids.</param>
            <param name="cursor">cursor.</param>
            <param name="query">query.</param>
            <param name="limit">limit.</param>
            <param name="returnEntries">return_entries.</param>
        </member>
        <member name="P:Square.Models.SearchOrdersRequest.LocationIds">
            <summary>
            The location IDs for the orders to query. All locations must belong to
            the same merchant.
            Min: 1 location ID.
            Max: 10 location IDs.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this cursor to retrieve the next set of results for your original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersRequest.Query">
            <summary>
            Contains query criteria for the search.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersRequest.Limit">
            <summary>
            The maximum number of results to be returned in a single page. It is
            possible to receive fewer results than the specified limit on a given page.
            Default: `500`
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersRequest.ReturnEntries">
            <summary>
            A Boolean that controls the format of the search results. If `true`,
            `SearchOrders` returns [OrderEntry]($m/OrderEntry) objects. If `false`, `SearchOrders`
            returns complete order objects.
            Default: `false`.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.Builder.Query(Square.Models.SearchOrdersQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.Builder.ReturnEntries(System.Nullable{System.Boolean})">
            <summary>
            ReturnEntries.
            </summary>
            <param name="returnEntries"> returnEntries. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchOrdersRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersResponse">
            <summary>
            SearchOrdersResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.#ctor(System.Collections.Generic.IList{Square.Models.OrderEntry},System.Collections.Generic.IList{Square.Models.Order},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchOrdersResponse"/> class.
            </summary>
            <param name="orderEntries">order_entries.</param>
            <param name="orders">orders.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.SearchOrdersResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersResponse.OrderEntries">
            <summary>
            A list of [OrderEntries]($m/OrderEntry) that fit the query
            conditions. The list is populated only if `return_entries` is set to `true` in the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersResponse.Orders">
            <summary>
            A list of
            [Order]($m/Order) objects that match the query conditions. The list is populated only if
            `return_entries` is set to `false` in the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.
            For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersResponse.Errors">
            <summary>
            [Errors]($m/Error) encountered during the search.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.Builder.OrderEntries(System.Collections.Generic.IList{Square.Models.OrderEntry})">
            <summary>
            OrderEntries.
            </summary>
            <param name="orderEntries"> orderEntries. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.Builder.Orders(System.Collections.Generic.IList{Square.Models.Order})">
            <summary>
            Orders.
            </summary>
            <param name="orders"> orders. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchOrdersResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersSort">
            <summary>
            SearchOrdersSort.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersSort.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchOrdersSort"/> class.
            </summary>
            <param name="sortField">sort_field.</param>
            <param name="sortOrder">sort_order.</param>
        </member>
        <member name="P:Square.Models.SearchOrdersSort.SortField">
            <summary>
            Specifies which timestamp to use to sort `SearchOrder` results.
            </summary>
        </member>
        <member name="P:Square.Models.SearchOrdersSort.SortOrder">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersSort.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersSort.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersSort.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersSort.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchOrdersSort.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersSort.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersSort.Builder.SortField(System.String)">
            <summary>
            SortField.
            </summary>
            <param name="sortField"> sortField. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersSort.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersSort.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchOrdersSort. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersSourceFilter">
            <summary>
            SearchOrdersSourceFilter.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersSourceFilter.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchOrdersSourceFilter"/> class.
            </summary>
            <param name="sourceNames">source_names.</param>
        </member>
        <member name="P:Square.Models.SearchOrdersSourceFilter.SourceNames">
            <summary>
            Filters by the [Source]($m/OrderSource) `name`. The filter returns any orders
            with a `source.name` that matches any of the listed source names.
            Max: 10 source names.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersSourceFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersSourceFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersSourceFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersSourceFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchOrdersSourceFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersSourceFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersSourceFilter.Builder.SourceNames(System.Collections.Generic.IList{System.String})">
            <summary>
            SourceNames.
            </summary>
            <param name="sourceNames"> sourceNames. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersSourceFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchOrdersSourceFilter. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersStateFilter">
            <summary>
            SearchOrdersStateFilter.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersStateFilter.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchOrdersStateFilter"/> class.
            </summary>
            <param name="states">states.</param>
        </member>
        <member name="P:Square.Models.SearchOrdersStateFilter.States">
            <summary>
            States to filter for.
            See [OrderState](#type-orderstate) for possible values
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersStateFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersStateFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersStateFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchOrdersStateFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchOrdersStateFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchOrdersStateFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchOrdersStateFilter.Builder.States(System.Collections.Generic.IList{System.String})">
            <summary>
            States.
            </summary>
            <param name="states"> states. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchOrdersStateFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchOrdersStateFilter. </returns>
        </member>
        <member name="T:Square.Models.SearchShiftsRequest">
            <summary>
            SearchShiftsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchShiftsRequest.#ctor(Square.Models.ShiftQuery,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchShiftsRequest"/> class.
            </summary>
            <param name="query">query.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchShiftsRequest.Query">
            <summary>
            The parameters of a `Shift` search query. Includes filter and sort options.
            </summary>
        </member>
        <member name="P:Square.Models.SearchShiftsRequest.Limit">
            <summary>
            number of resources in a page (200 by default).
            </summary>
        </member>
        <member name="P:Square.Models.SearchShiftsRequest.Cursor">
            <summary>
            opaque cursor for fetching the next page.
            </summary>
        </member>
        <member name="M:Square.Models.SearchShiftsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchShiftsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchShiftsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchShiftsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchShiftsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchShiftsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchShiftsRequest.Builder.Query(Square.Models.ShiftQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchShiftsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchShiftsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchShiftsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchShiftsRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchShiftsResponse">
            <summary>
            SearchShiftsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchShiftsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Shift},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchShiftsResponse"/> class.
            </summary>
            <param name="shifts">shifts.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.SearchShiftsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchShiftsResponse.Shifts">
            <summary>
            Shifts
            </summary>
        </member>
        <member name="P:Square.Models.SearchShiftsResponse.Cursor">
            <summary>
            Opaque cursor for fetching the next page.
            </summary>
        </member>
        <member name="P:Square.Models.SearchShiftsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.SearchShiftsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchShiftsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchShiftsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchShiftsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchShiftsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchShiftsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchShiftsResponse.Builder.Shifts(System.Collections.Generic.IList{Square.Models.Shift})">
            <summary>
            Shifts.
            </summary>
            <param name="shifts"> shifts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchShiftsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchShiftsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchShiftsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchShiftsResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchSubscriptionsFilter">
            <summary>
            SearchSubscriptionsFilter.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchSubscriptionsFilter"/> class.
            </summary>
            <param name="customerIds">customer_ids.</param>
            <param name="locationIds">location_ids.</param>
        </member>
        <member name="P:Square.Models.SearchSubscriptionsFilter.CustomerIds">
            <summary>
            A filter to select subscriptions based on the customer.
            </summary>
        </member>
        <member name="P:Square.Models.SearchSubscriptionsFilter.LocationIds">
            <summary>
            A filter to select subscriptions based the location.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchSubscriptionsFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsFilter.Builder.CustomerIds(System.Collections.Generic.IList{System.String})">
            <summary>
            CustomerIds.
            </summary>
            <param name="customerIds"> customerIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsFilter.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchSubscriptionsFilter. </returns>
        </member>
        <member name="T:Square.Models.SearchSubscriptionsQuery">
            <summary>
            SearchSubscriptionsQuery.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsQuery.#ctor(Square.Models.SearchSubscriptionsFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchSubscriptionsQuery"/> class.
            </summary>
            <param name="filter">filter.</param>
        </member>
        <member name="P:Square.Models.SearchSubscriptionsQuery.Filter">
            <summary>
            Represents a set of SearchSubscriptionsQuery filters used to limit the set of Subscriptions returned by SearchSubscriptions.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchSubscriptionsQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsQuery.Builder.Filter(Square.Models.SearchSubscriptionsFilter)">
            <summary>
            Filter.
            </summary>
            <param name="filter"> filter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchSubscriptionsQuery. </returns>
        </member>
        <member name="T:Square.Models.SearchSubscriptionsRequest">
            <summary>
            SearchSubscriptionsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsRequest.#ctor(System.String,System.Nullable{System.Int32},Square.Models.SearchSubscriptionsQuery)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchSubscriptionsRequest"/> class.
            </summary>
            <param name="cursor">cursor.</param>
            <param name="limit">limit.</param>
            <param name="query">query.</param>
        </member>
        <member name="P:Square.Models.SearchSubscriptionsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this to retrieve the next set of results for the original query.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="P:Square.Models.SearchSubscriptionsRequest.Limit">
            <summary>
            The upper limit on the number of subscriptions to return
            in the response.
            Default: `200`
            </summary>
        </member>
        <member name="P:Square.Models.SearchSubscriptionsRequest.Query">
            <summary>
            Represents a query (including filtering criteria) used to search for subscriptions.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchSubscriptionsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsRequest.Builder.Query(Square.Models.SearchSubscriptionsQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchSubscriptionsRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchSubscriptionsResponse">
            <summary>
            SearchSubscriptionsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.Subscription},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchSubscriptionsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="subscriptions">subscriptions.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchSubscriptionsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchSubscriptionsResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchSubscriptionsResponse.Subscriptions">
            <summary>
            The search result.
            </summary>
        </member>
        <member name="P:Square.Models.SearchSubscriptionsResponse.Cursor">
            <summary>
            When a response is truncated, it includes a cursor that you can
            use in a subsequent request to fetch the next set of subscriptions.
            If empty, this is the final response.
            For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchSubscriptionsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsResponse.Builder.Subscriptions(System.Collections.Generic.IList{Square.Models.Subscription})">
            <summary>
            Subscriptions.
            </summary>
            <param name="subscriptions"> subscriptions. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchSubscriptionsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchSubscriptionsResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchTeamMembersFilter">
            <summary>
            SearchTeamMembersFilter.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersFilter.#ctor(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchTeamMembersFilter"/> class.
            </summary>
            <param name="locationIds">location_ids.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:Square.Models.SearchTeamMembersFilter.LocationIds">
            <summary>
            When present, filter by team members assigned to the specified locations.
            When empty, include team members assigned to any location.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTeamMembersFilter.Status">
            <summary>
            Enumerates the possible statuses the team member can have within a business.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchTeamMembersFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchTeamMembersFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersFilter.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTeamMembersFilter.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTeamMembersFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchTeamMembersFilter. </returns>
        </member>
        <member name="T:Square.Models.SearchTeamMembersQuery">
            <summary>
            SearchTeamMembersQuery.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersQuery.#ctor(Square.Models.SearchTeamMembersFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchTeamMembersQuery"/> class.
            </summary>
            <param name="filter">filter.</param>
        </member>
        <member name="P:Square.Models.SearchTeamMembersQuery.Filter">
            <summary>
            Represents a filter used in a search for `TeamMember` objects. `AND` logic is applied
            between the individual fields, and `OR` logic is applied within list-based fields.
            For example, setting this filter value,
            ```
            filter = (locations_ids = ["A", "B"], status = ACTIVE)
            ```
            returns only active team members assigned to either location "A" or "B".
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchTeamMembersQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchTeamMembersQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersQuery.Builder.Filter(Square.Models.SearchTeamMembersFilter)">
            <summary>
            Filter.
            </summary>
            <param name="filter"> filter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTeamMembersQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchTeamMembersQuery. </returns>
        </member>
        <member name="T:Square.Models.SearchTeamMembersRequest">
            <summary>
            SearchTeamMembersRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersRequest.#ctor(Square.Models.SearchTeamMembersQuery,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchTeamMembersRequest"/> class.
            </summary>
            <param name="query">query.</param>
            <param name="limit">limit.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchTeamMembersRequest.Query">
            <summary>
            Represents the parameters in a search for `TeamMember` objects.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTeamMembersRequest.Limit">
            <summary>
            The maximum number of `TeamMember` objects in a page (25 by default).
            </summary>
        </member>
        <member name="P:Square.Models.SearchTeamMembersRequest.Cursor">
            <summary>
            The opaque cursor for fetching the next page. Read about
            [pagination](https://developer.squareup.com/docs/working-with-apis/pagination) with Square APIs for more information.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchTeamMembersRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchTeamMembersRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersRequest.Builder.Query(Square.Models.SearchTeamMembersQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTeamMembersRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTeamMembersRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTeamMembersRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchTeamMembersRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchTeamMembersResponse">
            <summary>
            SearchTeamMembersResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersResponse.#ctor(System.Collections.Generic.IList{Square.Models.TeamMember},System.String,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchTeamMembersResponse"/> class.
            </summary>
            <param name="teamMembers">team_members.</param>
            <param name="cursor">cursor.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.SearchTeamMembersResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTeamMembersResponse.TeamMembers">
            <summary>
            The filtered list of `TeamMember` objects.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTeamMembersResponse.Cursor">
            <summary>
            The opaque cursor for fetching the next page. Read about
            [pagination](https://developer.squareup.com/docs/working-with-apis/pagination) with Square APIs for more information.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTeamMembersResponse.Errors">
            <summary>
            The errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTeamMembersResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchTeamMembersResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchTeamMembersResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTeamMembersResponse.Builder.TeamMembers(System.Collections.Generic.IList{Square.Models.TeamMember})">
            <summary>
            TeamMembers.
            </summary>
            <param name="teamMembers"> teamMembers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTeamMembersResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTeamMembersResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTeamMembersResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchTeamMembersResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchTerminalCheckoutsRequest">
            <summary>
            SearchTerminalCheckoutsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsRequest.#ctor(Square.Models.TerminalCheckoutQuery,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchTerminalCheckoutsRequest"/> class.
            </summary>
            <param name="query">query.</param>
            <param name="cursor">cursor.</param>
            <param name="limit">limit.</param>
        </member>
        <member name="P:Square.Models.SearchTerminalCheckoutsRequest.Query">
            <summary>
            Gets or sets Query.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTerminalCheckoutsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this cursor to retrieve the next set of results for the original query.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTerminalCheckoutsRequest.Limit">
            <summary>
            Limits the number of results returned for a single request.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchTerminalCheckoutsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsRequest.Builder.Query(Square.Models.TerminalCheckoutQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchTerminalCheckoutsRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchTerminalCheckoutsResponse">
            <summary>
            SearchTerminalCheckoutsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.TerminalCheckout},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchTerminalCheckoutsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="checkouts">checkouts.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchTerminalCheckoutsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTerminalCheckoutsResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTerminalCheckoutsResponse.Checkouts">
            <summary>
            The requested search result of `TerminalCheckout` objects.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTerminalCheckoutsResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If empty,
            this is the final response.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchTerminalCheckoutsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsResponse.Builder.Checkouts(System.Collections.Generic.IList{Square.Models.TerminalCheckout})">
            <summary>
            Checkouts.
            </summary>
            <param name="checkouts"> checkouts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalCheckoutsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchTerminalCheckoutsResponse. </returns>
        </member>
        <member name="T:Square.Models.SearchTerminalRefundsRequest">
            <summary>
            SearchTerminalRefundsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsRequest.#ctor(Square.Models.TerminalRefundQuery,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchTerminalRefundsRequest"/> class.
            </summary>
            <param name="query">query.</param>
            <param name="cursor">cursor.</param>
            <param name="limit">limit.</param>
        </member>
        <member name="P:Square.Models.SearchTerminalRefundsRequest.Query">
            <summary>
            Gets or sets Query.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTerminalRefundsRequest.Cursor">
            <summary>
            A pagination cursor returned by a previous call to this endpoint.
            Provide this cursor to retrieve the next set of results for the original query.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTerminalRefundsRequest.Limit">
            <summary>
            Limits the number of results returned for a single request.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchTerminalRefundsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsRequest.Builder.Query(Square.Models.TerminalRefundQuery)">
            <summary>
            Query.
            </summary>
            <param name="query"> query. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsRequest.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchTerminalRefundsRequest. </returns>
        </member>
        <member name="T:Square.Models.SearchTerminalRefundsResponse">
            <summary>
            SearchTerminalRefundsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.Collections.Generic.IList{Square.Models.TerminalRefund},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SearchTerminalRefundsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="refunds">refunds.</param>
            <param name="cursor">cursor.</param>
        </member>
        <member name="P:Square.Models.SearchTerminalRefundsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTerminalRefundsResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTerminalRefundsResponse.Refunds">
            <summary>
            The requested search result of `TerminalRefund` objects.
            </summary>
        </member>
        <member name="P:Square.Models.SearchTerminalRefundsResponse.Cursor">
            <summary>
            The pagination cursor to be used in a subsequent request. If empty,
            this is the final response.
            See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SearchTerminalRefundsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsResponse.Builder.Refunds(System.Collections.Generic.IList{Square.Models.TerminalRefund})">
            <summary>
            Refunds.
            </summary>
            <param name="refunds"> refunds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsResponse.Builder.Cursor(System.String)">
            <summary>
            Cursor.
            </summary>
            <param name="cursor"> cursor. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SearchTerminalRefundsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SearchTerminalRefundsResponse. </returns>
        </member>
        <member name="T:Square.Models.SegmentFilter">
            <summary>
            SegmentFilter.
            </summary>
        </member>
        <member name="M:Square.Models.SegmentFilter.#ctor(System.String,Square.Models.FilterValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SegmentFilter"/> class.
            </summary>
            <param name="serviceVariationId">service_variation_id.</param>
            <param name="teamMemberIdFilter">team_member_id_filter.</param>
        </member>
        <member name="P:Square.Models.SegmentFilter.ServiceVariationId">
            <summary>
            The ID of the [CatalogItemVariation]($m/CatalogItemVariation) representing the service booked in this segment.
            </summary>
        </member>
        <member name="P:Square.Models.SegmentFilter.TeamMemberIdFilter">
            <summary>
            A filter to select resources based on an exact field value. For any given
            value, the value can only be in one property. Depending on the field, either
            all properties can be set or only a subset will be available.
            Refer to the documentation of the field.
            </summary>
        </member>
        <member name="M:Square.Models.SegmentFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SegmentFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SegmentFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SegmentFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SegmentFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SegmentFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SegmentFilter.Builder.ServiceVariationId(System.String)">
            <summary>
            ServiceVariationId.
            </summary>
            <param name="serviceVariationId"> serviceVariationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SegmentFilter.Builder.TeamMemberIdFilter(Square.Models.FilterValue)">
            <summary>
            TeamMemberIdFilter.
            </summary>
            <param name="teamMemberIdFilter"> teamMemberIdFilter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SegmentFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SegmentFilter. </returns>
        </member>
        <member name="T:Square.Models.Shift">
            <summary>
            Shift.
            </summary>
        </member>
        <member name="M:Square.Models.Shift.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.ShiftWage,System.Collections.Generic.IList{Square.Models.Break},System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Shift"/> class.
            </summary>
            <param name="startAt">start_at.</param>
            <param name="id">id.</param>
            <param name="employeeId">employee_id.</param>
            <param name="locationId">location_id.</param>
            <param name="timezone">timezone.</param>
            <param name="endAt">end_at.</param>
            <param name="wage">wage.</param>
            <param name="breaks">breaks.</param>
            <param name="status">status.</param>
            <param name="version">version.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="teamMemberId">team_member_id.</param>
        </member>
        <member name="P:Square.Models.Shift.Id">
            <summary>
            UUID for this object
            </summary>
        </member>
        <member name="P:Square.Models.Shift.EmployeeId">
            <summary>
            The ID of the employee this shift belongs to. DEPRECATED at version 2020-08-26. Use `team_member_id` instead
            </summary>
        </member>
        <member name="P:Square.Models.Shift.LocationId">
            <summary>
            The ID of the location this shift occurred at. Should be based on
            where the employee clocked in.
            </summary>
        </member>
        <member name="P:Square.Models.Shift.Timezone">
            <summary>
            Read-only convenience value that is calculated from the location based
            on `location_id`. Format: the IANA Timezone Database identifier for the
            location timezone.
            </summary>
        </member>
        <member name="P:Square.Models.Shift.StartAt">
            <summary>
            RFC 3339; shifted to location timezone + offset. Precision up to the
            minute is respected; seconds are truncated.
            </summary>
        </member>
        <member name="P:Square.Models.Shift.EndAt">
            <summary>
            RFC 3339; shifted to timezone + offset. Precision up to the minute is
            respected; seconds are truncated.
            </summary>
        </member>
        <member name="P:Square.Models.Shift.Wage">
            <summary>
            The hourly wage rate used to compensate an employee for this shift.
            </summary>
        </member>
        <member name="P:Square.Models.Shift.Breaks">
            <summary>
            A list of any paid or unpaid breaks that were taken during this shift.
            </summary>
        </member>
        <member name="P:Square.Models.Shift.Status">
            <summary>
            Enumerates the possible status of a `Shift`
            </summary>
        </member>
        <member name="P:Square.Models.Shift.Version">
            <summary>
            Used for resolving concurrency issues; request will fail if version
            provided does not match server version at time of request. If not provided,
            Square executes a blind write; potentially overwriting data from another
            write.
            </summary>
        </member>
        <member name="P:Square.Models.Shift.CreatedAt">
            <summary>
            A read-only timestamp in RFC 3339 format; presented in UTC.
            </summary>
        </member>
        <member name="P:Square.Models.Shift.UpdatedAt">
            <summary>
            A read-only timestamp in RFC 3339 format; presented in UTC.
            </summary>
        </member>
        <member name="P:Square.Models.Shift.TeamMemberId">
            <summary>
            The ID of the team member this shift belongs to. Replaced `employee_id` at version "2020-08-26"
            </summary>
        </member>
        <member name="M:Square.Models.Shift.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Shift.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Shift.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Shift.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Shift.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Shift.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Shift.Builder.StartAt(System.String)">
            <summary>
            StartAt.
            </summary>
            <param name="startAt"> startAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.EmployeeId(System.String)">
            <summary>
            EmployeeId.
            </summary>
            <param name="employeeId"> employeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.Timezone(System.String)">
            <summary>
            Timezone.
            </summary>
            <param name="timezone"> timezone. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.EndAt(System.String)">
            <summary>
            EndAt.
            </summary>
            <param name="endAt"> endAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.Wage(Square.Models.ShiftWage)">
            <summary>
            Wage.
            </summary>
            <param name="wage"> wage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.Breaks(System.Collections.Generic.IList{Square.Models.Break})">
            <summary>
            Breaks.
            </summary>
            <param name="breaks"> breaks. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.TeamMemberId(System.String)">
            <summary>
            TeamMemberId.
            </summary>
            <param name="teamMemberId"> teamMemberId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Shift.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Shift. </returns>
        </member>
        <member name="T:Square.Models.ShiftFilter">
            <summary>
            ShiftFilter.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,Square.Models.TimeRange,Square.Models.TimeRange,Square.Models.ShiftWorkday)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ShiftFilter"/> class.
            </summary>
            <param name="locationIds">location_ids.</param>
            <param name="teamMemberIds">team_member_ids.</param>
            <param name="employeeIds">employee_ids.</param>
            <param name="status">status.</param>
            <param name="start">start.</param>
            <param name="end">end.</param>
            <param name="workday">workday.</param>
        </member>
        <member name="P:Square.Models.ShiftFilter.LocationIds">
            <summary>
            Fetch shifts for the specified location.
            </summary>
        </member>
        <member name="P:Square.Models.ShiftFilter.EmployeeIds">
            <summary>
            Fetch shifts for the specified employees. DEPRECATED at version 2020-08-26. Use `team_member_ids` instead
            </summary>
        </member>
        <member name="P:Square.Models.ShiftFilter.Status">
            <summary>
            Specifies the `status` of `Shift` records to be returned.
            </summary>
        </member>
        <member name="P:Square.Models.ShiftFilter.Start">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="P:Square.Models.ShiftFilter.End">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="P:Square.Models.ShiftFilter.Workday">
            <summary>
            A `Shift` search query filter parameter that sets a range of days that
            a `Shift` must start or end in before passing the filter condition.
            </summary>
        </member>
        <member name="P:Square.Models.ShiftFilter.TeamMemberIds">
            <summary>
            Fetch shifts for the specified team members. Replaced `employee_ids` at version "2020-08-26"
            </summary>
        </member>
        <member name="M:Square.Models.ShiftFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ShiftFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ShiftFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftFilter.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftFilter.Builder.TeamMemberIds(System.Collections.Generic.IList{System.String})">
            <summary>
            TeamMemberIds.
            </summary>
            <param name="teamMemberIds"> teamMemberIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftFilter.Builder.EmployeeIds(System.Collections.Generic.IList{System.String})">
            <summary>
            EmployeeIds.
            </summary>
            <param name="employeeIds"> employeeIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftFilter.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftFilter.Builder.Start(Square.Models.TimeRange)">
            <summary>
            Start.
            </summary>
            <param name="start"> start. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftFilter.Builder.End(Square.Models.TimeRange)">
            <summary>
            End.
            </summary>
            <param name="end"> end. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftFilter.Builder.Workday(Square.Models.ShiftWorkday)">
            <summary>
            Workday.
            </summary>
            <param name="workday"> workday. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ShiftFilter. </returns>
        </member>
        <member name="T:Square.Models.ShiftQuery">
            <summary>
            ShiftQuery.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftQuery.#ctor(Square.Models.ShiftFilter,Square.Models.ShiftSort)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ShiftQuery"/> class.
            </summary>
            <param name="filter">filter.</param>
            <param name="sort">sort.</param>
        </member>
        <member name="P:Square.Models.ShiftQuery.Filter">
            <summary>
            Defines a filter used in a search for `Shift` records. `AND` logic is
            used by Square's servers to apply each filter property specified.
            </summary>
        </member>
        <member name="P:Square.Models.ShiftQuery.Sort">
            <summary>
            Sets the sort order of search results.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ShiftQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ShiftQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftQuery.Builder.Filter(Square.Models.ShiftFilter)">
            <summary>
            Filter.
            </summary>
            <param name="filter"> filter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftQuery.Builder.Sort(Square.Models.ShiftSort)">
            <summary>
            Sort.
            </summary>
            <param name="sort"> sort. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ShiftQuery. </returns>
        </member>
        <member name="T:Square.Models.ShiftSort">
            <summary>
            ShiftSort.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftSort.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ShiftSort"/> class.
            </summary>
            <param name="field">field.</param>
            <param name="order">order.</param>
        </member>
        <member name="P:Square.Models.ShiftSort.Field">
            <summary>
            Enumerates the `Shift` fields to sort on.
            </summary>
        </member>
        <member name="P:Square.Models.ShiftSort.Order">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftSort.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftSort.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftSort.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftSort.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ShiftSort.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ShiftSort.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftSort.Builder.Field(System.String)">
            <summary>
            Field.
            </summary>
            <param name="field"> field. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftSort.Builder.Order(System.String)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftSort.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ShiftSort. </returns>
        </member>
        <member name="T:Square.Models.ShiftWage">
            <summary>
            ShiftWage.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftWage.#ctor(System.String,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ShiftWage"/> class.
            </summary>
            <param name="title">title.</param>
            <param name="hourlyRate">hourly_rate.</param>
        </member>
        <member name="P:Square.Models.ShiftWage.Title">
            <summary>
            The name of the job performed during this shift. Square
            labor-reporting UIs may group shifts together by title.
            </summary>
        </member>
        <member name="P:Square.Models.ShiftWage.HourlyRate">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftWage.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftWage.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftWage.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftWage.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ShiftWage.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ShiftWage.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftWage.Builder.Title(System.String)">
            <summary>
            Title.
            </summary>
            <param name="title"> title. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftWage.Builder.HourlyRate(Square.Models.Money)">
            <summary>
            HourlyRate.
            </summary>
            <param name="hourlyRate"> hourlyRate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftWage.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ShiftWage. </returns>
        </member>
        <member name="T:Square.Models.ShiftWorkday">
            <summary>
            ShiftWorkday.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftWorkday.#ctor(Square.Models.DateRange,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.ShiftWorkday"/> class.
            </summary>
            <param name="dateRange">date_range.</param>
            <param name="matchShiftsBy">match_shifts_by.</param>
            <param name="defaultTimezone">default_timezone.</param>
        </member>
        <member name="P:Square.Models.ShiftWorkday.DateRange">
            <summary>
            A range defined by two dates. Used for filtering a query for Connect v2
            objects that have date properties.
            </summary>
        </member>
        <member name="P:Square.Models.ShiftWorkday.MatchShiftsBy">
            <summary>
            Defines the logic used to apply a workday filter.
            </summary>
        </member>
        <member name="P:Square.Models.ShiftWorkday.DefaultTimezone">
            <summary>
            Location-specific timezones convert workdays to datetime filters.
            Every location included in the query must have a timezone, or this field
            must be provided as a fallback. Format: the IANA timezone database
            identifier for the relevant timezone.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftWorkday.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftWorkday.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftWorkday.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.ShiftWorkday.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.ShiftWorkday.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.ShiftWorkday.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.ShiftWorkday.Builder.DateRange(Square.Models.DateRange)">
            <summary>
            DateRange.
            </summary>
            <param name="dateRange"> dateRange. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftWorkday.Builder.MatchShiftsBy(System.String)">
            <summary>
            MatchShiftsBy.
            </summary>
            <param name="matchShiftsBy"> matchShiftsBy. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftWorkday.Builder.DefaultTimezone(System.String)">
            <summary>
            DefaultTimezone.
            </summary>
            <param name="defaultTimezone"> defaultTimezone. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.ShiftWorkday.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> ShiftWorkday. </returns>
        </member>
        <member name="T:Square.Models.Site">
            <summary>
            Site.
            </summary>
        </member>
        <member name="M:Square.Models.Site.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Site"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="siteTitle">site_title.</param>
            <param name="domain">domain.</param>
            <param name="isPublished">is_published.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.Site.Id">
            <summary>
            The Square-assigned ID of the site.
            </summary>
        </member>
        <member name="P:Square.Models.Site.SiteTitle">
            <summary>
            The title of the site.
            </summary>
        </member>
        <member name="P:Square.Models.Site.Domain">
            <summary>
            The domain of the site (without the protocol). For example, `mysite1.square.site`.
            </summary>
        </member>
        <member name="P:Square.Models.Site.IsPublished">
            <summary>
            Indicates whether the site is published.
            </summary>
        </member>
        <member name="P:Square.Models.Site.CreatedAt">
            <summary>
            The timestamp of when the site was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Site.UpdatedAt">
            <summary>
            The timestamp of when the site was last updated, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.Site.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Site.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Site.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Site.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Site.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Site.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Site.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Site.Builder.SiteTitle(System.String)">
            <summary>
            SiteTitle.
            </summary>
            <param name="siteTitle"> siteTitle. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Site.Builder.Domain(System.String)">
            <summary>
            Domain.
            </summary>
            <param name="domain"> domain. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Site.Builder.IsPublished(System.Nullable{System.Boolean})">
            <summary>
            IsPublished.
            </summary>
            <param name="isPublished"> isPublished. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Site.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Site.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Site.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Site. </returns>
        </member>
        <member name="T:Square.Models.Snippet">
            <summary>
            Snippet.
            </summary>
        </member>
        <member name="M:Square.Models.Snippet.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Snippet"/> class.
            </summary>
            <param name="content">content.</param>
            <param name="id">id.</param>
            <param name="siteId">site_id.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.Snippet.Id">
            <summary>
            The Square-assigned ID for the snippet.
            </summary>
        </member>
        <member name="P:Square.Models.Snippet.SiteId">
            <summary>
            The ID of the site that contains the snippet.
            </summary>
        </member>
        <member name="P:Square.Models.Snippet.Content">
            <summary>
            The snippet code, which can contain valid HTML, JavaScript, or both.
            </summary>
        </member>
        <member name="P:Square.Models.Snippet.CreatedAt">
            <summary>
            The timestamp of when the snippet was initially added to the site, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Snippet.UpdatedAt">
            <summary>
            The timestamp of when the snippet was last updated on the site, in RFC 3339 format.
            </summary>
        </member>
        <member name="M:Square.Models.Snippet.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Snippet.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Snippet.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Snippet.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Snippet.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Snippet.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Snippet.Builder.Content(System.String)">
            <summary>
            Content.
            </summary>
            <param name="content"> content. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Snippet.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Snippet.Builder.SiteId(System.String)">
            <summary>
            SiteId.
            </summary>
            <param name="siteId"> siteId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Snippet.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Snippet.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Snippet.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Snippet. </returns>
        </member>
        <member name="T:Square.Models.SnippetResponse">
            <summary>
            SnippetResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SnippetResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Snippet)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SnippetResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="snippet">snippet.</param>
        </member>
        <member name="P:Square.Models.SnippetResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SnippetResponse.Snippet">
            <summary>
            Represents the snippet that is added to a Square Online site. The snippet code is injected into the `head` element of all pages on the site, except for checkout pages.
            </summary>
        </member>
        <member name="M:Square.Models.SnippetResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SnippetResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SnippetResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SnippetResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SnippetResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SnippetResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SnippetResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SnippetResponse.Builder.Snippet(Square.Models.Snippet)">
            <summary>
            Snippet.
            </summary>
            <param name="snippet"> snippet. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SnippetResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SnippetResponse. </returns>
        </member>
        <member name="T:Square.Models.SourceApplication">
            <summary>
            SourceApplication.
            </summary>
        </member>
        <member name="M:Square.Models.SourceApplication.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SourceApplication"/> class.
            </summary>
            <param name="product">product.</param>
            <param name="applicationId">application_id.</param>
            <param name="name">name.</param>
        </member>
        <member name="P:Square.Models.SourceApplication.Product">
            <summary>
            Indicates the Square product used to generate an inventory change.
            </summary>
        </member>
        <member name="P:Square.Models.SourceApplication.ApplicationId">
            <summary>
            Read-only Square ID assigned to the application. Only used for
            [Product]($m/Product) type `EXTERNAL_API`.
            </summary>
        </member>
        <member name="P:Square.Models.SourceApplication.Name">
            <summary>
            Read-only display name assigned to the application
            (e.g. `"Custom Application"`, `"Square POS 4.74 for Android"`).
            </summary>
        </member>
        <member name="M:Square.Models.SourceApplication.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SourceApplication.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SourceApplication.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SourceApplication.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SourceApplication.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SourceApplication.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SourceApplication.Builder.Product(System.String)">
            <summary>
            Product.
            </summary>
            <param name="product"> product. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SourceApplication.Builder.ApplicationId(System.String)">
            <summary>
            ApplicationId.
            </summary>
            <param name="applicationId"> applicationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SourceApplication.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SourceApplication.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SourceApplication. </returns>
        </member>
        <member name="T:Square.Models.StandardUnitDescription">
            <summary>
            StandardUnitDescription.
            </summary>
        </member>
        <member name="M:Square.Models.StandardUnitDescription.#ctor(Square.Models.MeasurementUnit,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.StandardUnitDescription"/> class.
            </summary>
            <param name="unit">unit.</param>
            <param name="name">name.</param>
            <param name="abbreviation">abbreviation.</param>
        </member>
        <member name="P:Square.Models.StandardUnitDescription.Unit">
            <summary>
            Represents a unit of measurement to use with a quantity, such as ounces
            or inches. Exactly one of the following fields are required: `custom_unit`,
            `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
            </summary>
        </member>
        <member name="P:Square.Models.StandardUnitDescription.Name">
            <summary>
            UI display name of the measurement unit. For example, 'Pound'.
            </summary>
        </member>
        <member name="P:Square.Models.StandardUnitDescription.Abbreviation">
            <summary>
            UI display abbreviation for the measurement unit. For example, 'lb'.
            </summary>
        </member>
        <member name="M:Square.Models.StandardUnitDescription.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.StandardUnitDescription.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.StandardUnitDescription.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.StandardUnitDescription.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.StandardUnitDescription.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.StandardUnitDescription.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.StandardUnitDescription.Builder.Unit(Square.Models.MeasurementUnit)">
            <summary>
            Unit.
            </summary>
            <param name="unit"> unit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.StandardUnitDescription.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.StandardUnitDescription.Builder.Abbreviation(System.String)">
            <summary>
            Abbreviation.
            </summary>
            <param name="abbreviation"> abbreviation. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.StandardUnitDescription.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> StandardUnitDescription. </returns>
        </member>
        <member name="T:Square.Models.StandardUnitDescriptionGroup">
            <summary>
            StandardUnitDescriptionGroup.
            </summary>
        </member>
        <member name="M:Square.Models.StandardUnitDescriptionGroup.#ctor(System.Collections.Generic.IList{Square.Models.StandardUnitDescription},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.StandardUnitDescriptionGroup"/> class.
            </summary>
            <param name="standardUnitDescriptions">standard_unit_descriptions.</param>
            <param name="languageCode">language_code.</param>
        </member>
        <member name="P:Square.Models.StandardUnitDescriptionGroup.StandardUnitDescriptions">
            <summary>
            List of standard (non-custom) measurement units in this description group.
            </summary>
        </member>
        <member name="P:Square.Models.StandardUnitDescriptionGroup.LanguageCode">
            <summary>
            IETF language tag.
            </summary>
        </member>
        <member name="M:Square.Models.StandardUnitDescriptionGroup.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.StandardUnitDescriptionGroup.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.StandardUnitDescriptionGroup.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.StandardUnitDescriptionGroup.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.StandardUnitDescriptionGroup.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.StandardUnitDescriptionGroup.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.StandardUnitDescriptionGroup.Builder.StandardUnitDescriptions(System.Collections.Generic.IList{Square.Models.StandardUnitDescription})">
            <summary>
            StandardUnitDescriptions.
            </summary>
            <param name="standardUnitDescriptions"> standardUnitDescriptions. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.StandardUnitDescriptionGroup.Builder.LanguageCode(System.String)">
            <summary>
            LanguageCode.
            </summary>
            <param name="languageCode"> languageCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.StandardUnitDescriptionGroup.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> StandardUnitDescriptionGroup. </returns>
        </member>
        <member name="T:Square.Models.SubmitEvidenceResponse">
            <summary>
            SubmitEvidenceResponse.
            </summary>
        </member>
        <member name="M:Square.Models.SubmitEvidenceResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Dispute)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SubmitEvidenceResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="dispute">dispute.</param>
        </member>
        <member name="P:Square.Models.SubmitEvidenceResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.SubmitEvidenceResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.SubmitEvidenceResponse.Dispute">
            <summary>
            Represents a dispute a cardholder initiated with their bank.
            </summary>
        </member>
        <member name="M:Square.Models.SubmitEvidenceResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubmitEvidenceResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubmitEvidenceResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubmitEvidenceResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SubmitEvidenceResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SubmitEvidenceResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SubmitEvidenceResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubmitEvidenceResponse.Builder.Dispute(Square.Models.Dispute)">
            <summary>
            Dispute.
            </summary>
            <param name="dispute"> dispute. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubmitEvidenceResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SubmitEvidenceResponse. </returns>
        </member>
        <member name="T:Square.Models.Subscription">
            <summary>
            Subscription.
            </summary>
        </member>
        <member name="M:Square.Models.Subscription.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Square.Models.Money,System.Nullable{System.Int64},System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Subscription"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="locationId">location_id.</param>
            <param name="planId">plan_id.</param>
            <param name="customerId">customer_id.</param>
            <param name="startDate">start_date.</param>
            <param name="canceledDate">canceled_date.</param>
            <param name="status">status.</param>
            <param name="taxPercentage">tax_percentage.</param>
            <param name="invoiceIds">invoice_ids.</param>
            <param name="priceOverrideMoney">price_override_money.</param>
            <param name="version">version.</param>
            <param name="createdAt">created_at.</param>
            <param name="cardId">card_id.</param>
            <param name="paidUntilDate">paid_until_date.</param>
            <param name="timezone">timezone.</param>
        </member>
        <member name="P:Square.Models.Subscription.Id">
            <summary>
            The Square-assigned ID of the subscription.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.LocationId">
            <summary>
            The ID of the location associated with the subscription.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.PlanId">
            <summary>
            The ID of the associated [subscription plan]($m/CatalogSubscriptionPlan).
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.CustomerId">
            <summary>
            The ID of the associated [customer]($m/Customer) profile.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.StartDate">
            <summary>
            The start date of the subscription, in YYYY-MM-DD format (for example,
            2013-01-15).
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.CanceledDate">
            <summary>
            The subscription cancellation date, in YYYY-MM-DD format (for
            example, 2013-01-15). On this date, the subscription status changes
            to `CANCELED` and the subscription billing stops.
            If you don't set this field, the subscription plan dictates if and
            when subscription ends.
            You cannot update this field, you can only clear it.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.Status">
            <summary>
            Possible subscription status values.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.TaxPercentage">
            <summary>
            The tax amount applied when billing the subscription. The
            percentage is expressed in decimal form, using a `'.'` as the decimal
            separator and without a `'%'` sign. For example, a value of `7.5`
            corresponds to 7.5%.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.InvoiceIds">
            <summary>
            The IDs of the [invoices]($m/Invoice) created for the
            subscription, listed in order when the invoices were created
            (oldest invoices appear first).
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.PriceOverrideMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.Version">
            <summary>
            The version of the object. When updating an object, the version
            supplied must match the version in the database, otherwise the write will
            be rejected as conflicting.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.CreatedAt">
            <summary>
            The timestamp when the subscription was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.CardId">
            <summary>
            The ID of the [customer]($m/Customer) [card]($m/Card)
            that is charged for the subscription.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.PaidUntilDate">
            <summary>
            The date up to which the customer is invoiced for the
            subscription, in YYYY-MM-DD format (for example, 2013-01-15).
            After the invoice is paid for a given billing period,
            this date will be the last day of the billing period.
            For example,
            suppose for the month of May a customer gets an invoice
            (or charged the card) on May 1. For the monthly billing scenario,
            this date is then set to May 31.
            </summary>
        </member>
        <member name="P:Square.Models.Subscription.Timezone">
            <summary>
            Timezone that will be used in date calculations for the subscription.
            Defaults to the timezone of the location based on `location_id`.
            Format: the IANA Timezone Database identifier for the location timezone (for example, `America/Los_Angeles`).
            </summary>
        </member>
        <member name="M:Square.Models.Subscription.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Subscription.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Subscription.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Subscription.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Subscription.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Subscription.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Subscription.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.PlanId(System.String)">
            <summary>
            PlanId.
            </summary>
            <param name="planId"> planId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.StartDate(System.String)">
            <summary>
            StartDate.
            </summary>
            <param name="startDate"> startDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.CanceledDate(System.String)">
            <summary>
            CanceledDate.
            </summary>
            <param name="canceledDate"> canceledDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.TaxPercentage(System.String)">
            <summary>
            TaxPercentage.
            </summary>
            <param name="taxPercentage"> taxPercentage. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.InvoiceIds(System.Collections.Generic.IList{System.String})">
            <summary>
            InvoiceIds.
            </summary>
            <param name="invoiceIds"> invoiceIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.PriceOverrideMoney(Square.Models.Money)">
            <summary>
            PriceOverrideMoney.
            </summary>
            <param name="priceOverrideMoney"> priceOverrideMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.Version(System.Nullable{System.Int64})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.CardId(System.String)">
            <summary>
            CardId.
            </summary>
            <param name="cardId"> cardId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.PaidUntilDate(System.String)">
            <summary>
            PaidUntilDate.
            </summary>
            <param name="paidUntilDate"> paidUntilDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.Timezone(System.String)">
            <summary>
            Timezone.
            </summary>
            <param name="timezone"> timezone. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Subscription.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Subscription. </returns>
        </member>
        <member name="T:Square.Models.SubscriptionEvent">
            <summary>
            SubscriptionEvent.
            </summary>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.#ctor(System.String,System.String,System.String,System.String,Square.Models.SubscriptionEventInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SubscriptionEvent"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="subscriptionEventType">subscription_event_type.</param>
            <param name="effectiveDate">effective_date.</param>
            <param name="planId">plan_id.</param>
            <param name="info">info.</param>
        </member>
        <member name="P:Square.Models.SubscriptionEvent.Id">
            <summary>
            The ID of the subscription event.
            </summary>
        </member>
        <member name="P:Square.Models.SubscriptionEvent.SubscriptionEventType">
            <summary>
            The possible subscription event types.
            </summary>
        </member>
        <member name="P:Square.Models.SubscriptionEvent.EffectiveDate">
            <summary>
            The date, in YYYY-MM-DD format (for
            example, 2013-01-15), when the subscription event went into effect.
            </summary>
        </member>
        <member name="P:Square.Models.SubscriptionEvent.PlanId">
            <summary>
            The ID of the subscription plan associated with the subscription.
            </summary>
        </member>
        <member name="P:Square.Models.SubscriptionEvent.Info">
            <summary>
            Provides information about the subscription event.
            </summary>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SubscriptionEvent.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.Builder.SubscriptionEventType(System.String)">
            <summary>
            SubscriptionEventType.
            </summary>
            <param name="subscriptionEventType"> subscriptionEventType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.Builder.EffectiveDate(System.String)">
            <summary>
            EffectiveDate.
            </summary>
            <param name="effectiveDate"> effectiveDate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.Builder.PlanId(System.String)">
            <summary>
            PlanId.
            </summary>
            <param name="planId"> planId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.Builder.Info(Square.Models.SubscriptionEventInfo)">
            <summary>
            Info.
            </summary>
            <param name="info"> info. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionEvent.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SubscriptionEvent. </returns>
        </member>
        <member name="T:Square.Models.SubscriptionEventInfo">
            <summary>
            SubscriptionEventInfo.
            </summary>
        </member>
        <member name="M:Square.Models.SubscriptionEventInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SubscriptionEventInfo"/> class.
            </summary>
            <param name="detail">detail.</param>
            <param name="code">code.</param>
        </member>
        <member name="P:Square.Models.SubscriptionEventInfo.Detail">
            <summary>
            A human-readable explanation for the event.
            </summary>
        </member>
        <member name="P:Square.Models.SubscriptionEventInfo.Code">
            <summary>
            The possible subscription event info codes.
            </summary>
        </member>
        <member name="M:Square.Models.SubscriptionEventInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubscriptionEventInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubscriptionEventInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubscriptionEventInfo.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SubscriptionEventInfo.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SubscriptionEventInfo.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SubscriptionEventInfo.Builder.Detail(System.String)">
            <summary>
            Detail.
            </summary>
            <param name="detail"> detail. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionEventInfo.Builder.Code(System.String)">
            <summary>
            Code.
            </summary>
            <param name="code"> code. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionEventInfo.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SubscriptionEventInfo. </returns>
        </member>
        <member name="T:Square.Models.SubscriptionPhase">
            <summary>
            SubscriptionPhase.
            </summary>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.#ctor(System.String,Square.Models.Money,System.String,System.Nullable{System.Int32},System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.SubscriptionPhase"/> class.
            </summary>
            <param name="cadence">cadence.</param>
            <param name="recurringPriceMoney">recurring_price_money.</param>
            <param name="uid">uid.</param>
            <param name="periods">periods.</param>
            <param name="ordinal">ordinal.</param>
        </member>
        <member name="P:Square.Models.SubscriptionPhase.Uid">
            <summary>
            The Square-assigned ID of the subscription phase. This field cannot be changed after a `SubscriptionPhase` is created.
            </summary>
        </member>
        <member name="P:Square.Models.SubscriptionPhase.Cadence">
            <summary>
            Determines the billing cadence of a [Subscription]($m/Subscription)
            </summary>
        </member>
        <member name="P:Square.Models.SubscriptionPhase.Periods">
            <summary>
            The number of `cadence`s the phase lasts. If not set, the phase never ends. Only the last phase can be indefinite. This field cannot be changed after a `SubscriptionPhase` is created.
            </summary>
        </member>
        <member name="P:Square.Models.SubscriptionPhase.RecurringPriceMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.SubscriptionPhase.Ordinal">
            <summary>
            The position this phase appears in the sequence of phases defined for the plan, indexed from 0. This field cannot be changed after a `SubscriptionPhase` is created.
            </summary>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.SubscriptionPhase.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.Builder.Cadence(System.String)">
            <summary>
            Cadence.
            </summary>
            <param name="cadence"> cadence. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.Builder.RecurringPriceMoney(Square.Models.Money)">
            <summary>
            RecurringPriceMoney.
            </summary>
            <param name="recurringPriceMoney"> recurringPriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.Builder.Uid(System.String)">
            <summary>
            Uid.
            </summary>
            <param name="uid"> uid. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.Builder.Periods(System.Nullable{System.Int32})">
            <summary>
            Periods.
            </summary>
            <param name="periods"> periods. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.Builder.Ordinal(System.Nullable{System.Int64})">
            <summary>
            Ordinal.
            </summary>
            <param name="ordinal"> ordinal. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.SubscriptionPhase.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> SubscriptionPhase. </returns>
        </member>
        <member name="T:Square.Models.TeamMember">
            <summary>
            TeamMember.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMember.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.TeamMemberAssignedLocations)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TeamMember"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="referenceId">reference_id.</param>
            <param name="isOwner">is_owner.</param>
            <param name="status">status.</param>
            <param name="givenName">given_name.</param>
            <param name="familyName">family_name.</param>
            <param name="emailAddress">email_address.</param>
            <param name="phoneNumber">phone_number.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="assignedLocations">assigned_locations.</param>
        </member>
        <member name="P:Square.Models.TeamMember.Id">
            <summary>
            The unique ID for the team member.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMember.ReferenceId">
            <summary>
            A second ID used to associate the team member with an entity in another system.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMember.IsOwner">
            <summary>
            Whether the team member is the owner of the Square account.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMember.Status">
            <summary>
            Enumerates the possible statuses the team member can have within a business.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMember.GivenName">
            <summary>
            The given (i.e., first) name associated with the team member.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMember.FamilyName">
            <summary>
            The family (i.e., last) name associated with the team member.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMember.EmailAddress">
            <summary>
            The email address associated with the team member.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMember.PhoneNumber">
            <summary>
            The team member's phone number in E.164 format. Examples:
            +14155552671 - the country code is 1 for US
            +551155256325 - the country code is 55 for BR
            </summary>
        </member>
        <member name="P:Square.Models.TeamMember.CreatedAt">
            <summary>
            The timestamp in RFC 3339 format describing when the team member was created.
            Ex: "2018-10-04T04:00:00-07:00" or "2019-02-05T12:00:00Z"
            </summary>
        </member>
        <member name="P:Square.Models.TeamMember.UpdatedAt">
            <summary>
            The timestamp in RFC 3339 format describing when the team member was last updated.
            Ex: "2018-10-04T04:00:00-07:00" or "2019-02-05T12:00:00Z"
            </summary>
        </member>
        <member name="P:Square.Models.TeamMember.AssignedLocations">
            <summary>
            An object that represents a team member's assignment to locations.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMember.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMember.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMember.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMember.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TeamMember.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TeamMember.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.IsOwner(System.Nullable{System.Boolean})">
            <summary>
            IsOwner.
            </summary>
            <param name="isOwner"> isOwner. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.GivenName(System.String)">
            <summary>
            GivenName.
            </summary>
            <param name="givenName"> givenName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.FamilyName(System.String)">
            <summary>
            FamilyName.
            </summary>
            <param name="familyName"> familyName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.EmailAddress(System.String)">
            <summary>
            EmailAddress.
            </summary>
            <param name="emailAddress"> emailAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.PhoneNumber(System.String)">
            <summary>
            PhoneNumber.
            </summary>
            <param name="phoneNumber"> phoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.AssignedLocations(Square.Models.TeamMemberAssignedLocations)">
            <summary>
            AssignedLocations.
            </summary>
            <param name="assignedLocations"> assignedLocations. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMember.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TeamMember. </returns>
        </member>
        <member name="T:Square.Models.TeamMemberAssignedLocations">
            <summary>
            TeamMemberAssignedLocations.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMemberAssignedLocations.#ctor(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TeamMemberAssignedLocations"/> class.
            </summary>
            <param name="assignmentType">assignment_type.</param>
            <param name="locationIds">location_ids.</param>
        </member>
        <member name="P:Square.Models.TeamMemberAssignedLocations.AssignmentType">
            <summary>
            Enumerates the possible assignment types the team member can have
            </summary>
        </member>
        <member name="P:Square.Models.TeamMemberAssignedLocations.LocationIds">
            <summary>
            The locations that the team member is assigned to.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMemberAssignedLocations.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMemberAssignedLocations.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMemberAssignedLocations.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMemberAssignedLocations.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TeamMemberAssignedLocations.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TeamMemberAssignedLocations.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMemberAssignedLocations.Builder.AssignmentType(System.String)">
            <summary>
            AssignmentType.
            </summary>
            <param name="assignmentType"> assignmentType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberAssignedLocations.Builder.LocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            LocationIds.
            </summary>
            <param name="locationIds"> locationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberAssignedLocations.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TeamMemberAssignedLocations. </returns>
        </member>
        <member name="T:Square.Models.TeamMemberBookingProfile">
            <summary>
            TeamMemberBookingProfile.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TeamMemberBookingProfile"/> class.
            </summary>
            <param name="teamMemberId">team_member_id.</param>
            <param name="description">description.</param>
            <param name="displayName">display_name.</param>
            <param name="isBookable">is_bookable.</param>
            <param name="profileImageUrl">profile_image_url.</param>
        </member>
        <member name="P:Square.Models.TeamMemberBookingProfile.TeamMemberId">
            <summary>
            The ID of the [TeamMember]($m/TeamMember) object for the team member associated with the booking profile.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMemberBookingProfile.Description">
            <summary>
            The description of the team member.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMemberBookingProfile.DisplayName">
            <summary>
            The display name of the team member.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMemberBookingProfile.IsBookable">
            <summary>
            Indicates whether the team member can be booked through the Bookings API or the seller's online booking channel or site (`true) or not (`false`).
            </summary>
        </member>
        <member name="P:Square.Models.TeamMemberBookingProfile.ProfileImageUrl">
            <summary>
            The URL of the team member's image for the bookings profile.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TeamMemberBookingProfile.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.Builder.TeamMemberId(System.String)">
            <summary>
            TeamMemberId.
            </summary>
            <param name="teamMemberId"> teamMemberId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.Builder.Description(System.String)">
            <summary>
            Description.
            </summary>
            <param name="description"> description. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.Builder.DisplayName(System.String)">
            <summary>
            DisplayName.
            </summary>
            <param name="displayName"> displayName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.Builder.IsBookable(System.Nullable{System.Boolean})">
            <summary>
            IsBookable.
            </summary>
            <param name="isBookable"> isBookable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.Builder.ProfileImageUrl(System.String)">
            <summary>
            ProfileImageUrl.
            </summary>
            <param name="profileImageUrl"> profileImageUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberBookingProfile.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TeamMemberBookingProfile. </returns>
        </member>
        <member name="T:Square.Models.TeamMemberWage">
            <summary>
            TeamMemberWage.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMemberWage.#ctor(System.String,System.String,System.String,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TeamMemberWage"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="teamMemberId">team_member_id.</param>
            <param name="title">title.</param>
            <param name="hourlyRate">hourly_rate.</param>
        </member>
        <member name="P:Square.Models.TeamMemberWage.Id">
            <summary>
            UUID for this object.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMemberWage.TeamMemberId">
            <summary>
            The `Team Member` that this wage is assigned to.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMemberWage.Title">
            <summary>
            The job title that this wage relates to.
            </summary>
        </member>
        <member name="P:Square.Models.TeamMemberWage.HourlyRate">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMemberWage.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMemberWage.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMemberWage.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TeamMemberWage.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TeamMemberWage.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TeamMemberWage.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TeamMemberWage.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberWage.Builder.TeamMemberId(System.String)">
            <summary>
            TeamMemberId.
            </summary>
            <param name="teamMemberId"> teamMemberId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberWage.Builder.Title(System.String)">
            <summary>
            Title.
            </summary>
            <param name="title"> title. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberWage.Builder.HourlyRate(Square.Models.Money)">
            <summary>
            HourlyRate.
            </summary>
            <param name="hourlyRate"> hourlyRate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TeamMemberWage.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TeamMemberWage. </returns>
        </member>
        <member name="T:Square.Models.Tender">
            <summary>
            Tender.
            </summary>
        </member>
        <member name="M:Square.Models.Tender.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.Money,Square.Models.Money,Square.Models.Money,System.String,Square.Models.TenderCardDetails,Square.Models.TenderCashDetails,System.Collections.Generic.IList{Square.Models.AdditionalRecipient},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Tender"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="id">id.</param>
            <param name="locationId">location_id.</param>
            <param name="transactionId">transaction_id.</param>
            <param name="createdAt">created_at.</param>
            <param name="note">note.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="tipMoney">tip_money.</param>
            <param name="processingFeeMoney">processing_fee_money.</param>
            <param name="customerId">customer_id.</param>
            <param name="cardDetails">card_details.</param>
            <param name="cashDetails">cash_details.</param>
            <param name="additionalRecipients">additional_recipients.</param>
            <param name="paymentId">payment_id.</param>
        </member>
        <member name="P:Square.Models.Tender.Id">
            <summary>
            The tender's unique ID.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.LocationId">
            <summary>
            The ID of the transaction's associated location.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.TransactionId">
            <summary>
            The ID of the tender's associated transaction.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.CreatedAt">
            <summary>
            The timestamp for when the tender was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.Note">
            <summary>
            An optional note associated with the tender at the time of payment.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.TipMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.ProcessingFeeMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.CustomerId">
            <summary>
            If the tender is associated with a customer or represents a customer's card on file,
            this is the ID of the associated customer.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.Type">
            <summary>
            Indicates a tender's type.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.CardDetails">
            <summary>
            Represents additional details of a tender with `type` `CARD` or `SQUARE_GIFT_CARD`
            </summary>
        </member>
        <member name="P:Square.Models.Tender.CashDetails">
            <summary>
            Represents the details of a tender with `type` `CASH`.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.AdditionalRecipients">
            <summary>
            Additional recipients (other than the merchant) receiving a portion of this tender.
            For example, fees assessed on the purchase by a third party integration.
            </summary>
        </member>
        <member name="P:Square.Models.Tender.PaymentId">
            <summary>
            The ID of the [Payment]($m/Payment) that corresponds to this tender.
            This value is only present for payments created with the v2 Payments API.
            </summary>
        </member>
        <member name="M:Square.Models.Tender.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Tender.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Tender.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Tender.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Tender.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Tender.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Tender.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.TransactionId(System.String)">
            <summary>
            TransactionId.
            </summary>
            <param name="transactionId"> transactionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.TipMoney(Square.Models.Money)">
            <summary>
            TipMoney.
            </summary>
            <param name="tipMoney"> tipMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.ProcessingFeeMoney(Square.Models.Money)">
            <summary>
            ProcessingFeeMoney.
            </summary>
            <param name="processingFeeMoney"> processingFeeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.CustomerId(System.String)">
            <summary>
            CustomerId.
            </summary>
            <param name="customerId"> customerId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.CardDetails(Square.Models.TenderCardDetails)">
            <summary>
            CardDetails.
            </summary>
            <param name="cardDetails"> cardDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.CashDetails(Square.Models.TenderCashDetails)">
            <summary>
            CashDetails.
            </summary>
            <param name="cashDetails"> cashDetails. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.AdditionalRecipients(System.Collections.Generic.IList{Square.Models.AdditionalRecipient})">
            <summary>
            AdditionalRecipients.
            </summary>
            <param name="additionalRecipients"> additionalRecipients. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.PaymentId(System.String)">
            <summary>
            PaymentId.
            </summary>
            <param name="paymentId"> paymentId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Tender.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Tender. </returns>
        </member>
        <member name="T:Square.Models.TenderCardDetails">
            <summary>
            TenderCardDetails.
            </summary>
        </member>
        <member name="M:Square.Models.TenderCardDetails.#ctor(System.String,Square.Models.Card,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TenderCardDetails"/> class.
            </summary>
            <param name="status">status.</param>
            <param name="card">card.</param>
            <param name="entryMethod">entry_method.</param>
        </member>
        <member name="P:Square.Models.TenderCardDetails.Status">
            <summary>
            Indicates the card transaction's current status.
            </summary>
        </member>
        <member name="P:Square.Models.TenderCardDetails.Card">
            <summary>
            Represents the payment details of a card to be used for payments. These
            details are determined by the `card_nonce` generated by `SqPaymentForm`.
            </summary>
        </member>
        <member name="P:Square.Models.TenderCardDetails.EntryMethod">
            <summary>
            Indicates the method used to enter the card's details.
            </summary>
        </member>
        <member name="M:Square.Models.TenderCardDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TenderCardDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TenderCardDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TenderCardDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TenderCardDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TenderCardDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TenderCardDetails.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TenderCardDetails.Builder.Card(Square.Models.Card)">
            <summary>
            Card.
            </summary>
            <param name="card"> card. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TenderCardDetails.Builder.EntryMethod(System.String)">
            <summary>
            EntryMethod.
            </summary>
            <param name="entryMethod"> entryMethod. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TenderCardDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TenderCardDetails. </returns>
        </member>
        <member name="T:Square.Models.TenderCashDetails">
            <summary>
            TenderCashDetails.
            </summary>
        </member>
        <member name="M:Square.Models.TenderCashDetails.#ctor(Square.Models.Money,Square.Models.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TenderCashDetails"/> class.
            </summary>
            <param name="buyerTenderedMoney">buyer_tendered_money.</param>
            <param name="changeBackMoney">change_back_money.</param>
        </member>
        <member name="P:Square.Models.TenderCashDetails.BuyerTenderedMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.TenderCashDetails.ChangeBackMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="M:Square.Models.TenderCashDetails.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TenderCashDetails.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TenderCashDetails.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TenderCashDetails.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TenderCashDetails.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TenderCashDetails.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TenderCashDetails.Builder.BuyerTenderedMoney(Square.Models.Money)">
            <summary>
            BuyerTenderedMoney.
            </summary>
            <param name="buyerTenderedMoney"> buyerTenderedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TenderCashDetails.Builder.ChangeBackMoney(Square.Models.Money)">
            <summary>
            ChangeBackMoney.
            </summary>
            <param name="changeBackMoney"> changeBackMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TenderCashDetails.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TenderCashDetails. </returns>
        </member>
        <member name="T:Square.Models.TerminalCheckout">
            <summary>
            TerminalCheckout.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckout.#ctor(Square.Models.Money,Square.Models.DeviceCheckoutOptions,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TerminalCheckout"/> class.
            </summary>
            <param name="amountMoney">amount_money.</param>
            <param name="deviceOptions">device_options.</param>
            <param name="id">id.</param>
            <param name="referenceId">reference_id.</param>
            <param name="note">note.</param>
            <param name="deadlineDuration">deadline_duration.</param>
            <param name="status">status.</param>
            <param name="cancelReason">cancel_reason.</param>
            <param name="paymentIds">payment_ids.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="appId">app_id.</param>
            <param name="locationId">location_id.</param>
            <param name="paymentType">payment_type.</param>
        </member>
        <member name="P:Square.Models.TerminalCheckout.Id">
            <summary>
            A unique ID for this `TerminalCheckout`.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.ReferenceId">
            <summary>
            An optional user-defined reference ID that can be used to associate
            this `TerminalCheckout` to another entity in an external system. For example, an order
            ID generated by a third-party shopping cart. The ID is also associated with any payments
            used to complete the checkout.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.Note">
            <summary>
            An optional note to associate with the checkout, as well as with any payments used to complete the checkout.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.DeviceOptions">
            <summary>
            Gets or sets DeviceOptions.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.DeadlineDuration">
            <summary>
            An RFC 3339 duration, after which the checkout is automatically canceled.
            A `TerminalCheckout` that is `PENDING` is automatically `CANCELED` and has a cancellation reason
            of `TIMED_OUT`.
            Default: 5 minutes from creation
            Maximum: 5 minutes
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.Status">
            <summary>
            The status of the `TerminalCheckout`.
            Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`, `COMPLETED`
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.CancelReason">
            <summary>
            Gets or sets CancelReason.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.PaymentIds">
            <summary>
            A list of IDs for payments created by this `TerminalCheckout`.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.CreatedAt">
            <summary>
            The time when the `TerminalCheckout` was created, as an RFC 3339 timestamp.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.UpdatedAt">
            <summary>
            The time when the `TerminalCheckout` was last updated, as an RFC 3339 timestamp.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.AppId">
            <summary>
            The ID of the application that created the checkout.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.LocationId">
            <summary>
            The location of the device where the `TerminalCheckout` was directed.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckout.PaymentType">
            <summary>
            Gets or sets PaymentType.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckout.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckout.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckout.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TerminalCheckout.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TerminalCheckout.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.DeviceOptions(Square.Models.DeviceCheckoutOptions)">
            <summary>
            DeviceOptions.
            </summary>
            <param name="deviceOptions"> deviceOptions. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.DeadlineDuration(System.String)">
            <summary>
            DeadlineDuration.
            </summary>
            <param name="deadlineDuration"> deadlineDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.CancelReason(System.String)">
            <summary>
            CancelReason.
            </summary>
            <param name="cancelReason"> cancelReason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.PaymentIds(System.Collections.Generic.IList{System.String})">
            <summary>
            PaymentIds.
            </summary>
            <param name="paymentIds"> paymentIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.AppId(System.String)">
            <summary>
            AppId.
            </summary>
            <param name="appId"> appId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.PaymentType(System.String)">
            <summary>
            PaymentType.
            </summary>
            <param name="paymentType"> paymentType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckout.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TerminalCheckout. </returns>
        </member>
        <member name="T:Square.Models.TerminalCheckoutQuery">
            <summary>
            TerminalCheckoutQuery.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuery.#ctor(Square.Models.TerminalCheckoutQueryFilter,Square.Models.TerminalCheckoutQuerySort)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TerminalCheckoutQuery"/> class.
            </summary>
            <param name="filter">filter.</param>
            <param name="sort">sort.</param>
        </member>
        <member name="P:Square.Models.TerminalCheckoutQuery.Filter">
            <summary>
            Gets or sets Filter.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckoutQuery.Sort">
            <summary>
            Gets or sets Sort.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TerminalCheckoutQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuery.Builder.Filter(Square.Models.TerminalCheckoutQueryFilter)">
            <summary>
            Filter.
            </summary>
            <param name="filter"> filter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuery.Builder.Sort(Square.Models.TerminalCheckoutQuerySort)">
            <summary>
            Sort.
            </summary>
            <param name="sort"> sort. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TerminalCheckoutQuery. </returns>
        </member>
        <member name="T:Square.Models.TerminalCheckoutQueryFilter">
            <summary>
            TerminalCheckoutQueryFilter.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQueryFilter.#ctor(System.String,Square.Models.TimeRange,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TerminalCheckoutQueryFilter"/> class.
            </summary>
            <param name="deviceId">device_id.</param>
            <param name="createdAt">created_at.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:Square.Models.TerminalCheckoutQueryFilter.DeviceId">
            <summary>
            The `TerminalCheckout` objects associated with a specific device. If no device is specified, then all
            `TerminalCheckout` objects for the merchant are displayed.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckoutQueryFilter.CreatedAt">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalCheckoutQueryFilter.Status">
            <summary>
            Filtered results with the desired status of the `TerminalCheckout`.
            Options: PENDING, IN_PROGRESS, CANCELED, COMPLETED
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQueryFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQueryFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQueryFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQueryFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQueryFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TerminalCheckoutQueryFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQueryFilter.Builder.DeviceId(System.String)">
            <summary>
            DeviceId.
            </summary>
            <param name="deviceId"> deviceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQueryFilter.Builder.CreatedAt(Square.Models.TimeRange)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQueryFilter.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQueryFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TerminalCheckoutQueryFilter. </returns>
        </member>
        <member name="T:Square.Models.TerminalCheckoutQuerySort">
            <summary>
            TerminalCheckoutQuerySort.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuerySort.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TerminalCheckoutQuerySort"/> class.
            </summary>
            <param name="sortOrder">sort_order.</param>
        </member>
        <member name="P:Square.Models.TerminalCheckoutQuerySort.SortOrder">
            <summary>
            The order in which results are listed.
            - `ASC` - Oldest to newest.
            - `DESC` - Newest to oldest (default).
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuerySort.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuerySort.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuerySort.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuerySort.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuerySort.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TerminalCheckoutQuerySort.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuerySort.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalCheckoutQuerySort.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TerminalCheckoutQuerySort. </returns>
        </member>
        <member name="T:Square.Models.TerminalRefund">
            <summary>
            TerminalRefund.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefund.#ctor(System.String,Square.Models.Money,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TerminalRefund"/> class.
            </summary>
            <param name="paymentId">payment_id.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="id">id.</param>
            <param name="refundId">refund_id.</param>
            <param name="orderId">order_id.</param>
            <param name="reason">reason.</param>
            <param name="deviceId">device_id.</param>
            <param name="deadlineDuration">deadline_duration.</param>
            <param name="status">status.</param>
            <param name="cancelReason">cancel_reason.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="appId">app_id.</param>
            <param name="locationId">location_id.</param>
        </member>
        <member name="P:Square.Models.TerminalRefund.Id">
            <summary>
            A unique ID for this `TerminalRefund`.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.RefundId">
            <summary>
            The reference to the payment refund created by completing this `TerminalRefund`.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.PaymentId">
            <summary>
            The unique ID of the payment being refunded.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.OrderId">
            <summary>
            The reference to the Square order ID for the payment identified by the `payment_id`.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.AmountMoney">
            <summary>
            Represents an amount of money. `Money` fields can be signed or unsigned.
            Fields that do not explicitly define whether they are signed or unsigned are
            considered unsigned and can only hold positive amounts. For signed fields, the
            sign of the value indicates the purpose of the money transfer. See
            [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
            for more information.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.Reason">
            <summary>
            A description of the reason for the refund.
            Note: maximum 192 characters
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.DeviceId">
            <summary>
            The unique ID of the device intended for this `TerminalRefund`.
            The Id can be retrieved from /v2/devices api.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.DeadlineDuration">
            <summary>
            The RFC 3339 duration, after which the refund is automatically canceled.
            A `TerminalRefund` that is `PENDING` is automatically `CANCELED` and has a cancellation reason
            of `TIMED_OUT`.
            Default: 5 minutes from creation.
            Maximum: 5 minutes
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.Status">
            <summary>
            The status of the `TerminalRefund`.
            Options: `PENDING`, `IN_PROGRESS`, `CANCELED`, or `COMPLETED`.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.CancelReason">
            <summary>
            Gets or sets CancelReason.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.CreatedAt">
            <summary>
            The time when the `TerminalRefund` was created, as an RFC 3339 timestamp.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.UpdatedAt">
            <summary>
            The time when the `TerminalRefund` was last updated, as an RFC 3339 timestamp.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.AppId">
            <summary>
            The ID of the application that created the refund.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefund.LocationId">
            <summary>
            The location of the device where the `TerminalRefund` was directed.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefund.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefund.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefund.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefund.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TerminalRefund.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TerminalRefund.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.PaymentId(System.String)">
            <summary>
            PaymentId.
            </summary>
            <param name="paymentId"> paymentId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.AmountMoney(Square.Models.Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.RefundId(System.String)">
            <summary>
            RefundId.
            </summary>
            <param name="refundId"> refundId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.Reason(System.String)">
            <summary>
            Reason.
            </summary>
            <param name="reason"> reason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.DeviceId(System.String)">
            <summary>
            DeviceId.
            </summary>
            <param name="deviceId"> deviceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.DeadlineDuration(System.String)">
            <summary>
            DeadlineDuration.
            </summary>
            <param name="deadlineDuration"> deadlineDuration. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.CancelReason(System.String)">
            <summary>
            CancelReason.
            </summary>
            <param name="cancelReason"> cancelReason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.AppId(System.String)">
            <summary>
            AppId.
            </summary>
            <param name="appId"> appId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefund.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TerminalRefund. </returns>
        </member>
        <member name="T:Square.Models.TerminalRefundQuery">
            <summary>
            TerminalRefundQuery.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefundQuery.#ctor(Square.Models.TerminalRefundQueryFilter,Square.Models.TerminalRefundQuerySort)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TerminalRefundQuery"/> class.
            </summary>
            <param name="filter">filter.</param>
            <param name="sort">sort.</param>
        </member>
        <member name="P:Square.Models.TerminalRefundQuery.Filter">
            <summary>
            Gets or sets Filter.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefundQuery.Sort">
            <summary>
            Gets or sets Sort.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefundQuery.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefundQuery.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefundQuery.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefundQuery.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TerminalRefundQuery.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TerminalRefundQuery.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefundQuery.Builder.Filter(Square.Models.TerminalRefundQueryFilter)">
            <summary>
            Filter.
            </summary>
            <param name="filter"> filter. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefundQuery.Builder.Sort(Square.Models.TerminalRefundQuerySort)">
            <summary>
            Sort.
            </summary>
            <param name="sort"> sort. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefundQuery.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TerminalRefundQuery. </returns>
        </member>
        <member name="T:Square.Models.TerminalRefundQueryFilter">
            <summary>
            TerminalRefundQueryFilter.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefundQueryFilter.#ctor(System.String,Square.Models.TimeRange,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TerminalRefundQueryFilter"/> class.
            </summary>
            <param name="deviceId">device_id.</param>
            <param name="createdAt">created_at.</param>
            <param name="status">status.</param>
        </member>
        <member name="P:Square.Models.TerminalRefundQueryFilter.DeviceId">
            <summary>
            `TerminalRefund` objects associated with a specific device. If no device is specified, then all
            `TerminalRefund` objects for the signed-in account are displayed.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefundQueryFilter.CreatedAt">
            <summary>
            Represents a generic time range. The start and end values are
            represented in RFC 3339 format. Time ranges are customized to be
            inclusive or exclusive based on the needs of a particular endpoint.
            Refer to the relevant endpoint-specific documentation to determine
            how time ranges are handled.
            </summary>
        </member>
        <member name="P:Square.Models.TerminalRefundQueryFilter.Status">
            <summary>
            Filtered results with the desired status of the `TerminalRefund`.
            Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`, or `COMPLETED`.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefundQueryFilter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefundQueryFilter.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefundQueryFilter.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefundQueryFilter.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TerminalRefundQueryFilter.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TerminalRefundQueryFilter.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefundQueryFilter.Builder.DeviceId(System.String)">
            <summary>
            DeviceId.
            </summary>
            <param name="deviceId"> deviceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefundQueryFilter.Builder.CreatedAt(Square.Models.TimeRange)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefundQueryFilter.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefundQueryFilter.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TerminalRefundQueryFilter. </returns>
        </member>
        <member name="T:Square.Models.TerminalRefundQuerySort">
            <summary>
            TerminalRefundQuerySort.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefundQuerySort.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TerminalRefundQuerySort"/> class.
            </summary>
            <param name="sortOrder">sort_order.</param>
        </member>
        <member name="P:Square.Models.TerminalRefundQuerySort.SortOrder">
            <summary>
            The order in which results are listed.
            - `ASC` - Oldest to newest.
            - `DESC` - Newest to oldest (default).
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefundQuerySort.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefundQuerySort.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefundQuerySort.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TerminalRefundQuerySort.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TerminalRefundQuerySort.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TerminalRefundQuerySort.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TerminalRefundQuerySort.Builder.SortOrder(System.String)">
            <summary>
            SortOrder.
            </summary>
            <param name="sortOrder"> sortOrder. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TerminalRefundQuerySort.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TerminalRefundQuerySort. </returns>
        </member>
        <member name="T:Square.Models.TimeRange">
            <summary>
            TimeRange.
            </summary>
        </member>
        <member name="M:Square.Models.TimeRange.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TimeRange"/> class.
            </summary>
            <param name="startAt">start_at.</param>
            <param name="endAt">end_at.</param>
        </member>
        <member name="P:Square.Models.TimeRange.StartAt">
            <summary>
            A datetime value in RFC 3339 format indicating when the time range
            starts.
            </summary>
        </member>
        <member name="P:Square.Models.TimeRange.EndAt">
            <summary>
            A datetime value in RFC 3339 format indicating when the time range
            ends.
            </summary>
        </member>
        <member name="M:Square.Models.TimeRange.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TimeRange.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TimeRange.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TimeRange.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TimeRange.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TimeRange.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TimeRange.Builder.StartAt(System.String)">
            <summary>
            StartAt.
            </summary>
            <param name="startAt"> startAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TimeRange.Builder.EndAt(System.String)">
            <summary>
            EndAt.
            </summary>
            <param name="endAt"> endAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TimeRange.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TimeRange. </returns>
        </member>
        <member name="T:Square.Models.TipSettings">
            <summary>
            TipSettings.
            </summary>
        </member>
        <member name="M:Square.Models.TipSettings.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.TipSettings"/> class.
            </summary>
            <param name="allowTipping">allow_tipping.</param>
            <param name="separateTipScreen">separate_tip_screen.</param>
            <param name="customTipField">custom_tip_field.</param>
            <param name="tipPercentages">tip_percentages.</param>
            <param name="smartTipping">smart_tipping.</param>
        </member>
        <member name="P:Square.Models.TipSettings.AllowTipping">
            <summary>
            Indicates whether tipping is enabled for this checkout. Defaults to false.
            </summary>
        </member>
        <member name="P:Square.Models.TipSettings.SeparateTipScreen">
            <summary>
            Indicates whether tip options should be presented on the screen before presenting
            the signature screen during card payment. Defaults to false.
            </summary>
        </member>
        <member name="P:Square.Models.TipSettings.CustomTipField">
            <summary>
            Indicates whether custom tip amounts are allowed during the checkout flow. Defaults to false.
            </summary>
        </member>
        <member name="P:Square.Models.TipSettings.TipPercentages">
            <summary>
            A list of tip percentages that should be presented during the checkout flow, specified as
            up to 3 non-negative integers from 0 to 100 (inclusive). Defaults to 15, 20, and 25.
            </summary>
        </member>
        <member name="P:Square.Models.TipSettings.SmartTipping">
            <summary>
            Enables the "Smart Tip Amounts" behavior.
            Exact tipping options depend on the region in which the Square seller is active.
            In the United States and Canada, tipping options are presented in whole dollar amounts for
            payments under $10 USD/CAD respectively.
            If set to true, the `tip_percentages` settings is ignored.
            Defaults to false.
            To learn more about smart tipping, see [Accept Tips with the Square App](https://squareup.com/help/us/en/article/5069-accept-tips-with-the-square-app).
            </summary>
        </member>
        <member name="M:Square.Models.TipSettings.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TipSettings.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TipSettings.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.TipSettings.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.TipSettings.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.TipSettings.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.TipSettings.Builder.AllowTipping(System.Nullable{System.Boolean})">
            <summary>
            AllowTipping.
            </summary>
            <param name="allowTipping"> allowTipping. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TipSettings.Builder.SeparateTipScreen(System.Nullable{System.Boolean})">
            <summary>
            SeparateTipScreen.
            </summary>
            <param name="separateTipScreen"> separateTipScreen. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TipSettings.Builder.CustomTipField(System.Nullable{System.Boolean})">
            <summary>
            CustomTipField.
            </summary>
            <param name="customTipField"> customTipField. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TipSettings.Builder.TipPercentages(System.Collections.Generic.IList{System.Int32})">
            <summary>
            TipPercentages.
            </summary>
            <param name="tipPercentages"> tipPercentages. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TipSettings.Builder.SmartTipping(System.Nullable{System.Boolean})">
            <summary>
            SmartTipping.
            </summary>
            <param name="smartTipping"> smartTipping. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.TipSettings.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> TipSettings. </returns>
        </member>
        <member name="T:Square.Models.Transaction">
            <summary>
            Transaction.
            </summary>
        </member>
        <member name="M:Square.Models.Transaction.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Square.Models.Tender},System.Collections.Generic.IList{Square.Models.Refund},System.String,System.String,System.String,Square.Models.Address,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.Transaction"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="locationId">location_id.</param>
            <param name="createdAt">created_at.</param>
            <param name="tenders">tenders.</param>
            <param name="refunds">refunds.</param>
            <param name="referenceId">reference_id.</param>
            <param name="product">product.</param>
            <param name="clientId">client_id.</param>
            <param name="shippingAddress">shipping_address.</param>
            <param name="orderId">order_id.</param>
        </member>
        <member name="P:Square.Models.Transaction.Id">
            <summary>
            The transaction's unique ID, issued by Square payments servers.
            </summary>
        </member>
        <member name="P:Square.Models.Transaction.LocationId">
            <summary>
            The ID of the transaction's associated location.
            </summary>
        </member>
        <member name="P:Square.Models.Transaction.CreatedAt">
            <summary>
            The timestamp for when the transaction was created, in RFC 3339 format.
            </summary>
        </member>
        <member name="P:Square.Models.Transaction.Tenders">
            <summary>
            The tenders used to pay in the transaction.
            </summary>
        </member>
        <member name="P:Square.Models.Transaction.Refunds">
            <summary>
            Refunds that have been applied to any tender in the transaction.
            </summary>
        </member>
        <member name="P:Square.Models.Transaction.ReferenceId">
            <summary>
            If the transaction was created with the [Charge]($e/Transactions/Charge)
            endpoint, this value is the same as the value provided for the `reference_id`
            parameter in the request to that endpoint. Otherwise, it is not set.
            </summary>
        </member>
        <member name="P:Square.Models.Transaction.Product">
            <summary>
            Indicates the Square product used to process a transaction.
            </summary>
        </member>
        <member name="P:Square.Models.Transaction.ClientId">
            <summary>
            If the transaction was created in the Square Point of Sale app, this value
            is the ID generated for the transaction by Square Point of Sale.
            This ID has no relationship to the transaction's canonical `id`, which is
            generated by Square's backend servers. This value is generated for bookkeeping
            purposes, in case the transaction cannot immediately be completed (for example,
            if the transaction is processed in offline mode).
            It is not currently possible with the Connect API to perform a transaction
            lookup by this value.
            </summary>
        </member>
        <member name="P:Square.Models.Transaction.ShippingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.Transaction.OrderId">
            <summary>
            The order_id is an identifier for the order associated with this transaction, if any.
            </summary>
        </member>
        <member name="M:Square.Models.Transaction.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Transaction.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Transaction.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.Transaction.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.Transaction.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.Transaction.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.Transaction.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Transaction.Builder.LocationId(System.String)">
            <summary>
            LocationId.
            </summary>
            <param name="locationId"> locationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Transaction.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Transaction.Builder.Tenders(System.Collections.Generic.IList{Square.Models.Tender})">
            <summary>
            Tenders.
            </summary>
            <param name="tenders"> tenders. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Transaction.Builder.Refunds(System.Collections.Generic.IList{Square.Models.Refund})">
            <summary>
            Refunds.
            </summary>
            <param name="refunds"> refunds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Transaction.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Transaction.Builder.Product(System.String)">
            <summary>
            Product.
            </summary>
            <param name="product"> product. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Transaction.Builder.ClientId(System.String)">
            <summary>
            ClientId.
            </summary>
            <param name="clientId"> clientId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Transaction.Builder.ShippingAddress(Square.Models.Address)">
            <summary>
            ShippingAddress.
            </summary>
            <param name="shippingAddress"> shippingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Transaction.Builder.OrderId(System.String)">
            <summary>
            OrderId.
            </summary>
            <param name="orderId"> orderId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.Transaction.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> Transaction. </returns>
        </member>
        <member name="T:Square.Models.UpdateBookingRequest">
            <summary>
            UpdateBookingRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBookingRequest.#ctor(Square.Models.Booking,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateBookingRequest"/> class.
            </summary>
            <param name="booking">booking.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.UpdateBookingRequest.IdempotencyKey">
            <summary>
            A unique key to make this request an idempotent operation.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateBookingRequest.Booking">
            <summary>
            Represents a booking as a time-bound service contract for a seller's staff member to provide a specified service
            at a given location to a requesting customer in one or more appointment segments.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBookingRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBookingRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBookingRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBookingRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateBookingRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateBookingRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBookingRequest.Builder.Booking(Square.Models.Booking)">
            <summary>
            Booking.
            </summary>
            <param name="booking"> booking. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateBookingRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateBookingRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateBookingRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateBookingResponse">
            <summary>
            UpdateBookingResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBookingResponse.#ctor(Square.Models.Booking,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateBookingResponse"/> class.
            </summary>
            <param name="booking">booking.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.UpdateBookingResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateBookingResponse.Booking">
            <summary>
            Represents a booking as a time-bound service contract for a seller's staff member to provide a specified service
            at a given location to a requesting customer in one or more appointment segments.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateBookingResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBookingResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBookingResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBookingResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBookingResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateBookingResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateBookingResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBookingResponse.Builder.Booking(Square.Models.Booking)">
            <summary>
            Booking.
            </summary>
            <param name="booking"> booking. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateBookingResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateBookingResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateBookingResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateBreakTypeRequest">
            <summary>
            UpdateBreakTypeRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeRequest.#ctor(Square.Models.BreakType)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateBreakTypeRequest"/> class.
            </summary>
            <param name="breakType">break_type.</param>
        </member>
        <member name="P:Square.Models.UpdateBreakTypeRequest.BreakType">
            <summary>
            A defined break template that sets an expectation for possible `Break`
            instances on a `Shift`.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateBreakTypeRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeRequest.Builder.BreakType(Square.Models.BreakType)">
            <summary>
            BreakType.
            </summary>
            <param name="breakType"> breakType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateBreakTypeRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateBreakTypeResponse">
            <summary>
            UpdateBreakTypeResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeResponse.#ctor(Square.Models.BreakType,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateBreakTypeResponse"/> class.
            </summary>
            <param name="breakType">break_type.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.UpdateBreakTypeResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateBreakTypeResponse.BreakType">
            <summary>
            A defined break template that sets an expectation for possible `Break`
            instances on a `Shift`.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateBreakTypeResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateBreakTypeResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeResponse.Builder.BreakType(Square.Models.BreakType)">
            <summary>
            BreakType.
            </summary>
            <param name="breakType"> breakType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateBreakTypeResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateBreakTypeResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateCustomerGroupRequest">
            <summary>
            UpdateCustomerGroupRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupRequest.#ctor(Square.Models.CustomerGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateCustomerGroupRequest"/> class.
            </summary>
            <param name="mGroup">group.</param>
        </member>
        <member name="P:Square.Models.UpdateCustomerGroupRequest.MGroup">
            <summary>
            Represents a group of customer profiles.
            Customer groups can be created, be modified, and have their membership defined using
            the Customers API or within the Customer Directory in the Square Seller Dashboard or Point of Sale.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateCustomerGroupRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupRequest.Builder.MGroup(Square.Models.CustomerGroup)">
            <summary>
            MGroup.
            </summary>
            <param name="mGroup"> mGroup. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateCustomerGroupRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateCustomerGroupResponse">
            <summary>
            UpdateCustomerGroupResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.CustomerGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateCustomerGroupResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="mGroup">group.</param>
        </member>
        <member name="P:Square.Models.UpdateCustomerGroupResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerGroupResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerGroupResponse.MGroup">
            <summary>
            Represents a group of customer profiles.
            Customer groups can be created, be modified, and have their membership defined using
            the Customers API or within the Customer Directory in the Square Seller Dashboard or Point of Sale.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateCustomerGroupResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupResponse.Builder.MGroup(Square.Models.CustomerGroup)">
            <summary>
            MGroup.
            </summary>
            <param name="mGroup"> mGroup. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerGroupResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateCustomerGroupResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateCustomerRequest">
            <summary>
            UpdateCustomerRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.#ctor(System.String,System.String,System.String,System.String,System.String,Square.Models.Address,System.String,System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateCustomerRequest"/> class.
            </summary>
            <param name="givenName">given_name.</param>
            <param name="familyName">family_name.</param>
            <param name="companyName">company_name.</param>
            <param name="nickname">nickname.</param>
            <param name="emailAddress">email_address.</param>
            <param name="address">address.</param>
            <param name="phoneNumber">phone_number.</param>
            <param name="referenceId">reference_id.</param>
            <param name="note">note.</param>
            <param name="birthday">birthday.</param>
            <param name="version">version.</param>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.GivenName">
            <summary>
            The given name (that is, the first name) associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.FamilyName">
            <summary>
            The family name (that is, the last name) associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.CompanyName">
            <summary>
            A business name associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.Nickname">
            <summary>
            A nickname for the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.EmailAddress">
            <summary>
            The email address associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.Address">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.PhoneNumber">
            <summary>
            The 11-digit phone number associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.ReferenceId">
            <summary>
            An optional second ID used to associate the customer profile with an
            entity in another system.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.Note">
            <summary>
            A custom note associated with the customer profile.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.Birthday">
            <summary>
            The birthday associated with the customer profile, in RFC 3339 format. The year is optional. The timezone and time are not allowed.
            For example, `0000-09-21T00:00:00-00:00` represents a birthday on September 21 and `1998-09-21T00:00:00-00:00` represents a birthday on September 21, 1998.
            You can also specify this value in `YYYY-MM-DD` format.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerRequest.Version">
            <summary>
            The current version of the customer profile.
            As a best practice, you should include this field to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control. For more information, see [Update a customer profile](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#update-a-customer-profile).
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateCustomerRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.GivenName(System.String)">
            <summary>
            GivenName.
            </summary>
            <param name="givenName"> givenName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.FamilyName(System.String)">
            <summary>
            FamilyName.
            </summary>
            <param name="familyName"> familyName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.CompanyName(System.String)">
            <summary>
            CompanyName.
            </summary>
            <param name="companyName"> companyName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.Nickname(System.String)">
            <summary>
            Nickname.
            </summary>
            <param name="nickname"> nickname. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.EmailAddress(System.String)">
            <summary>
            EmailAddress.
            </summary>
            <param name="emailAddress"> emailAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.Address(Square.Models.Address)">
            <summary>
            Address.
            </summary>
            <param name="address"> address. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.PhoneNumber(System.String)">
            <summary>
            PhoneNumber.
            </summary>
            <param name="phoneNumber"> phoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.ReferenceId(System.String)">
            <summary>
            ReferenceId.
            </summary>
            <param name="referenceId"> referenceId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.Note(System.String)">
            <summary>
            Note.
            </summary>
            <param name="note"> note. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.Birthday(System.String)">
            <summary>
            Birthday.
            </summary>
            <param name="birthday"> birthday. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.Version(System.Nullable{System.Int64})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateCustomerRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateCustomerResponse">
            <summary>
            UpdateCustomerResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Customer)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateCustomerResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="customer">customer.</param>
        </member>
        <member name="P:Square.Models.UpdateCustomerResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateCustomerResponse.Customer">
            <summary>
            Represents a Square customer profile, which can have one or more
            cards on file associated with it.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateCustomerResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateCustomerResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateCustomerResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateCustomerResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerResponse.Builder.Customer(Square.Models.Customer)">
            <summary>
            Customer.
            </summary>
            <param name="customer"> customer. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateCustomerResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateCustomerResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateInvoiceRequest">
            <summary>
            UpdateInvoiceRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateInvoiceRequest.#ctor(Square.Models.Invoice,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateInvoiceRequest"/> class.
            </summary>
            <param name="invoice">invoice.</param>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="fieldsToClear">fields_to_clear.</param>
        </member>
        <member name="P:Square.Models.UpdateInvoiceRequest.Invoice">
            <summary>
            Stores information about an invoice. You use the Invoices API to create and manage
            invoices. For more information, see [Manage Invoices Using the Invoices API](https://developer.squareup.com/docs/invoices-api/overview).
            </summary>
        </member>
        <member name="P:Square.Models.UpdateInvoiceRequest.IdempotencyKey">
            <summary>
            A unique string that identifies the `UpdateInvoice` request. If you do not
            provide `idempotency_key` (or provide an empty string as the value), the endpoint
            treats each request as independent.
            For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
            </summary>
        </member>
        <member name="P:Square.Models.UpdateInvoiceRequest.FieldsToClear">
            <summary>
            The list of fields to clear.
            For examples, see [Update an invoice](https://developer.squareup.com/docs/invoices-api/overview#update-an-invoice).
            </summary>
        </member>
        <member name="M:Square.Models.UpdateInvoiceRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateInvoiceRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateInvoiceRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateInvoiceRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateInvoiceRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateInvoiceRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateInvoiceRequest.Builder.Invoice(Square.Models.Invoice)">
            <summary>
            Invoice.
            </summary>
            <param name="invoice"> invoice. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateInvoiceRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateInvoiceRequest.Builder.FieldsToClear(System.Collections.Generic.IList{System.String})">
            <summary>
            FieldsToClear.
            </summary>
            <param name="fieldsToClear"> fieldsToClear. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateInvoiceRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateInvoiceRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateInvoiceResponse">
            <summary>
            UpdateInvoiceResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateInvoiceResponse.#ctor(Square.Models.Invoice,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateInvoiceResponse"/> class.
            </summary>
            <param name="invoice">invoice.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.UpdateInvoiceResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateInvoiceResponse.Invoice">
            <summary>
            Stores information about an invoice. You use the Invoices API to create and manage
            invoices. For more information, see [Manage Invoices Using the Invoices API](https://developer.squareup.com/docs/invoices-api/overview).
            </summary>
        </member>
        <member name="P:Square.Models.UpdateInvoiceResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateInvoiceResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateInvoiceResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateInvoiceResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateInvoiceResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateInvoiceResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateInvoiceResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateInvoiceResponse.Builder.Invoice(Square.Models.Invoice)">
            <summary>
            Invoice.
            </summary>
            <param name="invoice"> invoice. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateInvoiceResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateInvoiceResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateInvoiceResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateItemModifierListsRequest">
            <summary>
            UpdateItemModifierListsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsRequest.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateItemModifierListsRequest"/> class.
            </summary>
            <param name="itemIds">item_ids.</param>
            <param name="modifierListsToEnable">modifier_lists_to_enable.</param>
            <param name="modifierListsToDisable">modifier_lists_to_disable.</param>
        </member>
        <member name="P:Square.Models.UpdateItemModifierListsRequest.ItemIds">
            <summary>
            The IDs of the catalog items associated with the CatalogModifierList objects being updated.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateItemModifierListsRequest.ModifierListsToEnable">
            <summary>
            The IDs of the CatalogModifierList objects to enable for the CatalogItem.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateItemModifierListsRequest.ModifierListsToDisable">
            <summary>
            The IDs of the CatalogModifierList objects to disable for the CatalogItem.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateItemModifierListsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsRequest.Builder.ItemIds(System.Collections.Generic.IList{System.String})">
            <summary>
            ItemIds.
            </summary>
            <param name="itemIds"> itemIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsRequest.Builder.ModifierListsToEnable(System.Collections.Generic.IList{System.String})">
            <summary>
            ModifierListsToEnable.
            </summary>
            <param name="modifierListsToEnable"> modifierListsToEnable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsRequest.Builder.ModifierListsToDisable(System.Collections.Generic.IList{System.String})">
            <summary>
            ModifierListsToDisable.
            </summary>
            <param name="modifierListsToDisable"> modifierListsToDisable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateItemModifierListsRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateItemModifierListsResponse">
            <summary>
            UpdateItemModifierListsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateItemModifierListsResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.UpdateItemModifierListsResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateItemModifierListsResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateItemModifierListsResponse.UpdatedAt">
            <summary>
            The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-date) of this update in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateItemModifierListsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsResponse.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateItemModifierListsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateItemModifierListsResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateItemTaxesRequest">
            <summary>
            UpdateItemTaxesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesRequest.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateItemTaxesRequest"/> class.
            </summary>
            <param name="itemIds">item_ids.</param>
            <param name="taxesToEnable">taxes_to_enable.</param>
            <param name="taxesToDisable">taxes_to_disable.</param>
        </member>
        <member name="P:Square.Models.UpdateItemTaxesRequest.ItemIds">
            <summary>
            IDs for the CatalogItems associated with the CatalogTax objects being updated.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateItemTaxesRequest.TaxesToEnable">
            <summary>
            IDs of the CatalogTax objects to enable.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateItemTaxesRequest.TaxesToDisable">
            <summary>
            IDs of the CatalogTax objects to disable.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateItemTaxesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesRequest.Builder.ItemIds(System.Collections.Generic.IList{System.String})">
            <summary>
            ItemIds.
            </summary>
            <param name="itemIds"> itemIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesRequest.Builder.TaxesToEnable(System.Collections.Generic.IList{System.String})">
            <summary>
            TaxesToEnable.
            </summary>
            <param name="taxesToEnable"> taxesToEnable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesRequest.Builder.TaxesToDisable(System.Collections.Generic.IList{System.String})">
            <summary>
            TaxesToDisable.
            </summary>
            <param name="taxesToDisable"> taxesToDisable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateItemTaxesRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateItemTaxesResponse">
            <summary>
            UpdateItemTaxesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateItemTaxesResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.UpdateItemTaxesResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateItemTaxesResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateItemTaxesResponse.UpdatedAt">
            <summary>
            The database [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) of this update in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateItemTaxesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesResponse.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateItemTaxesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateItemTaxesResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateLocationRequest">
            <summary>
            UpdateLocationRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateLocationRequest.#ctor(Square.Models.Location)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateLocationRequest"/> class.
            </summary>
            <param name="location">location.</param>
        </member>
        <member name="P:Square.Models.UpdateLocationRequest.Location">
            <summary>
            Gets or sets Location.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateLocationRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateLocationRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateLocationRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateLocationRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateLocationRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateLocationRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateLocationRequest.Builder.Location(Square.Models.Location)">
            <summary>
            Location.
            </summary>
            <param name="location"> location. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateLocationRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateLocationRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateLocationResponse">
            <summary>
            UpdateLocationResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateLocationResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Location)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateLocationResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="location">location.</param>
        </member>
        <member name="P:Square.Models.UpdateLocationResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateLocationResponse.Errors">
            <summary>
            Information on errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateLocationResponse.Location">
            <summary>
            Gets or sets Location.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateLocationResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateLocationResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateLocationResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateLocationResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateLocationResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateLocationResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateLocationResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateLocationResponse.Builder.Location(Square.Models.Location)">
            <summary>
            Location.
            </summary>
            <param name="location"> location. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateLocationResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateLocationResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateOrderRequest">
            <summary>
            UpdateOrderRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateOrderRequest.#ctor(Square.Models.Order,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateOrderRequest"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="fieldsToClear">fields_to_clear.</param>
            <param name="idempotencyKey">idempotency_key.</param>
        </member>
        <member name="P:Square.Models.UpdateOrderRequest.Order">
            <summary>
            Contains all information related to a single order to process with Square,
            including line items that specify the products to purchase. `Order` objects also
            include information about any associated tenders, refunds, and returns.
            All Connect V2 Transactions have all been converted to Orders including all associated
            itemization data.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateOrderRequest.FieldsToClear">
            <summary>
            The [dot notation paths](https://developer.squareup.com/docs/orders-api/manage-orders#on-dot-notation)
            fields to clear. For example, `line_items[uid].note`.
            For more information, see [Deleting fields](https://developer.squareup.com/docs/orders-api/manage-orders#delete-fields).
            </summary>
        </member>
        <member name="P:Square.Models.UpdateOrderRequest.IdempotencyKey">
            <summary>
            A value you specify that uniquely identifies this update request.
            If you are unsure whether a particular update was applied to an order successfully,
            you can reattempt it with the same idempotency key without
            worrying about creating duplicate updates to the order.
            The latest order version is returned.
            For more information, see [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency).
            </summary>
        </member>
        <member name="M:Square.Models.UpdateOrderRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateOrderRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateOrderRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateOrderRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateOrderRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateOrderRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateOrderRequest.Builder.Order(Square.Models.Order)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateOrderRequest.Builder.FieldsToClear(System.Collections.Generic.IList{System.String})">
            <summary>
            FieldsToClear.
            </summary>
            <param name="fieldsToClear"> fieldsToClear. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateOrderRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateOrderRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateOrderRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateOrderResponse">
            <summary>
            UpdateOrderResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateOrderResponse.#ctor(Square.Models.Order,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateOrderResponse"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.UpdateOrderResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateOrderResponse.Order">
            <summary>
            Contains all information related to a single order to process with Square,
            including line items that specify the products to purchase. `Order` objects also
            include information about any associated tenders, refunds, and returns.
            All Connect V2 Transactions have all been converted to Orders including all associated
            itemization data.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateOrderResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateOrderResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateOrderResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateOrderResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateOrderResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateOrderResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateOrderResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateOrderResponse.Builder.Order(Square.Models.Order)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateOrderResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateOrderResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateOrderResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdatePaymentRequest">
            <summary>
            UpdatePaymentRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdatePaymentRequest.#ctor(System.String,Square.Models.Payment)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdatePaymentRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="payment">payment.</param>
        </member>
        <member name="P:Square.Models.UpdatePaymentRequest.Payment">
            <summary>
            Represents a payment processed by the Square API.
            </summary>
        </member>
        <member name="P:Square.Models.UpdatePaymentRequest.IdempotencyKey">
            <summary>
            A unique string that identifies this `UpdatePayment` request. Keys can be any valid string
            but must be unique for every `UpdatePayment` request.
            The maximum is 45 characters.
            For more information, see [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency).
            </summary>
        </member>
        <member name="M:Square.Models.UpdatePaymentRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdatePaymentRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdatePaymentRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdatePaymentRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdatePaymentRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdatePaymentRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdatePaymentRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdatePaymentRequest.Builder.Payment(Square.Models.Payment)">
            <summary>
            Payment.
            </summary>
            <param name="payment"> payment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdatePaymentRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdatePaymentRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdatePaymentResponse">
            <summary>
            UpdatePaymentResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdatePaymentResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Payment)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdatePaymentResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="payment">payment.</param>
        </member>
        <member name="P:Square.Models.UpdatePaymentResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdatePaymentResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.UpdatePaymentResponse.Payment">
            <summary>
            Represents a payment processed by the Square API.
            </summary>
        </member>
        <member name="M:Square.Models.UpdatePaymentResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdatePaymentResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdatePaymentResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdatePaymentResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdatePaymentResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdatePaymentResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdatePaymentResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdatePaymentResponse.Builder.Payment(Square.Models.Payment)">
            <summary>
            Payment.
            </summary>
            <param name="payment"> payment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdatePaymentResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdatePaymentResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateShiftRequest">
            <summary>
            UpdateShiftRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateShiftRequest.#ctor(Square.Models.Shift)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateShiftRequest"/> class.
            </summary>
            <param name="shift">shift.</param>
        </member>
        <member name="P:Square.Models.UpdateShiftRequest.Shift">
            <summary>
            A record of the hourly rate, start, and end times for a single work shift
            for an employee. May include a record of the start and end times for breaks
            taken during the shift.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateShiftRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateShiftRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateShiftRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateShiftRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateShiftRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateShiftRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateShiftRequest.Builder.Shift(Square.Models.Shift)">
            <summary>
            Shift.
            </summary>
            <param name="shift"> shift. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateShiftRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateShiftRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateShiftResponse">
            <summary>
            UpdateShiftResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateShiftResponse.#ctor(Square.Models.Shift,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateShiftResponse"/> class.
            </summary>
            <param name="shift">shift.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.UpdateShiftResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateShiftResponse.Shift">
            <summary>
            A record of the hourly rate, start, and end times for a single work shift
            for an employee. May include a record of the start and end times for breaks
            taken during the shift.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateShiftResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateShiftResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateShiftResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateShiftResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateShiftResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateShiftResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateShiftResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateShiftResponse.Builder.Shift(Square.Models.Shift)">
            <summary>
            Shift.
            </summary>
            <param name="shift"> shift. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateShiftResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateShiftResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateShiftResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateSubscriptionRequest">
            <summary>
            UpdateSubscriptionRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionRequest.#ctor(Square.Models.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateSubscriptionRequest"/> class.
            </summary>
            <param name="subscription">subscription.</param>
        </member>
        <member name="P:Square.Models.UpdateSubscriptionRequest.Subscription">
            <summary>
            Represents a customer subscription to a subscription plan.
            For an overview of the `Subscription` type, see
            [Subscription object](https://developer.squareup.com/docs/subscriptions-api/overview#subscription-object-overview).
            </summary>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateSubscriptionRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionRequest.Builder.Subscription(Square.Models.Subscription)">
            <summary>
            Subscription.
            </summary>
            <param name="subscription"> subscription. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateSubscriptionRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateSubscriptionResponse">
            <summary>
            UpdateSubscriptionResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateSubscriptionResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="subscription">subscription.</param>
        </member>
        <member name="P:Square.Models.UpdateSubscriptionResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateSubscriptionResponse.Errors">
            <summary>
            Information about errors encountered during the request.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateSubscriptionResponse.Subscription">
            <summary>
            Represents a customer subscription to a subscription plan.
            For an overview of the `Subscription` type, see
            [Subscription object](https://developer.squareup.com/docs/subscriptions-api/overview#subscription-object-overview).
            </summary>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateSubscriptionResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionResponse.Builder.Subscription(Square.Models.Subscription)">
            <summary>
            Subscription.
            </summary>
            <param name="subscription"> subscription. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateSubscriptionResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateSubscriptionResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateTeamMemberRequest">
            <summary>
            UpdateTeamMemberRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberRequest.#ctor(Square.Models.TeamMember)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateTeamMemberRequest"/> class.
            </summary>
            <param name="teamMember">team_member.</param>
        </member>
        <member name="P:Square.Models.UpdateTeamMemberRequest.TeamMember">
            <summary>
            A record representing an individual team member for a business.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateTeamMemberRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberRequest.Builder.TeamMember(Square.Models.TeamMember)">
            <summary>
            TeamMember.
            </summary>
            <param name="teamMember"> teamMember. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateTeamMemberRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateTeamMemberResponse">
            <summary>
            UpdateTeamMemberResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberResponse.#ctor(Square.Models.TeamMember,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateTeamMemberResponse"/> class.
            </summary>
            <param name="teamMember">team_member.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.UpdateTeamMemberResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateTeamMemberResponse.TeamMember">
            <summary>
            A record representing an individual team member for a business.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateTeamMemberResponse.Errors">
            <summary>
            The errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateTeamMemberResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberResponse.Builder.TeamMember(Square.Models.TeamMember)">
            <summary>
            TeamMember.
            </summary>
            <param name="teamMember"> teamMember. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateTeamMemberResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateTeamMemberResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateWageSettingRequest">
            <summary>
            UpdateWageSettingRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWageSettingRequest.#ctor(Square.Models.WageSetting)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateWageSettingRequest"/> class.
            </summary>
            <param name="wageSetting">wage_setting.</param>
        </member>
        <member name="P:Square.Models.UpdateWageSettingRequest.WageSetting">
            <summary>
            An object representing a team member's wage information.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWageSettingRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWageSettingRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWageSettingRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWageSettingRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateWageSettingRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateWageSettingRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWageSettingRequest.Builder.WageSetting(Square.Models.WageSetting)">
            <summary>
            WageSetting.
            </summary>
            <param name="wageSetting"> wageSetting. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateWageSettingRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateWageSettingRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateWageSettingResponse">
            <summary>
            UpdateWageSettingResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWageSettingResponse.#ctor(Square.Models.WageSetting,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateWageSettingResponse"/> class.
            </summary>
            <param name="wageSetting">wage_setting.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.UpdateWageSettingResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateWageSettingResponse.WageSetting">
            <summary>
            An object representing a team member's wage information.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateWageSettingResponse.Errors">
            <summary>
            The errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWageSettingResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWageSettingResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWageSettingResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWageSettingResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateWageSettingResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateWageSettingResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWageSettingResponse.Builder.WageSetting(Square.Models.WageSetting)">
            <summary>
            WageSetting.
            </summary>
            <param name="wageSetting"> wageSetting. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateWageSettingResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateWageSettingResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateWageSettingResponse. </returns>
        </member>
        <member name="T:Square.Models.UpdateWorkweekConfigRequest">
            <summary>
            UpdateWorkweekConfigRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigRequest.#ctor(Square.Models.WorkweekConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateWorkweekConfigRequest"/> class.
            </summary>
            <param name="workweekConfig">workweek_config.</param>
        </member>
        <member name="P:Square.Models.UpdateWorkweekConfigRequest.WorkweekConfig">
            <summary>
            Sets the Day of the week and hour of the day that a business starts a
            work week. Used for the calculation of overtime pay.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateWorkweekConfigRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigRequest.Builder.WorkweekConfig(Square.Models.WorkweekConfig)">
            <summary>
            WorkweekConfig.
            </summary>
            <param name="workweekConfig"> workweekConfig. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateWorkweekConfigRequest. </returns>
        </member>
        <member name="T:Square.Models.UpdateWorkweekConfigResponse">
            <summary>
            UpdateWorkweekConfigResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigResponse.#ctor(Square.Models.WorkweekConfig,System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpdateWorkweekConfigResponse"/> class.
            </summary>
            <param name="workweekConfig">workweek_config.</param>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.UpdateWorkweekConfigResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateWorkweekConfigResponse.WorkweekConfig">
            <summary>
            Sets the Day of the week and hour of the day that a business starts a
            work week. Used for the calculation of overtime pay.
            </summary>
        </member>
        <member name="P:Square.Models.UpdateWorkweekConfigResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpdateWorkweekConfigResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigResponse.Builder.WorkweekConfig(Square.Models.WorkweekConfig)">
            <summary>
            WorkweekConfig.
            </summary>
            <param name="workweekConfig"> workweekConfig. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpdateWorkweekConfigResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpdateWorkweekConfigResponse. </returns>
        </member>
        <member name="T:Square.Models.UpsertCatalogObjectRequest">
            <summary>
            UpsertCatalogObjectRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectRequest.#ctor(System.String,Square.Models.CatalogObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpsertCatalogObjectRequest"/> class.
            </summary>
            <param name="idempotencyKey">idempotency_key.</param>
            <param name="mObject">object.</param>
        </member>
        <member name="P:Square.Models.UpsertCatalogObjectRequest.IdempotencyKey">
            <summary>
            A value you specify that uniquely identifies this
            request among all your requests. A common way to create
            a valid idempotency key is to use a Universally unique
            identifier (UUID).
            If you're unsure whether a particular request was successful,
            you can reattempt it with the same idempotency key without
            worrying about creating duplicate objects.
            See [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
            </summary>
        </member>
        <member name="P:Square.Models.UpsertCatalogObjectRequest.MObject">
            <summary>
            The wrapper object for the Catalog entries of a given object type.
            The type of a particular `CatalogObject` is determined by the value of the
            `type` attribute and only the corresponding data attribute can be set on the `CatalogObject` instance.
            For example, the following list shows some instances of `CatalogObject` of a given `type` and
            their corresponding data attribute that can be set:
            - For a `CatalogObject` of the `ITEM` type, set the `item_data` attribute to yield the `CatalogItem` object.
            - For a `CatalogObject` of the `ITEM_VARIATION` type, set the `item_variation_data` attribute to yield the `CatalogItemVariation` object.
            - For a `CatalogObject` of the `MODIFIER` type, set the `modifier_data` attribute to yield the `CatalogModifier` object.
            - For a `CatalogObject` of the `MODIFIER_LIST` type, set the `modifier_list_data` attribute to yield the `CatalogModifierList` object.
            - For a `CatalogObject` of the `CATEGORY` type, set the `category_data` attribute to yield the `CatalogCategory` object.
            - For a `CatalogObject` of the `DISCOUNT` type, set the `discount_data` attribute to yield the `CatalogDiscount` object.
            - For a `CatalogObject` of the `TAX` type, set the `tax_data` attribute to yield the `CatalogTax` object.
            - For a `CatalogObject` of the `IMAGE` type, set the `image_data` attribute to yield the `CatalogImageData`  object.
            - For a `CatalogObject` of the `QUICK_AMOUNTS_SETTINGS` type, set the `quick_amounts_settings_data` attribute to yield the `CatalogQuickAmountsSettings` object.
            - For a `CatalogObject` of the `PRICING_RULE` type, set the `pricing_rule_data` attribute to yield the `CatalogPricingRule` object.
            - For a `CatalogObject` of the `TIME_PERIOD` type, set the `time_period_data` attribute to yield the `CatalogTimePeriod` object.
            - For a `CatalogObject` of the `PRODUCT_SET` type, set the `product_set_data` attribute to yield the `CatalogProductSet`  object.
            - For a `CatalogObject` of the `SUBSCRIPTION_PLAN` type, set the `subscription_plan_data` attribute to yield the `CatalogSubscriptionPlan` object.
            For a more detailed discussion of the Catalog data model, please see the
            [Design a Catalog](https://developer.squareup.com/docs/catalog-api/design-a-catalog) guide.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpsertCatalogObjectRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectRequest.Builder.IdempotencyKey(System.String)">
            <summary>
            IdempotencyKey.
            </summary>
            <param name="idempotencyKey"> idempotencyKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectRequest.Builder.MObject(Square.Models.CatalogObject)">
            <summary>
            MObject.
            </summary>
            <param name="mObject"> mObject. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpsertCatalogObjectRequest. </returns>
        </member>
        <member name="T:Square.Models.UpsertCatalogObjectResponse">
            <summary>
            UpsertCatalogObjectResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.CatalogObject,System.Collections.Generic.IList{Square.Models.CatalogIdMapping})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpsertCatalogObjectResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="catalogObject">catalog_object.</param>
            <param name="idMappings">id_mappings.</param>
        </member>
        <member name="P:Square.Models.UpsertCatalogObjectResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpsertCatalogObjectResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.UpsertCatalogObjectResponse.CatalogObject">
            <summary>
            The wrapper object for the Catalog entries of a given object type.
            The type of a particular `CatalogObject` is determined by the value of the
            `type` attribute and only the corresponding data attribute can be set on the `CatalogObject` instance.
            For example, the following list shows some instances of `CatalogObject` of a given `type` and
            their corresponding data attribute that can be set:
            - For a `CatalogObject` of the `ITEM` type, set the `item_data` attribute to yield the `CatalogItem` object.
            - For a `CatalogObject` of the `ITEM_VARIATION` type, set the `item_variation_data` attribute to yield the `CatalogItemVariation` object.
            - For a `CatalogObject` of the `MODIFIER` type, set the `modifier_data` attribute to yield the `CatalogModifier` object.
            - For a `CatalogObject` of the `MODIFIER_LIST` type, set the `modifier_list_data` attribute to yield the `CatalogModifierList` object.
            - For a `CatalogObject` of the `CATEGORY` type, set the `category_data` attribute to yield the `CatalogCategory` object.
            - For a `CatalogObject` of the `DISCOUNT` type, set the `discount_data` attribute to yield the `CatalogDiscount` object.
            - For a `CatalogObject` of the `TAX` type, set the `tax_data` attribute to yield the `CatalogTax` object.
            - For a `CatalogObject` of the `IMAGE` type, set the `image_data` attribute to yield the `CatalogImageData`  object.
            - For a `CatalogObject` of the `QUICK_AMOUNTS_SETTINGS` type, set the `quick_amounts_settings_data` attribute to yield the `CatalogQuickAmountsSettings` object.
            - For a `CatalogObject` of the `PRICING_RULE` type, set the `pricing_rule_data` attribute to yield the `CatalogPricingRule` object.
            - For a `CatalogObject` of the `TIME_PERIOD` type, set the `time_period_data` attribute to yield the `CatalogTimePeriod` object.
            - For a `CatalogObject` of the `PRODUCT_SET` type, set the `product_set_data` attribute to yield the `CatalogProductSet`  object.
            - For a `CatalogObject` of the `SUBSCRIPTION_PLAN` type, set the `subscription_plan_data` attribute to yield the `CatalogSubscriptionPlan` object.
            For a more detailed discussion of the Catalog data model, please see the
            [Design a Catalog](https://developer.squareup.com/docs/catalog-api/design-a-catalog) guide.
            </summary>
        </member>
        <member name="P:Square.Models.UpsertCatalogObjectResponse.IdMappings">
            <summary>
            The mapping between client and server IDs for this upsert.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpsertCatalogObjectResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectResponse.Builder.CatalogObject(Square.Models.CatalogObject)">
            <summary>
            CatalogObject.
            </summary>
            <param name="catalogObject"> catalogObject. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectResponse.Builder.IdMappings(System.Collections.Generic.IList{Square.Models.CatalogIdMapping})">
            <summary>
            IdMappings.
            </summary>
            <param name="idMappings"> idMappings. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpsertCatalogObjectResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpsertCatalogObjectResponse. </returns>
        </member>
        <member name="T:Square.Models.UpsertSnippetRequest">
            <summary>
            UpsertSnippetRequest.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertSnippetRequest.#ctor(Square.Models.Snippet)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpsertSnippetRequest"/> class.
            </summary>
            <param name="snippet">snippet.</param>
        </member>
        <member name="P:Square.Models.UpsertSnippetRequest.Snippet">
            <summary>
            Represents the snippet that is added to a Square Online site. The snippet code is injected into the `head` element of all pages on the site, except for checkout pages.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertSnippetRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertSnippetRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertSnippetRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertSnippetRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpsertSnippetRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpsertSnippetRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertSnippetRequest.Builder.Snippet(Square.Models.Snippet)">
            <summary>
            Snippet.
            </summary>
            <param name="snippet"> snippet. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpsertSnippetRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpsertSnippetRequest. </returns>
        </member>
        <member name="T:Square.Models.UpsertSnippetResponse">
            <summary>
            UpsertSnippetResponse.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertSnippetResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error},Square.Models.Snippet)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.UpsertSnippetResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="snippet">snippet.</param>
        </member>
        <member name="P:Square.Models.UpsertSnippetResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.UpsertSnippetResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.UpsertSnippetResponse.Snippet">
            <summary>
            Represents the snippet that is added to a Square Online site. The snippet code is injected into the `head` element of all pages on the site, except for checkout pages.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertSnippetResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertSnippetResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertSnippetResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.UpsertSnippetResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.UpsertSnippetResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.UpsertSnippetResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.UpsertSnippetResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpsertSnippetResponse.Builder.Snippet(Square.Models.Snippet)">
            <summary>
            Snippet.
            </summary>
            <param name="snippet"> snippet. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.UpsertSnippetResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> UpsertSnippetResponse. </returns>
        </member>
        <member name="T:Square.Models.V1CreateEmployeeRoleRequest">
            <summary>
            V1CreateEmployeeRoleRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1CreateEmployeeRoleRequest.#ctor(Square.Models.V1EmployeeRole)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1CreateEmployeeRoleRequest"/> class.
            </summary>
            <param name="employeeRole">employee_role.</param>
        </member>
        <member name="P:Square.Models.V1CreateEmployeeRoleRequest.EmployeeRole">
            <summary>
            V1EmployeeRole
            </summary>
        </member>
        <member name="M:Square.Models.V1CreateEmployeeRoleRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1CreateEmployeeRoleRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1CreateEmployeeRoleRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1CreateEmployeeRoleRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1CreateEmployeeRoleRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1CreateEmployeeRoleRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1CreateEmployeeRoleRequest.Builder.EmployeeRole(Square.Models.V1EmployeeRole)">
            <summary>
            EmployeeRole.
            </summary>
            <param name="employeeRole"> employeeRole. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1CreateEmployeeRoleRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1CreateEmployeeRoleRequest. </returns>
        </member>
        <member name="T:Square.Models.V1CreateRefundRequest">
            <summary>
            V1CreateRefundRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.#ctor(System.String,System.String,System.String,Square.Models.V1Money,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1CreateRefundRequest"/> class.
            </summary>
            <param name="paymentId">payment_id.</param>
            <param name="type">type.</param>
            <param name="reason">reason.</param>
            <param name="refundedMoney">refunded_money.</param>
            <param name="requestIdempotenceKey">request_idempotence_key.</param>
        </member>
        <member name="P:Square.Models.V1CreateRefundRequest.PaymentId">
            <summary>
            The ID of the payment to refund. If you are creating a `PARTIAL`
            refund for a split tender payment, instead provide the id of the
            particular tender you want to refund.
            </summary>
        </member>
        <member name="P:Square.Models.V1CreateRefundRequest.Type">
            <summary>
            Gets or sets Type.
            </summary>
        </member>
        <member name="P:Square.Models.V1CreateRefundRequest.Reason">
            <summary>
            The reason for the refund.
            </summary>
        </member>
        <member name="P:Square.Models.V1CreateRefundRequest.RefundedMoney">
            <summary>
            Gets or sets RefundedMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1CreateRefundRequest.RequestIdempotenceKey">
            <summary>
            An optional key to ensure idempotence if you issue the same PARTIAL refund request more than once.
            </summary>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1CreateRefundRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.Builder.PaymentId(System.String)">
            <summary>
            PaymentId.
            </summary>
            <param name="paymentId"> paymentId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.Builder.Reason(System.String)">
            <summary>
            Reason.
            </summary>
            <param name="reason"> reason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.Builder.RefundedMoney(Square.Models.V1Money)">
            <summary>
            RefundedMoney.
            </summary>
            <param name="refundedMoney"> refundedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.Builder.RequestIdempotenceKey(System.String)">
            <summary>
            RequestIdempotenceKey.
            </summary>
            <param name="requestIdempotenceKey"> requestIdempotenceKey. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1CreateRefundRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1CreateRefundRequest. </returns>
        </member>
        <member name="T:Square.Models.V1Employee">
            <summary>
            V1Employee.
            </summary>
        </member>
        <member name="M:Square.Models.V1Employee.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1Employee"/> class.
            </summary>
            <param name="firstName">first_name.</param>
            <param name="lastName">last_name.</param>
            <param name="id">id.</param>
            <param name="roleIds">role_ids.</param>
            <param name="authorizedLocationIds">authorized_location_ids.</param>
            <param name="email">email.</param>
            <param name="status">status.</param>
            <param name="externalId">external_id.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.V1Employee.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.V1Employee.Id">
            <summary>
            The employee's unique ID.
            </summary>
        </member>
        <member name="P:Square.Models.V1Employee.FirstName">
            <summary>
            The employee's first name.
            </summary>
        </member>
        <member name="P:Square.Models.V1Employee.LastName">
            <summary>
            The employee's last name.
            </summary>
        </member>
        <member name="P:Square.Models.V1Employee.RoleIds">
            <summary>
            The ids of the employee's associated roles. Currently, you can specify only one or zero roles per employee.
            </summary>
        </member>
        <member name="P:Square.Models.V1Employee.AuthorizedLocationIds">
            <summary>
            The IDs of the locations the employee is allowed to clock in at.
            </summary>
        </member>
        <member name="P:Square.Models.V1Employee.Email">
            <summary>
            The employee's email address.
            </summary>
        </member>
        <member name="P:Square.Models.V1Employee.Status">
            <summary>
            Gets or sets Status.
            </summary>
        </member>
        <member name="P:Square.Models.V1Employee.ExternalId">
            <summary>
            An ID the merchant can set to associate the employee with an entity in another system.
            </summary>
        </member>
        <member name="P:Square.Models.V1Employee.CreatedAt">
            <summary>
            The time when the employee entity was created, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1Employee.UpdatedAt">
            <summary>
            The time when the employee entity was most recently updated, in ISO 8601 format.
            </summary>
        </member>
        <member name="M:Square.Models.V1Employee.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Employee.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Employee.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Employee.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1Employee.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1Employee.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.FirstName(System.String)">
            <summary>
            FirstName.
            </summary>
            <param name="firstName"> firstName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.LastName(System.String)">
            <summary>
            LastName.
            </summary>
            <param name="lastName"> lastName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.RoleIds(System.Collections.Generic.IList{System.String})">
            <summary>
            RoleIds.
            </summary>
            <param name="roleIds"> roleIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.AuthorizedLocationIds(System.Collections.Generic.IList{System.String})">
            <summary>
            AuthorizedLocationIds.
            </summary>
            <param name="authorizedLocationIds"> authorizedLocationIds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.Email(System.String)">
            <summary>
            Email.
            </summary>
            <param name="email"> email. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.ExternalId(System.String)">
            <summary>
            ExternalId.
            </summary>
            <param name="externalId"> externalId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Employee.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1Employee. </returns>
        </member>
        <member name="T:Square.Models.V1EmployeeRole">
            <summary>
            V1EmployeeRole.
            </summary>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1EmployeeRole"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="permissions">permissions.</param>
            <param name="id">id.</param>
            <param name="isOwner">is_owner.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.V1EmployeeRole.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.V1EmployeeRole.Id">
            <summary>
            The role's unique ID, Can only be set by Square.
            </summary>
        </member>
        <member name="P:Square.Models.V1EmployeeRole.Name">
            <summary>
            The role's merchant-defined name.
            </summary>
        </member>
        <member name="P:Square.Models.V1EmployeeRole.Permissions">
            <summary>
            The role's permissions.
            See [V1EmployeeRolePermissions](#type-v1employeerolepermissions) for possible values
            </summary>
        </member>
        <member name="P:Square.Models.V1EmployeeRole.IsOwner">
            <summary>
            If true, employees with this role have all permissions, regardless of the values indicated in permissions.
            </summary>
        </member>
        <member name="P:Square.Models.V1EmployeeRole.CreatedAt">
            <summary>
            The time when the employee entity was created, in ISO 8601 format. Is set by Square when the Role is created.
            </summary>
        </member>
        <member name="P:Square.Models.V1EmployeeRole.UpdatedAt">
            <summary>
            The time when the employee entity was most recently updated, in ISO 8601 format. Is set by Square when the Role updated.
            </summary>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1EmployeeRole.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.Builder.Permissions(System.Collections.Generic.IList{System.String})">
            <summary>
            Permissions.
            </summary>
            <param name="permissions"> permissions. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.Builder.IsOwner(System.Nullable{System.Boolean})">
            <summary>
            IsOwner.
            </summary>
            <param name="isOwner"> isOwner. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1EmployeeRole.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1EmployeeRole. </returns>
        </member>
        <member name="T:Square.Models.V1ListEmployeeRolesRequest">
            <summary>
            V1ListEmployeeRolesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesRequest.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListEmployeeRolesRequest"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="limit">limit.</param>
            <param name="batchToken">batch_token.</param>
        </member>
        <member name="P:Square.Models.V1ListEmployeeRolesRequest.Order">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListEmployeeRolesRequest.Limit">
            <summary>
            The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListEmployeeRolesRequest.BatchToken">
            <summary>
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListEmployeeRolesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesRequest.Builder.Order(System.String)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesRequest.Builder.BatchToken(System.String)">
            <summary>
            BatchToken.
            </summary>
            <param name="batchToken"> batchToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListEmployeeRolesRequest. </returns>
        </member>
        <member name="T:Square.Models.V1ListEmployeeRolesResponse">
            <summary>
            V1ListEmployeeRolesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesResponse.#ctor(System.Collections.Generic.IList{Square.Models.V1EmployeeRole})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListEmployeeRolesResponse"/> class.
            </summary>
            <param name="items">items.</param>
        </member>
        <member name="P:Square.Models.V1ListEmployeeRolesResponse.Items">
            <summary>
            Gets or sets Items.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListEmployeeRolesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesResponse.Builder.Items(System.Collections.Generic.IList{Square.Models.V1EmployeeRole})">
            <summary>
            Items.
            </summary>
            <param name="items"> items. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeeRolesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListEmployeeRolesResponse. </returns>
        </member>
        <member name="T:Square.Models.V1ListEmployeesRequest">
            <summary>
            V1ListEmployeesRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListEmployeesRequest"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="beginUpdatedAt">begin_updated_at.</param>
            <param name="endUpdatedAt">end_updated_at.</param>
            <param name="beginCreatedAt">begin_created_at.</param>
            <param name="endCreatedAt">end_created_at.</param>
            <param name="status">status.</param>
            <param name="externalId">external_id.</param>
            <param name="limit">limit.</param>
            <param name="batchToken">batch_token.</param>
        </member>
        <member name="P:Square.Models.V1ListEmployeesRequest.Order">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListEmployeesRequest.BeginUpdatedAt">
            <summary>
            If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format
            </summary>
        </member>
        <member name="P:Square.Models.V1ListEmployeesRequest.EndUpdatedAt">
            <summary>
            If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListEmployeesRequest.BeginCreatedAt">
            <summary>
            If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListEmployeesRequest.EndCreatedAt">
            <summary>
            If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListEmployeesRequest.Status">
            <summary>
            Gets or sets Status.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListEmployeesRequest.ExternalId">
            <summary>
            If provided, the endpoint returns only employee entities with the specified external_id.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListEmployeesRequest.Limit">
            <summary>
            The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListEmployeesRequest.BatchToken">
            <summary>
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListEmployeesRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Builder.Order(System.String)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Builder.BeginUpdatedAt(System.String)">
            <summary>
            BeginUpdatedAt.
            </summary>
            <param name="beginUpdatedAt"> beginUpdatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Builder.EndUpdatedAt(System.String)">
            <summary>
            EndUpdatedAt.
            </summary>
            <param name="endUpdatedAt"> endUpdatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Builder.BeginCreatedAt(System.String)">
            <summary>
            BeginCreatedAt.
            </summary>
            <param name="beginCreatedAt"> beginCreatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Builder.EndCreatedAt(System.String)">
            <summary>
            EndCreatedAt.
            </summary>
            <param name="endCreatedAt"> endCreatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Builder.ExternalId(System.String)">
            <summary>
            ExternalId.
            </summary>
            <param name="externalId"> externalId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Builder.BatchToken(System.String)">
            <summary>
            BatchToken.
            </summary>
            <param name="batchToken"> batchToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeesRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListEmployeesRequest. </returns>
        </member>
        <member name="T:Square.Models.V1ListEmployeesResponse">
            <summary>
            V1ListEmployeesResponse.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeesResponse.#ctor(System.Collections.Generic.IList{Square.Models.V1Employee})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListEmployeesResponse"/> class.
            </summary>
            <param name="items">items.</param>
        </member>
        <member name="P:Square.Models.V1ListEmployeesResponse.Items">
            <summary>
            Gets or sets Items.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeesResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeesResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeesResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListEmployeesResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListEmployeesResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListEmployeesResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListEmployeesResponse.Builder.Items(System.Collections.Generic.IList{Square.Models.V1Employee})">
            <summary>
            Items.
            </summary>
            <param name="items"> items. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListEmployeesResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListEmployeesResponse. </returns>
        </member>
        <member name="T:Square.Models.V1ListOrdersRequest">
            <summary>
            V1ListOrdersRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListOrdersRequest.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListOrdersRequest"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="limit">limit.</param>
            <param name="batchToken">batch_token.</param>
        </member>
        <member name="P:Square.Models.V1ListOrdersRequest.Order">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListOrdersRequest.Limit">
            <summary>
            The maximum number of payments to return in a single response. This value cannot exceed 200.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListOrdersRequest.BatchToken">
            <summary>
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListOrdersRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListOrdersRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListOrdersRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListOrdersRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListOrdersRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListOrdersRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListOrdersRequest.Builder.Order(System.String)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListOrdersRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListOrdersRequest.Builder.BatchToken(System.String)">
            <summary>
            BatchToken.
            </summary>
            <param name="batchToken"> batchToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListOrdersRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListOrdersRequest. </returns>
        </member>
        <member name="T:Square.Models.V1ListOrdersResponse">
            <summary>
            V1ListOrdersResponse.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListOrdersResponse.#ctor(System.Collections.Generic.IList{Square.Models.V1Order})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListOrdersResponse"/> class.
            </summary>
            <param name="items">items.</param>
        </member>
        <member name="P:Square.Models.V1ListOrdersResponse.Items">
            <summary>
            Gets or sets Items.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListOrdersResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListOrdersResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListOrdersResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListOrdersResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListOrdersResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListOrdersResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListOrdersResponse.Builder.Items(System.Collections.Generic.IList{Square.Models.V1Order})">
            <summary>
            Items.
            </summary>
            <param name="items"> items. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListOrdersResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListOrdersResponse. </returns>
        </member>
        <member name="T:Square.Models.V1ListPaymentsRequest">
            <summary>
            V1ListPaymentsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListPaymentsRequest"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="beginTime">begin_time.</param>
            <param name="endTime">end_time.</param>
            <param name="limit">limit.</param>
            <param name="batchToken">batch_token.</param>
            <param name="includePartial">include_partial.</param>
        </member>
        <member name="P:Square.Models.V1ListPaymentsRequest.Order">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListPaymentsRequest.BeginTime">
            <summary>
            The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListPaymentsRequest.EndTime">
            <summary>
            The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListPaymentsRequest.Limit">
            <summary>
            The maximum number of payments to return in a single response. This value cannot exceed 200.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListPaymentsRequest.BatchToken">
            <summary>
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListPaymentsRequest.IncludePartial">
            <summary>
            Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListPaymentsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.Builder.Order(System.String)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.Builder.BeginTime(System.String)">
            <summary>
            BeginTime.
            </summary>
            <param name="beginTime"> beginTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.Builder.EndTime(System.String)">
            <summary>
            EndTime.
            </summary>
            <param name="endTime"> endTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.Builder.BatchToken(System.String)">
            <summary>
            BatchToken.
            </summary>
            <param name="batchToken"> batchToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.Builder.IncludePartial(System.Nullable{System.Boolean})">
            <summary>
            IncludePartial.
            </summary>
            <param name="includePartial"> includePartial. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListPaymentsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListPaymentsRequest. </returns>
        </member>
        <member name="T:Square.Models.V1ListPaymentsResponse">
            <summary>
            V1ListPaymentsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListPaymentsResponse.#ctor(System.Collections.Generic.IList{Square.Models.V1Payment})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListPaymentsResponse"/> class.
            </summary>
            <param name="items">items.</param>
        </member>
        <member name="P:Square.Models.V1ListPaymentsResponse.Items">
            <summary>
            Gets or sets Items.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListPaymentsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListPaymentsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListPaymentsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListPaymentsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListPaymentsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListPaymentsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListPaymentsResponse.Builder.Items(System.Collections.Generic.IList{Square.Models.V1Payment})">
            <summary>
            Items.
            </summary>
            <param name="items"> items. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListPaymentsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListPaymentsResponse. </returns>
        </member>
        <member name="T:Square.Models.V1ListRefundsRequest">
            <summary>
            V1ListRefundsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListRefundsRequest"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="beginTime">begin_time.</param>
            <param name="endTime">end_time.</param>
            <param name="limit">limit.</param>
            <param name="batchToken">batch_token.</param>
        </member>
        <member name="P:Square.Models.V1ListRefundsRequest.Order">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListRefundsRequest.BeginTime">
            <summary>
            The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListRefundsRequest.EndTime">
            <summary>
            The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListRefundsRequest.Limit">
            <summary>
            The approximate number of refunds to return in a single response. Default: 100. Max: 200. Response may contain more results than the prescribed limit when refunds are made simultaneously to multiple tenders in a payment or when refunds are generated in an exchange to account for the value of returned goods.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListRefundsRequest.BatchToken">
            <summary>
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListRefundsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.Builder.Order(System.String)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.Builder.BeginTime(System.String)">
            <summary>
            BeginTime.
            </summary>
            <param name="beginTime"> beginTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.Builder.EndTime(System.String)">
            <summary>
            EndTime.
            </summary>
            <param name="endTime"> endTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.Builder.BatchToken(System.String)">
            <summary>
            BatchToken.
            </summary>
            <param name="batchToken"> batchToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListRefundsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListRefundsRequest. </returns>
        </member>
        <member name="T:Square.Models.V1ListRefundsResponse">
            <summary>
            V1ListRefundsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListRefundsResponse.#ctor(System.Collections.Generic.IList{Square.Models.V1Refund})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListRefundsResponse"/> class.
            </summary>
            <param name="items">items.</param>
        </member>
        <member name="P:Square.Models.V1ListRefundsResponse.Items">
            <summary>
            Gets or sets Items.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListRefundsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListRefundsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListRefundsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListRefundsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListRefundsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListRefundsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListRefundsResponse.Builder.Items(System.Collections.Generic.IList{Square.Models.V1Refund})">
            <summary>
            Items.
            </summary>
            <param name="items"> items. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListRefundsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListRefundsResponse. </returns>
        </member>
        <member name="T:Square.Models.V1ListSettlementsRequest">
            <summary>
            V1ListSettlementsRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListSettlementsRequest"/> class.
            </summary>
            <param name="order">order.</param>
            <param name="beginTime">begin_time.</param>
            <param name="endTime">end_time.</param>
            <param name="limit">limit.</param>
            <param name="status">status.</param>
            <param name="batchToken">batch_token.</param>
        </member>
        <member name="P:Square.Models.V1ListSettlementsRequest.Order">
            <summary>
            The order (e.g., chronological or alphabetical) in which results from a request are returned.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListSettlementsRequest.BeginTime">
            <summary>
            The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListSettlementsRequest.EndTime">
            <summary>
            The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListSettlementsRequest.Limit">
            <summary>
            The maximum number of settlements to return in a single response. This value cannot exceed 200.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListSettlementsRequest.Status">
            <summary>
            Gets or sets Status.
            </summary>
        </member>
        <member name="P:Square.Models.V1ListSettlementsRequest.BatchToken">
            <summary>
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListSettlementsRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.Builder.Order(System.String)">
            <summary>
            Order.
            </summary>
            <param name="order"> order. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.Builder.BeginTime(System.String)">
            <summary>
            BeginTime.
            </summary>
            <param name="beginTime"> beginTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.Builder.EndTime(System.String)">
            <summary>
            EndTime.
            </summary>
            <param name="endTime"> endTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.Builder.Limit(System.Nullable{System.Int32})">
            <summary>
            Limit.
            </summary>
            <param name="limit"> limit. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.Builder.BatchToken(System.String)">
            <summary>
            BatchToken.
            </summary>
            <param name="batchToken"> batchToken. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListSettlementsRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListSettlementsRequest. </returns>
        </member>
        <member name="T:Square.Models.V1ListSettlementsResponse">
            <summary>
            V1ListSettlementsResponse.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListSettlementsResponse.#ctor(System.Collections.Generic.IList{Square.Models.V1Settlement})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1ListSettlementsResponse"/> class.
            </summary>
            <param name="items">items.</param>
        </member>
        <member name="P:Square.Models.V1ListSettlementsResponse.Items">
            <summary>
            Gets or sets Items.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListSettlementsResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListSettlementsResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListSettlementsResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1ListSettlementsResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1ListSettlementsResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1ListSettlementsResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1ListSettlementsResponse.Builder.Items(System.Collections.Generic.IList{Square.Models.V1Settlement})">
            <summary>
            Items.
            </summary>
            <param name="items"> items. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1ListSettlementsResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1ListSettlementsResponse. </returns>
        </member>
        <member name="T:Square.Models.V1Money">
            <summary>
            V1Money.
            </summary>
        </member>
        <member name="M:Square.Models.V1Money.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1Money"/> class.
            </summary>
            <param name="amount">amount.</param>
            <param name="currencyCode">currency_code.</param>
        </member>
        <member name="P:Square.Models.V1Money.Amount">
            <summary>
            Amount in the lowest denominated value of this Currency. E.g. in USD
            these are cents, in JPY they are Yen (which do not have a 'cent' concept).
            </summary>
        </member>
        <member name="P:Square.Models.V1Money.CurrencyCode">
            <summary>
            Indicates the associated currency for an amount of money. Values correspond
            to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
            </summary>
        </member>
        <member name="M:Square.Models.V1Money.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Money.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Money.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Money.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1Money.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1Money.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1Money.Builder.Amount(System.Nullable{System.Int32})">
            <summary>
            Amount.
            </summary>
            <param name="amount"> amount. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Money.Builder.CurrencyCode(System.String)">
            <summary>
            CurrencyCode.
            </summary>
            <param name="currencyCode"> currencyCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Money.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1Money. </returns>
        </member>
        <member name="T:Square.Models.V1Order">
            <summary>
            V1Order.
            </summary>
        </member>
        <member name="M:Square.Models.V1Order.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.String,System.String,System.String,System.String,System.String,Square.Models.Address,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.V1Tender,System.Collections.Generic.IList{Square.Models.V1OrderHistoryEntry},System.String,System.String,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1Order"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="id">id.</param>
            <param name="buyerEmail">buyer_email.</param>
            <param name="recipientName">recipient_name.</param>
            <param name="recipientPhoneNumber">recipient_phone_number.</param>
            <param name="state">state.</param>
            <param name="shippingAddress">shipping_address.</param>
            <param name="subtotalMoney">subtotal_money.</param>
            <param name="totalShippingMoney">total_shipping_money.</param>
            <param name="totalTaxMoney">total_tax_money.</param>
            <param name="totalPriceMoney">total_price_money.</param>
            <param name="totalDiscountMoney">total_discount_money.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
            <param name="expiresAt">expires_at.</param>
            <param name="paymentId">payment_id.</param>
            <param name="buyerNote">buyer_note.</param>
            <param name="completedNote">completed_note.</param>
            <param name="refundedNote">refunded_note.</param>
            <param name="canceledNote">canceled_note.</param>
            <param name="tender">tender.</param>
            <param name="orderHistory">order_history.</param>
            <param name="promoCode">promo_code.</param>
            <param name="btcReceiveAddress">btc_receive_address.</param>
            <param name="btcPriceSatoshi">btc_price_satoshi.</param>
        </member>
        <member name="P:Square.Models.V1Order.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.Id">
            <summary>
            The order's unique identifier.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.BuyerEmail">
            <summary>
            The email address of the order's buyer.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.RecipientName">
            <summary>
            The name of the order's buyer.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.RecipientPhoneNumber">
            <summary>
            The phone number to use for the order's delivery.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.State">
            <summary>
            Gets or sets State.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.ShippingAddress">
            <summary>
            Represents a physical address.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.SubtotalMoney">
            <summary>
            Gets or sets SubtotalMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.TotalShippingMoney">
            <summary>
            Gets or sets TotalShippingMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.TotalTaxMoney">
            <summary>
            Gets or sets TotalTaxMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.TotalPriceMoney">
            <summary>
            Gets or sets TotalPriceMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.TotalDiscountMoney">
            <summary>
            Gets or sets TotalDiscountMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.CreatedAt">
            <summary>
            The time when the order was created, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.UpdatedAt">
            <summary>
            The time when the order was last modified, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.ExpiresAt">
            <summary>
            The time when the order expires if no action is taken, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.PaymentId">
            <summary>
            The unique identifier of the payment associated with the order.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.BuyerNote">
            <summary>
            A note provided by the buyer when the order was created, if any.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.CompletedNote">
            <summary>
            A note provided by the merchant when the order's state was set to COMPLETED, if any
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.RefundedNote">
            <summary>
            A note provided by the merchant when the order's state was set to REFUNDED, if any.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.CanceledNote">
            <summary>
            A note provided by the merchant when the order's state was set to CANCELED, if any.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.Tender">
            <summary>
            A tender represents a discrete monetary exchange. Square represents this
            exchange as a money object with a specific currency and amount, where the
            amount is given in the smallest denomination of the given currency.
            Square POS can accept more than one form of tender for a single payment (such
            as by splitting a bill between a credit card and a gift card). The `tender`
            field of the Payment object lists all forms of tender used for the payment.
            Split tender payments behave slightly differently from single tender payments:
            The receipt_url for a split tender corresponds only to the first tender listed
            in the tender field. To get the receipt URLs for the remaining tenders, use
            the receipt_url fields of the corresponding Tender objects.
            *A note on gift cards**: when a customer purchases a Square gift card from a
            merchant, the merchant receives the full amount of the gift card in the
            associated payment.
            When that gift card is used as a tender, the balance of the gift card is
            reduced and the merchant receives no funds. A `Tender` object with a type of
            `SQUARE_GIFT_CARD` indicates a gift card was used for some or all of the
            associated payment.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.OrderHistory">
            <summary>
            The history of actions associated with the order.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.PromoCode">
            <summary>
            The promo code provided by the buyer, if any.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.BtcReceiveAddress">
            <summary>
            For Bitcoin transactions, the address that the buyer sent Bitcoin to.
            </summary>
        </member>
        <member name="P:Square.Models.V1Order.BtcPriceSatoshi">
            <summary>
            For Bitcoin transactions, the price of the buyer's order in satoshi (100 million satoshi equals 1 BTC).
            </summary>
        </member>
        <member name="M:Square.Models.V1Order.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Order.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Order.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Order.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1Order.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1Order.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1Order.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.BuyerEmail(System.String)">
            <summary>
            BuyerEmail.
            </summary>
            <param name="buyerEmail"> buyerEmail. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.RecipientName(System.String)">
            <summary>
            RecipientName.
            </summary>
            <param name="recipientName"> recipientName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.RecipientPhoneNumber(System.String)">
            <summary>
            RecipientPhoneNumber.
            </summary>
            <param name="recipientPhoneNumber"> recipientPhoneNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.State(System.String)">
            <summary>
            State.
            </summary>
            <param name="state"> state. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.ShippingAddress(Square.Models.Address)">
            <summary>
            ShippingAddress.
            </summary>
            <param name="shippingAddress"> shippingAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.SubtotalMoney(Square.Models.V1Money)">
            <summary>
            SubtotalMoney.
            </summary>
            <param name="subtotalMoney"> subtotalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.TotalShippingMoney(Square.Models.V1Money)">
            <summary>
            TotalShippingMoney.
            </summary>
            <param name="totalShippingMoney"> totalShippingMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.TotalTaxMoney(Square.Models.V1Money)">
            <summary>
            TotalTaxMoney.
            </summary>
            <param name="totalTaxMoney"> totalTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.TotalPriceMoney(Square.Models.V1Money)">
            <summary>
            TotalPriceMoney.
            </summary>
            <param name="totalPriceMoney"> totalPriceMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.TotalDiscountMoney(Square.Models.V1Money)">
            <summary>
            TotalDiscountMoney.
            </summary>
            <param name="totalDiscountMoney"> totalDiscountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.ExpiresAt(System.String)">
            <summary>
            ExpiresAt.
            </summary>
            <param name="expiresAt"> expiresAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.PaymentId(System.String)">
            <summary>
            PaymentId.
            </summary>
            <param name="paymentId"> paymentId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.BuyerNote(System.String)">
            <summary>
            BuyerNote.
            </summary>
            <param name="buyerNote"> buyerNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.CompletedNote(System.String)">
            <summary>
            CompletedNote.
            </summary>
            <param name="completedNote"> completedNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.RefundedNote(System.String)">
            <summary>
            RefundedNote.
            </summary>
            <param name="refundedNote"> refundedNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.CanceledNote(System.String)">
            <summary>
            CanceledNote.
            </summary>
            <param name="canceledNote"> canceledNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.Tender(Square.Models.V1Tender)">
            <summary>
            Tender.
            </summary>
            <param name="tender"> tender. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.OrderHistory(System.Collections.Generic.IList{Square.Models.V1OrderHistoryEntry})">
            <summary>
            OrderHistory.
            </summary>
            <param name="orderHistory"> orderHistory. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.PromoCode(System.String)">
            <summary>
            PromoCode.
            </summary>
            <param name="promoCode"> promoCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.BtcReceiveAddress(System.String)">
            <summary>
            BtcReceiveAddress.
            </summary>
            <param name="btcReceiveAddress"> btcReceiveAddress. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.BtcPriceSatoshi(System.Nullable{System.Double})">
            <summary>
            BtcPriceSatoshi.
            </summary>
            <param name="btcPriceSatoshi"> btcPriceSatoshi. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Order.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1Order. </returns>
        </member>
        <member name="T:Square.Models.V1OrderHistoryEntry">
            <summary>
            V1OrderHistoryEntry.
            </summary>
        </member>
        <member name="M:Square.Models.V1OrderHistoryEntry.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1OrderHistoryEntry"/> class.
            </summary>
            <param name="action">action.</param>
            <param name="createdAt">created_at.</param>
        </member>
        <member name="P:Square.Models.V1OrderHistoryEntry.Action">
            <summary>
            Gets or sets Action.
            </summary>
        </member>
        <member name="P:Square.Models.V1OrderHistoryEntry.CreatedAt">
            <summary>
            The time when the action was performed, in ISO 8601 format.
            </summary>
        </member>
        <member name="M:Square.Models.V1OrderHistoryEntry.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1OrderHistoryEntry.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1OrderHistoryEntry.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1OrderHistoryEntry.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1OrderHistoryEntry.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1OrderHistoryEntry.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1OrderHistoryEntry.Builder.Action(System.String)">
            <summary>
            Action.
            </summary>
            <param name="action"> action. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1OrderHistoryEntry.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1OrderHistoryEntry.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1OrderHistoryEntry. </returns>
        </member>
        <member name="T:Square.Models.V1Payment">
            <summary>
            V1Payment.
            </summary>
        </member>
        <member name="M:Square.Models.V1Payment.#ctor(System.String,System.String,System.String,System.String,Square.Models.Device,System.String,System.String,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,System.Collections.Generic.IList{Square.Models.V1PaymentTax},System.Collections.Generic.IList{Square.Models.V1PaymentTax},System.Collections.Generic.IList{Square.Models.V1Tender},System.Collections.Generic.IList{Square.Models.V1Refund},System.Collections.Generic.IList{Square.Models.V1PaymentItemization},Square.Models.V1Money,System.Collections.Generic.IList{Square.Models.V1PaymentSurcharge},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1Payment"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="merchantId">merchant_id.</param>
            <param name="createdAt">created_at.</param>
            <param name="creatorId">creator_id.</param>
            <param name="device">device.</param>
            <param name="paymentUrl">payment_url.</param>
            <param name="receiptUrl">receipt_url.</param>
            <param name="inclusiveTaxMoney">inclusive_tax_money.</param>
            <param name="additiveTaxMoney">additive_tax_money.</param>
            <param name="taxMoney">tax_money.</param>
            <param name="tipMoney">tip_money.</param>
            <param name="discountMoney">discount_money.</param>
            <param name="totalCollectedMoney">total_collected_money.</param>
            <param name="processingFeeMoney">processing_fee_money.</param>
            <param name="netTotalMoney">net_total_money.</param>
            <param name="refundedMoney">refunded_money.</param>
            <param name="swedishRoundingMoney">swedish_rounding_money.</param>
            <param name="grossSalesMoney">gross_sales_money.</param>
            <param name="netSalesMoney">net_sales_money.</param>
            <param name="inclusiveTax">inclusive_tax.</param>
            <param name="additiveTax">additive_tax.</param>
            <param name="tender">tender.</param>
            <param name="refunds">refunds.</param>
            <param name="itemizations">itemizations.</param>
            <param name="surchargeMoney">surcharge_money.</param>
            <param name="surcharges">surcharges.</param>
            <param name="isPartial">is_partial.</param>
        </member>
        <member name="P:Square.Models.V1Payment.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.Id">
            <summary>
            The payment's unique identifier.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.MerchantId">
            <summary>
            The unique identifier of the merchant that took the payment.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.CreatedAt">
            <summary>
            The time when the payment was created, in ISO 8601 format. Reflects the time of the first payment if the object represents an incomplete partial payment, and the time of the last or complete payment otherwise.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.CreatorId">
            <summary>
            The unique identifier of the Square account that took the payment.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.Device">
            <summary>
            Gets or sets Device.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.PaymentUrl">
            <summary>
            The URL of the payment's detail page in the merchant dashboard. The merchant must be signed in to the merchant dashboard to view this page.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.ReceiptUrl">
            <summary>
            The URL of the receipt for the payment. Note that for split tender
            payments, this URL corresponds to the receipt for the first tender
            listed in the payment's tender field. Each Tender object has its own
            receipt_url field you can use to get the other receipts associated with
            a split tender payment.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.InclusiveTaxMoney">
            <summary>
            Gets or sets InclusiveTaxMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.AdditiveTaxMoney">
            <summary>
            Gets or sets AdditiveTaxMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.TaxMoney">
            <summary>
            Gets or sets TaxMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.TipMoney">
            <summary>
            Gets or sets TipMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.DiscountMoney">
            <summary>
            Gets or sets DiscountMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.TotalCollectedMoney">
            <summary>
            Gets or sets TotalCollectedMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.ProcessingFeeMoney">
            <summary>
            Gets or sets ProcessingFeeMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.NetTotalMoney">
            <summary>
            Gets or sets NetTotalMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.RefundedMoney">
            <summary>
            Gets or sets RefundedMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.SwedishRoundingMoney">
            <summary>
            Gets or sets SwedishRoundingMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.GrossSalesMoney">
            <summary>
            Gets or sets GrossSalesMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.NetSalesMoney">
            <summary>
            Gets or sets NetSalesMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.InclusiveTax">
            <summary>
            All of the inclusive taxes associated with the payment.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.AdditiveTax">
            <summary>
            All of the additive taxes associated with the payment.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.Tender">
            <summary>
            All of the tenders associated with the payment.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.Refunds">
            <summary>
            All of the refunds applied to the payment. Note that the value of all refunds on a payment can exceed the value of all tenders if a merchant chooses to refund money to a tender after previously accepting returned goods as part of an exchange.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.Itemizations">
            <summary>
            The items purchased in the payment.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.SurchargeMoney">
            <summary>
            Gets or sets SurchargeMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.Surcharges">
            <summary>
            A list of all surcharges associated with the payment.
            </summary>
        </member>
        <member name="P:Square.Models.V1Payment.IsPartial">
            <summary>
            Indicates whether or not the payment is only partially paid for.
            If true, this payment will have the tenders collected so far, but the
            itemizations will be empty until the payment is completed.
            </summary>
        </member>
        <member name="M:Square.Models.V1Payment.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Payment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Payment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Payment.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1Payment.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1Payment.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.MerchantId(System.String)">
            <summary>
            MerchantId.
            </summary>
            <param name="merchantId"> merchantId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.CreatorId(System.String)">
            <summary>
            CreatorId.
            </summary>
            <param name="creatorId"> creatorId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.Device(Square.Models.Device)">
            <summary>
            Device.
            </summary>
            <param name="device"> device. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.PaymentUrl(System.String)">
            <summary>
            PaymentUrl.
            </summary>
            <param name="paymentUrl"> paymentUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.ReceiptUrl(System.String)">
            <summary>
            ReceiptUrl.
            </summary>
            <param name="receiptUrl"> receiptUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.InclusiveTaxMoney(Square.Models.V1Money)">
            <summary>
            InclusiveTaxMoney.
            </summary>
            <param name="inclusiveTaxMoney"> inclusiveTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.AdditiveTaxMoney(Square.Models.V1Money)">
            <summary>
            AdditiveTaxMoney.
            </summary>
            <param name="additiveTaxMoney"> additiveTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.TaxMoney(Square.Models.V1Money)">
            <summary>
            TaxMoney.
            </summary>
            <param name="taxMoney"> taxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.TipMoney(Square.Models.V1Money)">
            <summary>
            TipMoney.
            </summary>
            <param name="tipMoney"> tipMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.DiscountMoney(Square.Models.V1Money)">
            <summary>
            DiscountMoney.
            </summary>
            <param name="discountMoney"> discountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.TotalCollectedMoney(Square.Models.V1Money)">
            <summary>
            TotalCollectedMoney.
            </summary>
            <param name="totalCollectedMoney"> totalCollectedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.ProcessingFeeMoney(Square.Models.V1Money)">
            <summary>
            ProcessingFeeMoney.
            </summary>
            <param name="processingFeeMoney"> processingFeeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.NetTotalMoney(Square.Models.V1Money)">
            <summary>
            NetTotalMoney.
            </summary>
            <param name="netTotalMoney"> netTotalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.RefundedMoney(Square.Models.V1Money)">
            <summary>
            RefundedMoney.
            </summary>
            <param name="refundedMoney"> refundedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.SwedishRoundingMoney(Square.Models.V1Money)">
            <summary>
            SwedishRoundingMoney.
            </summary>
            <param name="swedishRoundingMoney"> swedishRoundingMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.GrossSalesMoney(Square.Models.V1Money)">
            <summary>
            GrossSalesMoney.
            </summary>
            <param name="grossSalesMoney"> grossSalesMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.NetSalesMoney(Square.Models.V1Money)">
            <summary>
            NetSalesMoney.
            </summary>
            <param name="netSalesMoney"> netSalesMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.InclusiveTax(System.Collections.Generic.IList{Square.Models.V1PaymentTax})">
            <summary>
            InclusiveTax.
            </summary>
            <param name="inclusiveTax"> inclusiveTax. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.AdditiveTax(System.Collections.Generic.IList{Square.Models.V1PaymentTax})">
            <summary>
            AdditiveTax.
            </summary>
            <param name="additiveTax"> additiveTax. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.Tender(System.Collections.Generic.IList{Square.Models.V1Tender})">
            <summary>
            Tender.
            </summary>
            <param name="tender"> tender. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.Refunds(System.Collections.Generic.IList{Square.Models.V1Refund})">
            <summary>
            Refunds.
            </summary>
            <param name="refunds"> refunds. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.Itemizations(System.Collections.Generic.IList{Square.Models.V1PaymentItemization})">
            <summary>
            Itemizations.
            </summary>
            <param name="itemizations"> itemizations. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.SurchargeMoney(Square.Models.V1Money)">
            <summary>
            SurchargeMoney.
            </summary>
            <param name="surchargeMoney"> surchargeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.Surcharges(System.Collections.Generic.IList{Square.Models.V1PaymentSurcharge})">
            <summary>
            Surcharges.
            </summary>
            <param name="surcharges"> surcharges. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.IsPartial(System.Nullable{System.Boolean})">
            <summary>
            IsPartial.
            </summary>
            <param name="isPartial"> isPartial. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Payment.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1Payment. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentDiscount">
            <summary>
            V1PaymentDiscount.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentDiscount.#ctor(System.String,Square.Models.V1Money,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1PaymentDiscount"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="appliedMoney">applied_money.</param>
            <param name="discountId">discount_id.</param>
        </member>
        <member name="P:Square.Models.V1PaymentDiscount.Name">
            <summary>
            The discount's name.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentDiscount.AppliedMoney">
            <summary>
            Gets or sets AppliedMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentDiscount.DiscountId">
            <summary>
            The ID of the applied discount, if available. Discounts applied in older versions of Square Register might not have an ID.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentDiscount.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentDiscount.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentDiscount.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentDiscount.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1PaymentDiscount.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentDiscount.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentDiscount.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentDiscount.Builder.AppliedMoney(Square.Models.V1Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentDiscount.Builder.DiscountId(System.String)">
            <summary>
            DiscountId.
            </summary>
            <param name="discountId"> discountId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentDiscount.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1PaymentDiscount. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentItemDetail">
            <summary>
            V1PaymentItemDetail.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1PaymentItemDetail"/> class.
            </summary>
            <param name="categoryName">category_name.</param>
            <param name="sku">sku.</param>
            <param name="itemId">item_id.</param>
            <param name="itemVariationId">item_variation_id.</param>
        </member>
        <member name="P:Square.Models.V1PaymentItemDetail.CategoryName">
            <summary>
            The name of the item's merchant-defined category, if any.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemDetail.Sku">
            <summary>
            The item's merchant-defined SKU, if any.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemDetail.ItemId">
            <summary>
            The unique ID of the item purchased, if any.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemDetail.ItemVariationId">
            <summary>
            The unique ID of the item variation purchased, if any.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentItemDetail.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.Builder.CategoryName(System.String)">
            <summary>
            CategoryName.
            </summary>
            <param name="categoryName"> categoryName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.Builder.Sku(System.String)">
            <summary>
            Sku.
            </summary>
            <param name="sku"> sku. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.Builder.ItemId(System.String)">
            <summary>
            ItemId.
            </summary>
            <param name="itemId"> itemId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.Builder.ItemVariationId(System.String)">
            <summary>
            ItemVariationId.
            </summary>
            <param name="itemVariationId"> itemVariationId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemDetail.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1PaymentItemDetail. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentItemization">
            <summary>
            V1PaymentItemization.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.#ctor(System.String,System.Nullable{System.Double},System.String,Square.Models.V1PaymentItemDetail,System.String,System.String,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,System.Collections.Generic.IList{Square.Models.V1PaymentTax},System.Collections.Generic.IList{Square.Models.V1PaymentDiscount},System.Collections.Generic.IList{Square.Models.V1PaymentModifier})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1PaymentItemization"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="quantity">quantity.</param>
            <param name="itemizationType">itemization_type.</param>
            <param name="itemDetail">item_detail.</param>
            <param name="notes">notes.</param>
            <param name="itemVariationName">item_variation_name.</param>
            <param name="totalMoney">total_money.</param>
            <param name="singleQuantityMoney">single_quantity_money.</param>
            <param name="grossSalesMoney">gross_sales_money.</param>
            <param name="discountMoney">discount_money.</param>
            <param name="netSalesMoney">net_sales_money.</param>
            <param name="taxes">taxes.</param>
            <param name="discounts">discounts.</param>
            <param name="modifiers">modifiers.</param>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.Name">
            <summary>
            The item's name.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.Quantity">
            <summary>
            The quantity of the item purchased. This can be a decimal value.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.ItemizationType">
            <summary>
            Gets or sets ItemizationType.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.ItemDetail">
            <summary>
            V1PaymentItemDetail
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.Notes">
            <summary>
            Notes entered by the merchant about the item at the time of payment, if any.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.ItemVariationName">
            <summary>
            The name of the item variation purchased, if any.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.TotalMoney">
            <summary>
            Gets or sets TotalMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.SingleQuantityMoney">
            <summary>
            Gets or sets SingleQuantityMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.GrossSalesMoney">
            <summary>
            Gets or sets GrossSalesMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.DiscountMoney">
            <summary>
            Gets or sets DiscountMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.NetSalesMoney">
            <summary>
            Gets or sets NetSalesMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.Taxes">
            <summary>
            All taxes applied to this itemization.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.Discounts">
            <summary>
            All discounts applied to this itemization.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentItemization.Modifiers">
            <summary>
            All modifier options applied to this itemization.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentItemization.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.Quantity(System.Nullable{System.Double})">
            <summary>
            Quantity.
            </summary>
            <param name="quantity"> quantity. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.ItemizationType(System.String)">
            <summary>
            ItemizationType.
            </summary>
            <param name="itemizationType"> itemizationType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.ItemDetail(Square.Models.V1PaymentItemDetail)">
            <summary>
            ItemDetail.
            </summary>
            <param name="itemDetail"> itemDetail. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.Notes(System.String)">
            <summary>
            Notes.
            </summary>
            <param name="notes"> notes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.ItemVariationName(System.String)">
            <summary>
            ItemVariationName.
            </summary>
            <param name="itemVariationName"> itemVariationName. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.TotalMoney(Square.Models.V1Money)">
            <summary>
            TotalMoney.
            </summary>
            <param name="totalMoney"> totalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.SingleQuantityMoney(Square.Models.V1Money)">
            <summary>
            SingleQuantityMoney.
            </summary>
            <param name="singleQuantityMoney"> singleQuantityMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.GrossSalesMoney(Square.Models.V1Money)">
            <summary>
            GrossSalesMoney.
            </summary>
            <param name="grossSalesMoney"> grossSalesMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.DiscountMoney(Square.Models.V1Money)">
            <summary>
            DiscountMoney.
            </summary>
            <param name="discountMoney"> discountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.NetSalesMoney(Square.Models.V1Money)">
            <summary>
            NetSalesMoney.
            </summary>
            <param name="netSalesMoney"> netSalesMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.Taxes(System.Collections.Generic.IList{Square.Models.V1PaymentTax})">
            <summary>
            Taxes.
            </summary>
            <param name="taxes"> taxes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.Discounts(System.Collections.Generic.IList{Square.Models.V1PaymentDiscount})">
            <summary>
            Discounts.
            </summary>
            <param name="discounts"> discounts. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.Modifiers(System.Collections.Generic.IList{Square.Models.V1PaymentModifier})">
            <summary>
            Modifiers.
            </summary>
            <param name="modifiers"> modifiers. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentItemization.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1PaymentItemization. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentModifier">
            <summary>
            V1PaymentModifier.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentModifier.#ctor(System.String,Square.Models.V1Money,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1PaymentModifier"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="appliedMoney">applied_money.</param>
            <param name="modifierOptionId">modifier_option_id.</param>
        </member>
        <member name="P:Square.Models.V1PaymentModifier.Name">
            <summary>
            The modifier option's name.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentModifier.AppliedMoney">
            <summary>
            Gets or sets AppliedMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentModifier.ModifierOptionId">
            <summary>
            The ID of the applied modifier option, if available. Modifier options applied in older versions of Square Register might not have an ID.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentModifier.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentModifier.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentModifier.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentModifier.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1PaymentModifier.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentModifier.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentModifier.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentModifier.Builder.AppliedMoney(Square.Models.V1Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentModifier.Builder.ModifierOptionId(System.String)">
            <summary>
            ModifierOptionId.
            </summary>
            <param name="modifierOptionId"> modifierOptionId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentModifier.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1PaymentModifier. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentSurcharge">
            <summary>
            V1PaymentSurcharge.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.#ctor(System.String,Square.Models.V1Money,System.String,Square.Models.V1Money,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Square.Models.V1PaymentTax},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1PaymentSurcharge"/> class.
            </summary>
            <param name="name">name.</param>
            <param name="appliedMoney">applied_money.</param>
            <param name="rate">rate.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="type">type.</param>
            <param name="taxable">taxable.</param>
            <param name="taxes">taxes.</param>
            <param name="surchargeId">surcharge_id.</param>
        </member>
        <member name="P:Square.Models.V1PaymentSurcharge.Name">
            <summary>
            The name of the surcharge.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentSurcharge.AppliedMoney">
            <summary>
            Gets or sets AppliedMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentSurcharge.Rate">
            <summary>
            The amount of the surcharge as a percentage. The percentage is provided as a string representing the decimal equivalent of the percentage. For example, "0.7" corresponds to a 7% surcharge. Exactly one of rate or amount_money should be set.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentSurcharge.AmountMoney">
            <summary>
            Gets or sets AmountMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentSurcharge.Type">
            <summary>
            Gets or sets Type.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentSurcharge.Taxable">
            <summary>
            Indicates whether the surcharge is taxable.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentSurcharge.Taxes">
            <summary>
            The list of taxes that should be applied to the surcharge.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentSurcharge.SurchargeId">
            <summary>
            A Square-issued unique identifier associated with the surcharge.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentSurcharge.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.Builder.AppliedMoney(Square.Models.V1Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.Builder.Rate(System.String)">
            <summary>
            Rate.
            </summary>
            <param name="rate"> rate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.Builder.AmountMoney(Square.Models.V1Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.Builder.Taxable(System.Nullable{System.Boolean})">
            <summary>
            Taxable.
            </summary>
            <param name="taxable"> taxable. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.Builder.Taxes(System.Collections.Generic.IList{Square.Models.V1PaymentTax})">
            <summary>
            Taxes.
            </summary>
            <param name="taxes"> taxes. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.Builder.SurchargeId(System.String)">
            <summary>
            SurchargeId.
            </summary>
            <param name="surchargeId"> surchargeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentSurcharge.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1PaymentSurcharge. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentTax">
            <summary>
            V1PaymentTax.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentTax.#ctor(System.Collections.Generic.IList{Square.Models.Error},System.String,Square.Models.V1Money,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1PaymentTax"/> class.
            </summary>
            <param name="errors">errors.</param>
            <param name="name">name.</param>
            <param name="appliedMoney">applied_money.</param>
            <param name="rate">rate.</param>
            <param name="inclusionType">inclusion_type.</param>
            <param name="feeId">fee_id.</param>
        </member>
        <member name="P:Square.Models.V1PaymentTax.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentTax.Name">
            <summary>
            The merchant-defined name of the tax.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentTax.AppliedMoney">
            <summary>
            Gets or sets AppliedMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentTax.Rate">
            <summary>
            The rate of the tax, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentTax.InclusionType">
            <summary>
            Gets or sets InclusionType.
            </summary>
        </member>
        <member name="P:Square.Models.V1PaymentTax.FeeId">
            <summary>
            The ID of the tax, if available. Taxes applied in older versions of Square Register might not have an ID.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentTax.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentTax.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentTax.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PaymentTax.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1PaymentTax.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1PaymentTax.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1PaymentTax.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentTax.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentTax.Builder.AppliedMoney(Square.Models.V1Money)">
            <summary>
            AppliedMoney.
            </summary>
            <param name="appliedMoney"> appliedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentTax.Builder.Rate(System.String)">
            <summary>
            Rate.
            </summary>
            <param name="rate"> rate. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentTax.Builder.InclusionType(System.String)">
            <summary>
            InclusionType.
            </summary>
            <param name="inclusionType"> inclusionType. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentTax.Builder.FeeId(System.String)">
            <summary>
            FeeId.
            </summary>
            <param name="feeId"> feeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PaymentTax.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1PaymentTax. </returns>
        </member>
        <member name="T:Square.Models.V1PhoneNumber">
            <summary>
            V1PhoneNumber.
            </summary>
        </member>
        <member name="M:Square.Models.V1PhoneNumber.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1PhoneNumber"/> class.
            </summary>
            <param name="callingCode">calling_code.</param>
            <param name="number">number.</param>
        </member>
        <member name="P:Square.Models.V1PhoneNumber.CallingCode">
            <summary>
            The phone number's international calling code. For US phone numbers, this value is +1.
            </summary>
        </member>
        <member name="P:Square.Models.V1PhoneNumber.Number">
            <summary>
            The phone number.
            </summary>
        </member>
        <member name="M:Square.Models.V1PhoneNumber.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PhoneNumber.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PhoneNumber.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1PhoneNumber.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1PhoneNumber.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1PhoneNumber.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1PhoneNumber.Builder.CallingCode(System.String)">
            <summary>
            CallingCode.
            </summary>
            <param name="callingCode"> callingCode. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PhoneNumber.Builder.Number(System.String)">
            <summary>
            Number.
            </summary>
            <param name="number"> number. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1PhoneNumber.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1PhoneNumber. </returns>
        </member>
        <member name="T:Square.Models.V1Refund">
            <summary>
            V1Refund.
            </summary>
        </member>
        <member name="M:Square.Models.V1Refund.#ctor(System.String,System.String,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,System.Collections.Generic.IList{Square.Models.V1PaymentTax},Square.Models.V1Money,System.Collections.Generic.IList{Square.Models.V1PaymentTax},Square.Models.V1Money,Square.Models.V1Money,Square.Models.V1Money,System.Collections.Generic.IList{Square.Models.V1PaymentSurcharge},System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1Refund"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="reason">reason.</param>
            <param name="refundedMoney">refunded_money.</param>
            <param name="refundedProcessingFeeMoney">refunded_processing_fee_money.</param>
            <param name="refundedTaxMoney">refunded_tax_money.</param>
            <param name="refundedAdditiveTaxMoney">refunded_additive_tax_money.</param>
            <param name="refundedAdditiveTax">refunded_additive_tax.</param>
            <param name="refundedInclusiveTaxMoney">refunded_inclusive_tax_money.</param>
            <param name="refundedInclusiveTax">refunded_inclusive_tax.</param>
            <param name="refundedTipMoney">refunded_tip_money.</param>
            <param name="refundedDiscountMoney">refunded_discount_money.</param>
            <param name="refundedSurchargeMoney">refunded_surcharge_money.</param>
            <param name="refundedSurcharges">refunded_surcharges.</param>
            <param name="createdAt">created_at.</param>
            <param name="processedAt">processed_at.</param>
            <param name="paymentId">payment_id.</param>
            <param name="merchantId">merchant_id.</param>
            <param name="isExchange">is_exchange.</param>
        </member>
        <member name="P:Square.Models.V1Refund.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.Type">
            <summary>
            Gets or sets Type.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.Reason">
            <summary>
            The merchant-specified reason for the refund.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedMoney">
            <summary>
            Gets or sets RefundedMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedProcessingFeeMoney">
            <summary>
            Gets or sets RefundedProcessingFeeMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedTaxMoney">
            <summary>
            Gets or sets RefundedTaxMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedAdditiveTaxMoney">
            <summary>
            Gets or sets RefundedAdditiveTaxMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedAdditiveTax">
            <summary>
            All of the additive taxes associated with the refund.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedInclusiveTaxMoney">
            <summary>
            Gets or sets RefundedInclusiveTaxMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedInclusiveTax">
            <summary>
            All of the inclusive taxes associated with the refund.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedTipMoney">
            <summary>
            Gets or sets RefundedTipMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedDiscountMoney">
            <summary>
            Gets or sets RefundedDiscountMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedSurchargeMoney">
            <summary>
            Gets or sets RefundedSurchargeMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.RefundedSurcharges">
            <summary>
            A list of all surcharges associated with the refund.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.CreatedAt">
            <summary>
            The time when the merchant initiated the refund for Square to process, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.ProcessedAt">
            <summary>
            The time when Square processed the refund on behalf of the merchant, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.PaymentId">
            <summary>
            A Square-issued ID associated with the refund. For single-tender refunds, payment_id is the ID of the original payment ID. For split-tender refunds, payment_id is the ID of the original tender. For exchange-based refunds (is_exchange == true), payment_id is the ID of the original payment ID even if the payment includes other tenders.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.MerchantId">
            <summary>
            Gets or sets MerchantId.
            </summary>
        </member>
        <member name="P:Square.Models.V1Refund.IsExchange">
            <summary>
            Indicates whether or not the refund is associated with an exchange. If is_exchange is true, the refund reflects the value of goods returned in the exchange not the total money refunded.
            </summary>
        </member>
        <member name="M:Square.Models.V1Refund.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Refund.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Refund.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Refund.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1Refund.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1Refund.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.Reason(System.String)">
            <summary>
            Reason.
            </summary>
            <param name="reason"> reason. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedMoney(Square.Models.V1Money)">
            <summary>
            RefundedMoney.
            </summary>
            <param name="refundedMoney"> refundedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedProcessingFeeMoney(Square.Models.V1Money)">
            <summary>
            RefundedProcessingFeeMoney.
            </summary>
            <param name="refundedProcessingFeeMoney"> refundedProcessingFeeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedTaxMoney(Square.Models.V1Money)">
            <summary>
            RefundedTaxMoney.
            </summary>
            <param name="refundedTaxMoney"> refundedTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedAdditiveTaxMoney(Square.Models.V1Money)">
            <summary>
            RefundedAdditiveTaxMoney.
            </summary>
            <param name="refundedAdditiveTaxMoney"> refundedAdditiveTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedAdditiveTax(System.Collections.Generic.IList{Square.Models.V1PaymentTax})">
            <summary>
            RefundedAdditiveTax.
            </summary>
            <param name="refundedAdditiveTax"> refundedAdditiveTax. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedInclusiveTaxMoney(Square.Models.V1Money)">
            <summary>
            RefundedInclusiveTaxMoney.
            </summary>
            <param name="refundedInclusiveTaxMoney"> refundedInclusiveTaxMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedInclusiveTax(System.Collections.Generic.IList{Square.Models.V1PaymentTax})">
            <summary>
            RefundedInclusiveTax.
            </summary>
            <param name="refundedInclusiveTax"> refundedInclusiveTax. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedTipMoney(Square.Models.V1Money)">
            <summary>
            RefundedTipMoney.
            </summary>
            <param name="refundedTipMoney"> refundedTipMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedDiscountMoney(Square.Models.V1Money)">
            <summary>
            RefundedDiscountMoney.
            </summary>
            <param name="refundedDiscountMoney"> refundedDiscountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedSurchargeMoney(Square.Models.V1Money)">
            <summary>
            RefundedSurchargeMoney.
            </summary>
            <param name="refundedSurchargeMoney"> refundedSurchargeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.RefundedSurcharges(System.Collections.Generic.IList{Square.Models.V1PaymentSurcharge})">
            <summary>
            RefundedSurcharges.
            </summary>
            <param name="refundedSurcharges"> refundedSurcharges. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.ProcessedAt(System.String)">
            <summary>
            ProcessedAt.
            </summary>
            <param name="processedAt"> processedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.PaymentId(System.String)">
            <summary>
            PaymentId.
            </summary>
            <param name="paymentId"> paymentId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.MerchantId(System.String)">
            <summary>
            MerchantId.
            </summary>
            <param name="merchantId"> merchantId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.IsExchange(System.Nullable{System.Boolean})">
            <summary>
            IsExchange.
            </summary>
            <param name="isExchange"> isExchange. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Refund.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1Refund. </returns>
        </member>
        <member name="T:Square.Models.V1Settlement">
            <summary>
            V1Settlement.
            </summary>
        </member>
        <member name="M:Square.Models.V1Settlement.#ctor(System.String,System.String,Square.Models.V1Money,System.String,System.String,System.Collections.Generic.IList{Square.Models.V1SettlementEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1Settlement"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="status">status.</param>
            <param name="totalMoney">total_money.</param>
            <param name="initiatedAt">initiated_at.</param>
            <param name="bankAccountId">bank_account_id.</param>
            <param name="entries">entries.</param>
        </member>
        <member name="P:Square.Models.V1Settlement.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.V1Settlement.Id">
            <summary>
            The settlement's unique identifier.
            </summary>
        </member>
        <member name="P:Square.Models.V1Settlement.Status">
            <summary>
            Gets or sets Status.
            </summary>
        </member>
        <member name="P:Square.Models.V1Settlement.TotalMoney">
            <summary>
            Gets or sets TotalMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Settlement.InitiatedAt">
            <summary>
            The time when the settlement was submitted for deposit or withdrawal, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1Settlement.BankAccountId">
            <summary>
            The Square-issued unique identifier for the bank account associated with the settlement.
            </summary>
        </member>
        <member name="P:Square.Models.V1Settlement.Entries">
            <summary>
            The entries included in this settlement.
            </summary>
        </member>
        <member name="M:Square.Models.V1Settlement.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Settlement.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Settlement.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Settlement.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1Settlement.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1Settlement.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1Settlement.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Settlement.Builder.Status(System.String)">
            <summary>
            Status.
            </summary>
            <param name="status"> status. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Settlement.Builder.TotalMoney(Square.Models.V1Money)">
            <summary>
            TotalMoney.
            </summary>
            <param name="totalMoney"> totalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Settlement.Builder.InitiatedAt(System.String)">
            <summary>
            InitiatedAt.
            </summary>
            <param name="initiatedAt"> initiatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Settlement.Builder.BankAccountId(System.String)">
            <summary>
            BankAccountId.
            </summary>
            <param name="bankAccountId"> bankAccountId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Settlement.Builder.Entries(System.Collections.Generic.IList{Square.Models.V1SettlementEntry})">
            <summary>
            Entries.
            </summary>
            <param name="entries"> entries. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Settlement.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1Settlement. </returns>
        </member>
        <member name="T:Square.Models.V1SettlementEntry">
            <summary>
            V1SettlementEntry.
            </summary>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.#ctor(System.String,System.String,Square.Models.V1Money,Square.Models.V1Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1SettlementEntry"/> class.
            </summary>
            <param name="paymentId">payment_id.</param>
            <param name="type">type.</param>
            <param name="amountMoney">amount_money.</param>
            <param name="feeMoney">fee_money.</param>
        </member>
        <member name="P:Square.Models.V1SettlementEntry.PaymentId">
            <summary>
            The settlement's unique identifier.
            </summary>
        </member>
        <member name="P:Square.Models.V1SettlementEntry.Type">
            <summary>
            Gets or sets Type.
            </summary>
        </member>
        <member name="P:Square.Models.V1SettlementEntry.AmountMoney">
            <summary>
            Gets or sets AmountMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1SettlementEntry.FeeMoney">
            <summary>
            Gets or sets FeeMoney.
            </summary>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1SettlementEntry.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.Builder.PaymentId(System.String)">
            <summary>
            PaymentId.
            </summary>
            <param name="paymentId"> paymentId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.Builder.AmountMoney(Square.Models.V1Money)">
            <summary>
            AmountMoney.
            </summary>
            <param name="amountMoney"> amountMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.Builder.FeeMoney(Square.Models.V1Money)">
            <summary>
            FeeMoney.
            </summary>
            <param name="feeMoney"> feeMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1SettlementEntry.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1SettlementEntry. </returns>
        </member>
        <member name="T:Square.Models.V1Tender">
            <summary>
            V1Tender.
            </summary>
        </member>
        <member name="M:Square.Models.V1Tender.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Square.Models.V1Money,Square.Models.V1Money,System.String,System.String,Square.Models.V1Money,Square.Models.V1Money,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1Tender"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
            <param name="name">name.</param>
            <param name="employeeId">employee_id.</param>
            <param name="receiptUrl">receipt_url.</param>
            <param name="cardBrand">card_brand.</param>
            <param name="panSuffix">pan_suffix.</param>
            <param name="entryMethod">entry_method.</param>
            <param name="paymentNote">payment_note.</param>
            <param name="totalMoney">total_money.</param>
            <param name="tenderedMoney">tendered_money.</param>
            <param name="tenderedAt">tendered_at.</param>
            <param name="settledAt">settled_at.</param>
            <param name="changeBackMoney">change_back_money.</param>
            <param name="refundedMoney">refunded_money.</param>
            <param name="isExchange">is_exchange.</param>
        </member>
        <member name="P:Square.Models.V1Tender.Id">
            <summary>
            The tender's unique ID.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.Type">
            <summary>
            Gets or sets Type.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.Name">
            <summary>
            A human-readable description of the tender.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.EmployeeId">
            <summary>
            The ID of the employee that processed the tender.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.ReceiptUrl">
            <summary>
            The URL of the receipt for the tender.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.CardBrand">
            <summary>
            The brand of a credit card.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.PanSuffix">
            <summary>
            The last four digits of the provided credit card's account number.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.EntryMethod">
            <summary>
            Gets or sets EntryMethod.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.PaymentNote">
            <summary>
            Notes entered by the merchant about the tender at the time of payment, if any. Typically only present for tender with the type: OTHER.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.TotalMoney">
            <summary>
            Gets or sets TotalMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.TenderedMoney">
            <summary>
            Gets or sets TenderedMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.TenderedAt">
            <summary>
            The time when the tender was created, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.SettledAt">
            <summary>
            The time when the tender was settled, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.ChangeBackMoney">
            <summary>
            Gets or sets ChangeBackMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.RefundedMoney">
            <summary>
            Gets or sets RefundedMoney.
            </summary>
        </member>
        <member name="P:Square.Models.V1Tender.IsExchange">
            <summary>
            Indicates whether or not the tender is associated with an exchange. If is_exchange is true, the tender represents the value of goods returned in an exchange not the actual money paid. The exchange value reduces the tender amounts needed to pay for items purchased in the exchange.
            </summary>
        </member>
        <member name="M:Square.Models.V1Tender.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Tender.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Tender.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1Tender.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1Tender.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1Tender.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.Type(System.String)">
            <summary>
            Type.
            </summary>
            <param name="type"> type. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.Name(System.String)">
            <summary>
            Name.
            </summary>
            <param name="name"> name. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.EmployeeId(System.String)">
            <summary>
            EmployeeId.
            </summary>
            <param name="employeeId"> employeeId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.ReceiptUrl(System.String)">
            <summary>
            ReceiptUrl.
            </summary>
            <param name="receiptUrl"> receiptUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.CardBrand(System.String)">
            <summary>
            CardBrand.
            </summary>
            <param name="cardBrand"> cardBrand. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.PanSuffix(System.String)">
            <summary>
            PanSuffix.
            </summary>
            <param name="panSuffix"> panSuffix. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.EntryMethod(System.String)">
            <summary>
            EntryMethod.
            </summary>
            <param name="entryMethod"> entryMethod. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.PaymentNote(System.String)">
            <summary>
            PaymentNote.
            </summary>
            <param name="paymentNote"> paymentNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.TotalMoney(Square.Models.V1Money)">
            <summary>
            TotalMoney.
            </summary>
            <param name="totalMoney"> totalMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.TenderedMoney(Square.Models.V1Money)">
            <summary>
            TenderedMoney.
            </summary>
            <param name="tenderedMoney"> tenderedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.TenderedAt(System.String)">
            <summary>
            TenderedAt.
            </summary>
            <param name="tenderedAt"> tenderedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.SettledAt(System.String)">
            <summary>
            SettledAt.
            </summary>
            <param name="settledAt"> settledAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.ChangeBackMoney(Square.Models.V1Money)">
            <summary>
            ChangeBackMoney.
            </summary>
            <param name="changeBackMoney"> changeBackMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.RefundedMoney(Square.Models.V1Money)">
            <summary>
            RefundedMoney.
            </summary>
            <param name="refundedMoney"> refundedMoney. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.IsExchange(System.Nullable{System.Boolean})">
            <summary>
            IsExchange.
            </summary>
            <param name="isExchange"> isExchange. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1Tender.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1Tender. </returns>
        </member>
        <member name="T:Square.Models.V1UpdateEmployeeRequest">
            <summary>
            V1UpdateEmployeeRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRequest.#ctor(Square.Models.V1Employee)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1UpdateEmployeeRequest"/> class.
            </summary>
            <param name="body">body.</param>
        </member>
        <member name="P:Square.Models.V1UpdateEmployeeRequest.Body">
            <summary>
            Represents one of a business's employees.
            </summary>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1UpdateEmployeeRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRequest.Builder.Body(Square.Models.V1Employee)">
            <summary>
            Body.
            </summary>
            <param name="body"> body. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1UpdateEmployeeRequest. </returns>
        </member>
        <member name="T:Square.Models.V1UpdateEmployeeRoleRequest">
            <summary>
            V1UpdateEmployeeRoleRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRoleRequest.#ctor(Square.Models.V1EmployeeRole)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1UpdateEmployeeRoleRequest"/> class.
            </summary>
            <param name="body">body.</param>
        </member>
        <member name="P:Square.Models.V1UpdateEmployeeRoleRequest.Body">
            <summary>
            V1EmployeeRole
            </summary>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRoleRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRoleRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRoleRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRoleRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRoleRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1UpdateEmployeeRoleRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRoleRequest.Builder.Body(Square.Models.V1EmployeeRole)">
            <summary>
            Body.
            </summary>
            <param name="body"> body. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1UpdateEmployeeRoleRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1UpdateEmployeeRoleRequest. </returns>
        </member>
        <member name="T:Square.Models.V1UpdateOrderRequest">
            <summary>
            V1UpdateOrderRequest.
            </summary>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.V1UpdateOrderRequest"/> class.
            </summary>
            <param name="action">action.</param>
            <param name="shippedTrackingNumber">shipped_tracking_number.</param>
            <param name="completedNote">completed_note.</param>
            <param name="refundedNote">refunded_note.</param>
            <param name="canceledNote">canceled_note.</param>
        </member>
        <member name="P:Square.Models.V1UpdateOrderRequest.Action">
            <summary>
            Gets or sets Action.
            </summary>
        </member>
        <member name="P:Square.Models.V1UpdateOrderRequest.ShippedTrackingNumber">
            <summary>
            The tracking number of the shipment associated with the order. Only valid if action is COMPLETE.
            </summary>
        </member>
        <member name="P:Square.Models.V1UpdateOrderRequest.CompletedNote">
            <summary>
            A merchant-specified note about the completion of the order. Only valid if action is COMPLETE.
            </summary>
        </member>
        <member name="P:Square.Models.V1UpdateOrderRequest.RefundedNote">
            <summary>
            A merchant-specified note about the refunding of the order. Only valid if action is REFUND.
            </summary>
        </member>
        <member name="P:Square.Models.V1UpdateOrderRequest.CanceledNote">
            <summary>
            A merchant-specified note about the canceling of the order. Only valid if action is CANCEL.
            </summary>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.V1UpdateOrderRequest.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.Builder.Action(System.String)">
            <summary>
            Action.
            </summary>
            <param name="action"> action. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.Builder.ShippedTrackingNumber(System.String)">
            <summary>
            ShippedTrackingNumber.
            </summary>
            <param name="shippedTrackingNumber"> shippedTrackingNumber. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.Builder.CompletedNote(System.String)">
            <summary>
            CompletedNote.
            </summary>
            <param name="completedNote"> completedNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.Builder.RefundedNote(System.String)">
            <summary>
            RefundedNote.
            </summary>
            <param name="refundedNote"> refundedNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.Builder.CanceledNote(System.String)">
            <summary>
            CanceledNote.
            </summary>
            <param name="canceledNote"> canceledNote. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.V1UpdateOrderRequest.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> V1UpdateOrderRequest. </returns>
        </member>
        <member name="T:Square.Models.VoidTransactionResponse">
            <summary>
            VoidTransactionResponse.
            </summary>
        </member>
        <member name="M:Square.Models.VoidTransactionResponse.#ctor(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.VoidTransactionResponse"/> class.
            </summary>
            <param name="errors">errors.</param>
        </member>
        <member name="P:Square.Models.VoidTransactionResponse.Context">
            <summary>
            Gets http context.
            </summary>
        </member>
        <member name="P:Square.Models.VoidTransactionResponse.Errors">
            <summary>
            Any errors that occurred during the request.
            </summary>
        </member>
        <member name="M:Square.Models.VoidTransactionResponse.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.VoidTransactionResponse.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.VoidTransactionResponse.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.VoidTransactionResponse.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.VoidTransactionResponse.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.VoidTransactionResponse.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.VoidTransactionResponse.Builder.Errors(System.Collections.Generic.IList{Square.Models.Error})">
            <summary>
            Errors.
            </summary>
            <param name="errors"> errors. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.VoidTransactionResponse.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> VoidTransactionResponse. </returns>
        </member>
        <member name="T:Square.Models.WageSetting">
            <summary>
            WageSetting.
            </summary>
        </member>
        <member name="M:Square.Models.WageSetting.#ctor(System.String,System.Collections.Generic.IList{Square.Models.JobAssignment},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.WageSetting"/> class.
            </summary>
            <param name="teamMemberId">team_member_id.</param>
            <param name="jobAssignments">job_assignments.</param>
            <param name="isOvertimeExempt">is_overtime_exempt.</param>
            <param name="version">version.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.WageSetting.TeamMemberId">
            <summary>
            The unique ID of the `TeamMember` whom this wage setting describes.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Square.Models.WageSetting.JobAssignments" -->
        <member name="P:Square.Models.WageSetting.IsOvertimeExempt">
            <summary>
            Whether the team member is exempt from the overtime rules of the seller country.
            </summary>
        </member>
        <member name="P:Square.Models.WageSetting.Version">
            <summary>
            Used for resolving concurrency issues; request will fail if version
            provided does not match server version at time of request. If not provided,
            Square executes a blind write, potentially overwriting data from another write. Read
            about [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency)
            in Square APIs for more information.
            </summary>
        </member>
        <member name="P:Square.Models.WageSetting.CreatedAt">
            <summary>
            The timestamp in RFC 3339 format describing when the wage setting object was created.
            Ex: "2018-10-04T04:00:00-07:00" or "2019-02-05T12:00:00Z"
            </summary>
        </member>
        <member name="P:Square.Models.WageSetting.UpdatedAt">
            <summary>
            The timestamp in RFC 3339 format describing when the wage setting object was last updated.
            Ex: "2018-10-04T04:00:00-07:00" or "2019-02-05T12:00:00Z"
            </summary>
        </member>
        <member name="M:Square.Models.WageSetting.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.WageSetting.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.WageSetting.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.WageSetting.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.WageSetting.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.WageSetting.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.WageSetting.Builder.TeamMemberId(System.String)">
            <summary>
            TeamMemberId.
            </summary>
            <param name="teamMemberId"> teamMemberId. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WageSetting.Builder.JobAssignments(System.Collections.Generic.IList{Square.Models.JobAssignment})">
            <summary>
            JobAssignments.
            </summary>
            <param name="jobAssignments"> jobAssignments. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WageSetting.Builder.IsOvertimeExempt(System.Nullable{System.Boolean})">
            <summary>
            IsOvertimeExempt.
            </summary>
            <param name="isOvertimeExempt"> isOvertimeExempt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WageSetting.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WageSetting.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WageSetting.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WageSetting.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> WageSetting. </returns>
        </member>
        <member name="T:Square.Models.WorkweekConfig">
            <summary>
            WorkweekConfig.
            </summary>
        </member>
        <member name="M:Square.Models.WorkweekConfig.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Square.Models.WorkweekConfig"/> class.
            </summary>
            <param name="startOfWeek">start_of_week.</param>
            <param name="startOfDayLocalTime">start_of_day_local_time.</param>
            <param name="id">id.</param>
            <param name="version">version.</param>
            <param name="createdAt">created_at.</param>
            <param name="updatedAt">updated_at.</param>
        </member>
        <member name="P:Square.Models.WorkweekConfig.Id">
            <summary>
            UUID for this object
            </summary>
        </member>
        <member name="P:Square.Models.WorkweekConfig.StartOfWeek">
            <summary>
            The days of the week.
            </summary>
        </member>
        <member name="P:Square.Models.WorkweekConfig.StartOfDayLocalTime">
            <summary>
            The local time at which a business week cuts over. Represented as a
            string in `HH:MM` format (`HH:MM:SS` is also accepted, but seconds are
            truncated).
            </summary>
        </member>
        <member name="P:Square.Models.WorkweekConfig.Version">
            <summary>
            Used for resolving concurrency issues; request will fail if version
            provided does not match server version at time of request. If not provided,
            Square executes a blind write; potentially overwriting data from another
            write.
            </summary>
        </member>
        <member name="P:Square.Models.WorkweekConfig.CreatedAt">
            <summary>
            A read-only timestamp in RFC 3339 format; presented in UTC
            </summary>
        </member>
        <member name="P:Square.Models.WorkweekConfig.UpdatedAt">
            <summary>
            A read-only timestamp in RFC 3339 format; presented in UTC
            </summary>
        </member>
        <member name="M:Square.Models.WorkweekConfig.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.WorkweekConfig.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.WorkweekConfig.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Square.Models.WorkweekConfig.ToString(System.Collections.Generic.List{System.String})">
            <summary>
            ToString overload.
            </summary>
            <param name="toStringOutput">List of strings.</param>
        </member>
        <member name="M:Square.Models.WorkweekConfig.ToBuilder">
            <summary>
            Converts to builder object.
            </summary>
            <returns> Builder. </returns>
        </member>
        <member name="T:Square.Models.WorkweekConfig.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.Models.WorkweekConfig.Builder.StartOfWeek(System.String)">
            <summary>
            StartOfWeek.
            </summary>
            <param name="startOfWeek"> startOfWeek. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WorkweekConfig.Builder.StartOfDayLocalTime(System.String)">
            <summary>
            StartOfDayLocalTime.
            </summary>
            <param name="startOfDayLocalTime"> startOfDayLocalTime. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WorkweekConfig.Builder.Id(System.String)">
            <summary>
            Id.
            </summary>
            <param name="id"> id. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WorkweekConfig.Builder.Version(System.Nullable{System.Int32})">
            <summary>
            Version.
            </summary>
            <param name="version"> version. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WorkweekConfig.Builder.CreatedAt(System.String)">
            <summary>
            CreatedAt.
            </summary>
            <param name="createdAt"> createdAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WorkweekConfig.Builder.UpdatedAt(System.String)">
            <summary>
            UpdatedAt.
            </summary>
            <param name="updatedAt"> updatedAt. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.Models.WorkweekConfig.Builder.Build">
            <summary>
            Builds class object.
            </summary>
            <returns> WorkweekConfig. </returns>
        </member>
        <member name="T:Square.Server">
            <summary>
            Available servers.
            </summary>
        </member>
        <member name="F:Square.Server.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="T:Square.SquareClient">
            <summary>
            The gateway for the SDK. This class acts as a factory for Api and holds the
            configuration of the SDK.
            </summary>
        </member>
        <member name="P:Square.SquareClient.MobileAuthorizationApi">
            <summary>
            Gets MobileAuthorizationApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.OAuthApi">
            <summary>
            Gets OAuthApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.V1EmployeesApi">
            <summary>
            Gets V1EmployeesApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.V1TransactionsApi">
            <summary>
            Gets V1TransactionsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.ApplePayApi">
            <summary>
            Gets ApplePayApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.BankAccountsApi">
            <summary>
            Gets BankAccountsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.BookingsApi">
            <summary>
            Gets BookingsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.CashDrawersApi">
            <summary>
            Gets CashDrawersApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.CatalogApi">
            <summary>
            Gets CatalogApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.CustomersApi">
            <summary>
            Gets CustomersApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.CustomerGroupsApi">
            <summary>
            Gets CustomerGroupsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.CustomerSegmentsApi">
            <summary>
            Gets CustomerSegmentsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.DevicesApi">
            <summary>
            Gets DevicesApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.DisputesApi">
            <summary>
            Gets DisputesApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.EmployeesApi">
            <summary>
            Gets EmployeesApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.InventoryApi">
            <summary>
            Gets InventoryApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.InvoicesApi">
            <summary>
            Gets InvoicesApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.LaborApi">
            <summary>
            Gets LaborApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.LocationsApi">
            <summary>
            Gets LocationsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.CheckoutApi">
            <summary>
            Gets CheckoutApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.TransactionsApi">
            <summary>
            Gets TransactionsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.LoyaltyApi">
            <summary>
            Gets LoyaltyApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.MerchantsApi">
            <summary>
            Gets MerchantsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.OrdersApi">
            <summary>
            Gets OrdersApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.PaymentsApi">
            <summary>
            Gets PaymentsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.RefundsApi">
            <summary>
            Gets RefundsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.SitesApi">
            <summary>
            Gets SitesApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.SnippetsApi">
            <summary>
            Gets SnippetsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.SubscriptionsApi">
            <summary>
            Gets SubscriptionsApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.TeamApi">
            <summary>
            Gets TeamApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.TerminalApi">
            <summary>
            Gets TerminalApi.
            </summary>
        </member>
        <member name="P:Square.SquareClient.AdditionalHeaders">
            <summary>
            Gets the additional headers.
            </summary>
        </member>
        <member name="P:Square.SquareClient.SdkVersion">
            <summary>
            Gets the current version of the SDK.
            </summary>
        </member>
        <member name="P:Square.SquareClient.HttpClientConfiguration">
            <summary>
            Gets the configuration of the Http Client associated with this client.
            </summary>
        </member>
        <member name="P:Square.SquareClient.SquareVersion">
            <summary>
            Gets SquareVersion.
            Square Connect API versions.
            </summary>
        </member>
        <member name="P:Square.SquareClient.Environment">
            <summary>
            Gets Environment.
            Current API environment.
            </summary>
        </member>
        <member name="P:Square.SquareClient.CustomUrl">
            <summary>
            Gets CustomUrl.
            Sets the base URL requests are made to. Defaults to `https://connect.squareup.com`.
            </summary>
        </member>
        <member name="P:Square.SquareClient.AuthManagers">
            <summary>
            Gets auth managers.
            </summary>
        </member>
        <member name="P:Square.SquareClient.HttpClient">
            <summary>
            Gets http client.
            </summary>
        </member>
        <member name="P:Square.SquareClient.HttpCallBack">
            <summary>
            Gets http callback.
            </summary>
        </member>
        <member name="P:Square.SquareClient.AccessTokenCredentials">
            <summary>
            Gets the credentials to use with AccessToken.
            </summary>
        </member>
        <member name="P:Square.SquareClient.AccessToken">
            <summary>
            Gets the access token to use with OAuth 2 authentication.
            </summary>
        </member>
        <member name="M:Square.SquareClient.GetBaseUri(Square.Server)">
            <summary>
            Gets the URL for a particular alias in the current environment and appends
            it with template parameters.
            </summary>
            <param name="alias">Default value:DEFAULT.</param>
            <returns>Returns the baseurl.</returns>
        </member>
        <member name="M:Square.SquareClient.ToBuilder">
            <summary>
            Creates an object of the SquareClient using the values provided for the builder.
            </summary>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.SquareClient.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Square.SquareClient.CreateFromEnvironment">
            <summary>
            Creates the client using builder.
            </summary>
            <returns> SquareClient.</returns>
        </member>
        <member name="M:Square.SquareClient.GetBaseUriParameters">
            <summary>
            Makes a list of the BaseURL parameters.
            </summary>
            <returns>Returns the parameters list.</returns>
        </member>
        <member name="T:Square.SquareClient.Builder">
            <summary>
            Builder class.
            </summary>
        </member>
        <member name="M:Square.SquareClient.Builder.AccessToken(System.String)">
            <summary>
            Sets credentials for AccessToken.
            </summary>
            <param name="accessToken">AccessToken.</param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.SquareClient.Builder.SquareVersion(System.String)">
            <summary>
            Sets SquareVersion.
            </summary>
            <param name="squareVersion"> SquareVersion. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.SquareClient.Builder.Environment(Square.Environment)">
            <summary>
            Sets Environment.
            </summary>
            <param name="environment"> Environment. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.SquareClient.Builder.CustomUrl(System.String)">
            <summary>
            Sets CustomUrl.
            </summary>
            <param name="customUrl"> CustomUrl. </param>
            <returns> Builder. </returns>
        </member>
        <member name="M:Square.SquareClient.Builder.HttpClientConfig(System.Action{Square.Http.Client.HttpClientConfiguration.Builder})">
            <summary>
            Sets HttpClientConfig.
            </summary>
            <param name="action"> Action. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.SquareClient.Builder.AdditionalHeaders(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            Sets the AdditionalHeaders for the Builder.
            </summary>
            <param name="additionalHeaders"> additional headers. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.SquareClient.Builder.AddAdditionalHeader(System.String,System.String)">
            <summary>
            Adds AdditionalHeader.
            </summary>
            <param name="headerName"> header name. </param>
            <param name="headerValue"> header value. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.SquareClient.Builder.HttpClient(Square.Http.Client.IHttpClient)">
            <summary>
            Sets the IHttpClient for the Builder.
            </summary>
            <param name="httpClient"> http client. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.SquareClient.Builder.AuthManagers(System.Collections.Generic.IDictionary{System.String,Square.Authentication.IAuthManager})">
            <summary>
            Sets the authentication managers for the Builder.
            </summary>
            <param name="authManagers"> auth managers. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.SquareClient.Builder.HttpCallBack(Square.Http.Client.HttpCallBack)">
            <summary>
            Sets the HttpCallBack for the Builder.
            </summary>
            <param name="httpCallBack"> http callback. </param>
            <returns>Builder.</returns>
        </member>
        <member name="M:Square.SquareClient.Builder.Build">
            <summary>
            Creates an object of the SquareClient using the values provided for the builder.
            </summary>
            <returns>SquareClient.</returns>
        </member>
        <member name="T:Square.Utilities.ApiHelper">
            <summary>
            ApiHelper class contains a bunch of helper methods.
            </summary>
        </member>
        <member name="F:Square.Utilities.ApiHelper.DateTimeFormat">
            <summary>
            DateTime format to use for parsing and converting dates.
            </summary>
        </member>
        <member name="M:Square.Utilities.ApiHelper.JsonSerialize(System.Object,Newtonsoft.Json.JsonConverter)">
            <summary>
            JSON Serialization of a given object.
            </summary>
            <param name="obj">The object to serialize into JSON.</param>
            <param name="converter">The converter to use for date time conversion.</param>
            <returns>The serialized Json string representation of the given object.</returns>
        </member>
        <member name="M:Square.Utilities.ApiHelper.JsonDeserialize``1(System.String,Newtonsoft.Json.JsonConverter)">
            <summary>
            JSON Deserialization of the given json string.
            </summary>
            <param name="json">The json string to deserialize.</param>
            <param name="converter">The converter to use for date time conversion.</param>
            <typeparam name="T">The type of the object to desialize into.</typeparam>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Square.Utilities.ApiHelper.AppendUrlWithTemplateParameters(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Replaces template parameters in the given url.
            </summary>
            <param name="queryBuilder">The queryBuilder to replace the template parameters.</param>
            <param name="parameters">The parameters to replace in the url.</param>
        </member>
        <member name="M:Square.Utilities.ApiHelper.AppendUrlWithQueryParameters(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},Square.Utilities.ArrayDeserialization,System.Char)">
            <summary>
            Appends the given set of parameters to the given query string.
            </summary>
            <param name="queryBuilder">The queryBuilder to append the parameters.</param>
            <param name="parameters">The parameters to append.</param>
            <param name="arrayDeserializationFormat">arrayDeserializationFormat.</param>
            <param name="separator">separator.</param>
        </member>
        <member name="M:Square.Utilities.ApiHelper.CleanUrl(System.Text.StringBuilder)">
            <summary>
            Validates and processes the given query Url to clean empty slashes.
            </summary>
            <param name="queryBuilder">The given query Url to process.</param>
            <returns>Clean Url as string.</returns>
        </member>
        <member name="M:Square.Utilities.ApiHelper.PrepareFormFieldsFromObject(System.String,System.Object,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Reflection.PropertyInfo,Square.Utilities.ArrayDeserialization)">
            <summary>
            Prepares parameters for serialization as a form encoded string by flattening complex Types such as Collections and Models to a list of KeyValuePairs, where each value is a string representation of the original Type.
            </summary>
            <param name="name">name.</param>
            <param name="value">value.</param>
            <param name="keys">keys.</param>
            <param name="propInfo">propInfo.</param>
            <param name="arrayDeserializationFormat">arrayDeserializationFormat.</param>
            <returns>List of KeyValuePairs.</returns>
        </member>
        <member name="M:Square.Utilities.ApiHelper.Add(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Add/update entries with the new dictionary.
            </summary>
            <param name="dictionary">first dictionary.</param>
            <param name="dictionary2">second dictionary.</param>
        </member>
        <member name="M:Square.Utilities.ApiHelper.RunTaskSynchronously(System.Threading.Tasks.Task)">
            <summary>
            Runs asynchronous tasks synchronously and throws the first caught exception.
            </summary>
            <param name="t">The task to be run synchronously.</param>
        </member>
        <member name="M:Square.Utilities.ApiHelper.DeepCloneObject``1(``0)">
            <summary>
            Creates a deep clone of an object by serializing it into a json string
            and then deserializing back into an object.
            </summary>
            <typeparam name="T">The type of the obj parameter as well as the return object.</typeparam>
            <param name="obj">The object to clone.</param>
            <returns>Template.</returns>
        </member>
        <member name="M:Square.Utilities.ApiHelper.IndexOf(System.Text.StringBuilder,System.String)">
            <summary>
            StringBuilder extension method to implement IndexOf functionality.
            This does a StringComparison.Ordinal kind of comparison.
            </summary>
            <param name="stringBuilder">The string builder to find the index in.</param>
            <param name="strCheck">The string to locate in the string builder.</param>
            <returns>The index of string inside the string builder.</returns>
        </member>
        <member name="M:Square.Utilities.ApiHelper.FlattenCollection(System.Collections.ICollection,Square.Utilities.ArrayDeserialization,System.Char,System.Boolean,System.String)">
            <summary>
            Used for flattening a collection of objects into a string.
            </summary>
            <param name="array">Array of elements to flatten.</param>
            <param name="fmt">Format string to use for array flattening.</param>
            <param name="separator">Separator to use for string concat.</param>
            <returns>Representative string made up of array elements.</returns>
        </member>
        <member name="T:Square.Utilities.ArrayDeserialization">
            <summary>
            This enumeration has ArrayDeserialization format.
            </summary>
        </member>
        <member name="F:Square.Utilities.ArrayDeserialization.Indexed">
            <summary>
            Example: variableName[0] = value1
            </summary>
        </member>
        <member name="F:Square.Utilities.ArrayDeserialization.UnIndexed">
            <summary>
            Example: variableName[] = value1
            </summary>
        </member>
        <member name="F:Square.Utilities.ArrayDeserialization.Plain">
            <summary>
            Example: variableName = value1, variableName = value 2
            </summary>
        </member>
        <member name="F:Square.Utilities.ArrayDeserialization.Csv">
            <summary>
            Example: variableName = value1,value2
            </summary>
        </member>
        <member name="F:Square.Utilities.ArrayDeserialization.Tsv">
            <summary>
            Example: variableName = value1\tvalue2
            </summary>
        </member>
        <member name="F:Square.Utilities.ArrayDeserialization.Psv">
            <summary>
            Example: variableName = value1|value2
            </summary>
        </member>
        <member name="F:Square.Utilities.ArrayDeserialization.None">
            <summary>
            Example: Ignore format
            </summary>
        </member>
    </members>
</doc>
